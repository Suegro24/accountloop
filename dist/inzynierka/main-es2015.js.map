{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/budget-chart/budget-chart.component.ts","./src/app/components/budget-chart/budget-chart.component.html","./src/app/components/budget-forecasting-chart/budget-forecasting-chart.component.ts","./src/app/components/budget-forecasting-chart/budget-forecasting-chart.component.html","./src/app/components/budget-list/budget-list.component.ts","./src/app/components/budget-list/budget-list.component.html","./src/app/components/firm-budget-list/firm-budget-list.component.ts","./src/app/components/firm-budget-list/firm-budget-list.component.html","./src/app/components/firm-users-list/firm-users-list.component.ts","./src/app/components/firm-users-list/firm-users-list.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/modals/add-budget-goal-modal/add-budget-goal-modal.component.ts","./src/app/components/modals/add-budget-goal-modal/add-budget-goal-modal.component.html","./src/app/components/modals/add-category-modal/add-category-modal.component.ts","./src/app/components/modals/add-category-modal/add-category-modal.component.html","./src/app/components/modals/add-expense-modal/add-expense-modal.component.ts","./src/app/components/modals/add-expense-modal/add-expense-modal.component.html","./src/app/components/modals/add-income-modal/add-income-modal.component.ts","./src/app/components/modals/add-income-modal/add-income-modal.component.html","./src/app/components/modals/add-money-to-goal-modal/add-money-to-goal-modal.component.ts","./src/app/components/modals/add-money-to-goal-modal/add-money-to-goal-modal.component.html","./src/app/components/modals/change-password-modal/change-password-modal.component.ts","./src/app/components/modals/change-password-modal/change-password-modal.component.html","./src/app/components/modals/change-permissions-modal/change-permissions-modal.component.ts","./src/app/components/modals/change-permissions-modal/change-permissions-modal.component.html","./src/app/components/modals/confirm-leaving-firm/confirm-leaving-firm.component.ts","./src/app/components/modals/confirm-leaving-firm/confirm-leaving-firm.component.html","./src/app/components/modals/delete-goal-modal/delete-goal-modal.component.ts","./src/app/components/modals/delete-goal-modal/delete-goal-modal.component.html","./src/app/components/modals/edit-category-modal/edit-category-modal.component.ts","./src/app/components/modals/edit-category-modal/edit-category-modal.component.html","./src/app/components/modals/edit-firm-data-modal/edit-firm-data-modal.component.ts","./src/app/components/modals/edit-firm-data-modal/edit-firm-data-modal.component.html","./src/app/components/modals/edit-goal-modal/edit-goal-modal.component.ts","./src/app/components/modals/edit-goal-modal/edit-goal-modal.component.html","./src/app/components/modals/edit-profile-modal/edit-profile-modal.component.ts","./src/app/components/modals/edit-profile-modal/edit-profile-modal.component.html","./src/app/components/modals/firm-create-modal/firm-create-modal.component.ts","./src/app/components/modals/firm-create-modal/firm-create-modal.component.html","./src/app/components/modals/firm-search-modal/firm-search-modal.component.ts","./src/app/components/modals/firm-search-modal/firm-search-modal.component.html","./src/app/components/modals/open-mail-modal/open-mail-modal.component.ts","./src/app/components/modals/open-mail-modal/open-mail-modal.component.html","./src/app/components/modals/send-mail-modal/send-mail-modal.component.ts","./src/app/components/modals/send-mail-modal/send-mail-modal.component.html","./src/app/components/modals/send-money-dialog/send-money-dialog.component.ts","./src/app/components/modals/send-money-dialog/send-money-dialog.component.html","./src/app/components/modals/show-account-change-details/show-account-change-details.component.ts","./src/app/components/modals/show-account-change-details/show-account-change-details.component.html","./src/app/components/modals/show-new-password-modal/show-new-password-modal.component.ts","./src/app/components/modals/show-new-password-modal/show-new-password-modal.component.html","./src/app/components/modals/unblock-user-modal/unblock-user-modal.component.ts","./src/app/components/modals/unblock-user-modal/unblock-user-modal.component.html","./src/app/components/pipes/budget-list-pipe/budget-list-pipe.pipe.ts","./src/app/components/pipes/money-transfer-pipe/money-transfer-pipe.pipe.ts","./src/app/components/sidenav/sidenav.component.ts","./src/app/components/sidenav/sidenav.component.html","./src/app/components/vertical-bar-chart-incomes-expenses/vertical-bar-chart-incomes-expenses.component.ts","./src/app/components/vertical-bar-chart-incomes-expenses/vertical-bar-chart-incomes-expenses.component.html","./src/app/guards/auth.guard.ts","./src/app/guards/role-guard-service.service.ts","./src/app/layout/account/account.component.ts","./src/app/layout/account/account.component.html","./src/app/layout/admin/admin-category/admin-category.component.ts","./src/app/layout/admin/admin-category/admin-category.component.html","./src/app/layout/admin/admin-login/admin-login.component.ts","./src/app/layout/admin/admin-login/admin-login.component.html","./src/app/layout/admin/admin-messages/admin-messages.component.ts","./src/app/layout/admin/admin-messages/admin-messages.component.html","./src/app/layout/admin/admin-panel/admin-panel.component.ts","./src/app/layout/admin/admin-panel/admin-panel.component.html","./src/app/layout/admin/user-list/user-list.component.ts","./src/app/layout/admin/user-list/user-list.component.html","./src/app/layout/chat/chat.component.ts","./src/app/layout/chat/chat.component.html","./src/app/layout/firm-charts/firm-charts.component.ts","./src/app/layout/firm-charts/firm-charts.component.html","./src/app/layout/firm-user-budget/firm-user-budget.component.ts","./src/app/layout/firm-user-budget/firm-user-budget.component.html","./src/app/layout/firm/firm.component.ts","./src/app/layout/firm/firm.component.html","./src/app/layout/helpdesk/helpdesk.component.ts","./src/app/layout/helpdesk/helpdesk.component.html","./src/app/layout/login/login.component.ts","./src/app/layout/login/login.component.html","./src/app/layout/manage-firm/manage-firm.component.ts","./src/app/layout/manage-firm/manage-firm.component.html","./src/app/layout/money-transfer-firm/money-transfer-firm.component.ts","./src/app/layout/money-transfer-firm/money-transfer-firm.component.html","./src/app/layout/money-transfer/money-transfer.component.ts","./src/app/layout/money-transfer/money-transfer.component.html","./src/app/layout/overview/overview.component.ts","./src/app/layout/overview/overview.component.html","./src/app/layout/profile/profile.component.ts","./src/app/layout/profile/profile.component.html","./src/app/layout/register/register.component.ts","./src/app/layout/register/register.component.html","./src/app/layout/settings/settings.component.ts","./src/app/layout/settings/settings.component.html","./src/app/layout/user-charts/user-charts.component.ts","./src/app/layout/user-charts/user-charts.component.html","./src/app/models/budget.ts","./src/app/models/budgetGoals.ts","./src/app/models/category.ts","./src/app/models/chatMessageDto.ts","./src/app/models/expense.ts","./src/app/models/firm.ts","./src/app/models/income.ts","./src/app/models/mail.ts","./src/app/models/settings.ts","./src/app/models/user.ts","./src/app/services/auth.service.ts","./src/app/services/category.service.ts","./src/app/services/chart.service.ts","./src/app/services/connection.service.ts","./src/app/services/event-emitter.service.ts","./src/app/services/firm.service.ts","./src/app/services/mail.service.ts","./src/app/services/user.service.ts","./src/app/services/web-socket.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, HostListener} from '@angular/core';\nimport { UserService } from './services/user.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  title = 'inzynierka';\n  userId;\n\n  constructor(private userService: UserService) {}\n\n  ngOnInit() {\n    if (!localStorage.getItem('user')) { return; }\n    this.userId = localStorage.getItem('user');\n    this.userService.getUserStatus(this.userId).subscribe(res => {\n      if (res === false) { this.changeStatus(); }\n    });\n  }\n\n  @HostListener('window:unload', ['$event'])\n  unloadHandler(event) {\n    this.changeStatus();\n}\n\n  @HostListener('window:beforeunload', ['$event'])\n  beforeunloadHandler($event) {\n    this.changeStatus();\n    return false;\n}\n\n  changeStatus() {\n    this.userService.changeOnlineStatus(this.userId).subscribe();\n  }\n\n  doBeforeUnload() {\n    this.changeStatus();\n  }\n\n  doUnload() {\n    this.changeStatus();\n  }\n\n}\n\n\n","<router-outlet (window:beforeunload)=\"doBeforeUnload()\" (window:unload)=\"doUnload()\"></router-outlet>\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTableModule } from '@angular/material/table';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { OverviewComponent } from './layout/overview/overview.component';\nimport { BudgetListComponent } from './components/budget-list/budget-list.component';\nimport { RegisterComponent } from './layout/register/register.component';\nimport { LoginComponent } from './layout/login/login.component';\nimport { AddIncomeModalComponent } from './components/modals/add-income-modal/add-income-modal.component';\nimport { AddExpenseModalComponent } from './components/modals//add-expense-modal/add-expense-modal.component';\nimport { BudgetChartComponent } from './components/budget-chart/budget-chart.component';\nimport { ProfileComponent } from './layout/profile/profile.component';\nimport { EditProfileModalComponent } from './components/modals/edit-profile-modal/edit-profile-modal.component';\nimport { FirmComponent } from './layout/firm/firm.component';\nimport { FirmSearchModalComponent } from './components/modals/firm-search-modal/firm-search-modal.component';\nimport { FirmCreateModalComponent } from './components/modals/firm-create-modal/firm-create-modal.component';\nimport { FirmBudgetListComponent } from './components/firm-budget-list/firm-budget-list.component';\nimport { FirmUsersListComponent } from './components/firm-users-list/firm-users-list.component';\nimport { ManageFirmComponent } from './layout/manage-firm/manage-firm.component';\nimport { ChangePermissionsModalComponent } from './components/modals/change-permissions-modal/change-permissions-modal.component';\nimport { EditFirmDataModalComponent } from './components/modals/edit-firm-data-modal/edit-firm-data-modal.component';\nimport { ConfirmLeavingFirmComponent } from './components/modals/confirm-leaving-firm/confirm-leaving-firm.component';\nimport { SidenavComponent } from './components/sidenav/sidenav.component';\nimport { UserChartsComponent } from './layout/user-charts/user-charts.component';\nimport { AccountComponent } from './layout/account/account.component';\nimport { BudgetListPipePipe } from './components/pipes/budget-list-pipe/budget-list-pipe.pipe';\nimport { VerticalBarChartIncomesExpensesComponent } from './components/vertical-bar-chart-incomes-expenses/vertical-bar-chart-incomes-expenses.component';\nimport { MoneyTransferComponent } from './layout/money-transfer/money-transfer.component';\nimport { MoneyTransferPipePipe } from './components/pipes/money-transfer-pipe/money-transfer-pipe.pipe';\nimport { SendMoneyDialogComponent } from './components/modals/send-money-dialog/send-money-dialog.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { FirmChartsComponent } from './layout/firm-charts/firm-charts.component';\nimport { ChatComponent } from './layout/chat/chat.component';\nimport { SettingsComponent } from './layout/settings/settings.component';\nimport { HelpdeskComponent } from './layout/helpdesk/helpdesk.component';\nimport { AdminLoginComponent } from './layout/admin/admin-login/admin-login.component';\nimport { AdminPanelComponent } from './layout/admin/admin-panel/admin-panel.component';\nimport { RoleGuardService } from './guards/role-guard-service.service';\nimport { OpenMailModalComponent } from './components/modals/open-mail-modal/open-mail-modal.component';\nimport { UserListComponent } from './layout/admin/user-list/user-list.component';\nimport { AdminMessagesComponent } from './layout/admin/admin-messages/admin-messages.component';\nimport { SendMailModalComponent } from './components/modals/send-mail-modal/send-mail-modal.component';\nimport { AdminCategoryComponent } from './layout/admin/admin-category/admin-category.component';\nimport { AddCategoryModalComponent } from './components/modals/add-category-modal/add-category-modal.component';\nimport { ShowNewPasswordModalComponent } from './components/modals/show-new-password-modal/show-new-password-modal.component';\nimport { EditCategoryModalComponent } from './components/modals/edit-category-modal/edit-category-modal.component';\nimport { MoneyTransferFirmComponent } from './layout/money-transfer-firm/money-transfer-firm.component';\nimport { BudgetForecastingChartComponent } from './components/budget-forecasting-chart/budget-forecasting-chart.component';\nimport { AddBudgetGoalModalComponent } from './components/modals/add-budget-goal-modal/add-budget-goal-modal.component';\nimport { ChangePasswordModalComponent } from './components/modals/change-password-modal/change-password-modal.component';\nimport { EventEmitterService } from './services/event-emitter.service';\nimport { UnblockUserModalComponent } from './components/modals/unblock-user-modal/unblock-user-modal.component';\nimport { FirmUserBudgetComponent } from './layout/firm-user-budget/firm-user-budget.component';\nimport { ShowAccountChangeDetailsComponent } from './components/modals/show-account-change-details/show-account-change-details.component';\nimport { AddMoneyToGoalModalComponent } from './components/modals/add-money-to-goal-modal/add-money-to-goal-modal.component';\nimport { EditGoalModalComponent } from './components/modals/edit-goal-modal/edit-goal-modal.component';\nimport { DeleteGoalModalComponent } from './components/modals/delete-goal-modal/delete-goal-modal.component';\n\nconst routes: Routes = [\n  {path: '', redirectTo: 'logowanie', pathMatch: 'full'},\n  {path: 'logowanie', component: LoginComponent},\n  {path: 'rejestracja', component: RegisterComponent},\n  {path: 'przeglad', component: OverviewComponent, canActivate: [AuthGuard]},\n  {path: 'profil', component: ProfileComponent, canActivate: [AuthGuard]},\n  {path: 'firma', component: FirmComponent, canActivate: [AuthGuard]},\n  {path: 'zarzadzaj-firma', component: ManageFirmComponent, canActivate: [AuthGuard]},\n  {path: 'uzytkownik-wykresy', component: UserChartsComponent, canActivate: [AuthGuard]},\n  {path: 'konto', component: AccountComponent, canActivate: [AuthGuard]},\n  {path: 'przelew', component: MoneyTransferComponent, canActivate: [AuthGuard]},\n  {path: 'przelew-firma', component: MoneyTransferFirmComponent, canActivate: [AuthGuard]},\n  {path: 'firma-wykresy', component: FirmChartsComponent, canActivate: [AuthGuard]},\n  {path: 'chat', component: ChatComponent, canActivate: [AuthGuard]},\n  {path: 'firma-konto', component: FirmUserBudgetComponent, canActivate: [AuthGuard]},\n  {path: 'ustawienia', component: SettingsComponent, canActivate: [AuthGuard]},\n  {path: 'pomoc', component: HelpdeskComponent, canActivate: [AuthGuard]},\n  {path: 'admin', component: AdminLoginComponent},\n  {path: 'admin-panel', component: AdminPanelComponent, canActivate: [RoleGuardService], data: {expectedRole: 'admin'}},\n  {path: 'admin-panel-users', component: UserListComponent, canActivate: [RoleGuardService], data: {expectedRole: 'admin'}},\n  {path: 'admin-panel-messages', component: AdminMessagesComponent, canActivate: [RoleGuardService], data: {expectedRole: 'admin'}},\n  {path: 'admin-panel-categories', component: AdminCategoryComponent, canActivate: [RoleGuardService], data: {expectedRole: 'admin'}},\n  {path: '**', redirectTo: 'logowanie'}\n];\n\nconst Material = [\n  MatSidenavModule,\n  MatIconModule,\n  MatButtonModule,\n  MatToolbarModule,\n  MatDividerModule,\n  MatListModule,\n  MatInputModule,\n  MatSelectModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatDialogModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatMenuModule,\n  MatTabsModule,\n  MatBadgeModule,\n  MatTooltipModule,\n  MatSnackBarModule,\n  MatPaginatorModule,\n  MatTableModule,\n  ClipboardModule,\n  MatProgressBarModule,\n  MatSliderModule,\n  MatChipsModule,\n  MatProgressSpinnerModule\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    OverviewComponent,\n    BudgetListComponent,\n    RegisterComponent,\n    LoginComponent,\n    AddIncomeModalComponent,\n    AddExpenseModalComponent,\n    BudgetChartComponent,\n    ProfileComponent,\n    EditProfileModalComponent,\n    FirmComponent,\n    FirmSearchModalComponent,\n    FirmCreateModalComponent,\n    FirmBudgetListComponent,\n    FirmUsersListComponent,\n    ManageFirmComponent,\n    ChangePermissionsModalComponent,\n    EditFirmDataModalComponent,\n    ConfirmLeavingFirmComponent,\n    SidenavComponent,\n    UserChartsComponent,\n    AccountComponent,\n    BudgetListPipePipe,\n    VerticalBarChartIncomesExpensesComponent,\n    MoneyTransferComponent,\n    MoneyTransferPipePipe,\n    SendMoneyDialogComponent,\n    FirmChartsComponent,\n    ChatComponent,\n    SettingsComponent,\n    HelpdeskComponent,\n    AdminLoginComponent,\n    AdminPanelComponent,\n    OpenMailModalComponent,\n    AdminMessagesComponent,\n    SendMailModalComponent,\n    UserListComponent,\n    AdminCategoryComponent,\n    AddCategoryModalComponent,\n    ShowNewPasswordModalComponent,\n    EditCategoryModalComponent,\n    MoneyTransferFirmComponent,\n    BudgetForecastingChartComponent,\n    AddBudgetGoalModalComponent,\n    ChangePasswordModalComponent,\n    UnblockUserModalComponent,\n    FirmUserBudgetComponent,\n    ShowAccountChangeDetailsComponent,\n    AddMoneyToGoalModalComponent,\n    EditGoalModalComponent,\n    DeleteGoalModalComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot(routes),\n    Material,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    NgxChartsModule\n  ],\n  providers: [AuthGuard, RoleGuardService, EventEmitterService, {provide: Window, useValue: window}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, OnChanges, SimpleChange, SimpleChanges } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { ChartService } from 'src/app/services/chart.service';\n\n@Component({\n  selector: 'app-budget-chart',\n  templateUrl: './budget-chart.component.html',\n  styleUrls: ['./budget-chart.component.scss']\n})\nexport class BudgetChartComponent implements OnChanges, OnInit {\n\n  constructor(private userService: UserService, private chartService: ChartService) { }\n\n  userId = localStorage.getItem('user');\n  user\n  chartContainer: any;\n  @Input() chartType: string;\n  @Input() chartDate: Date = new Date();\n  monthName = this.chartService.getMonthName(this.chartDate.getMonth());\n\n  view = ['400','300']\n  showLabels: boolean = true;\n  animations: boolean = true;\n  xAxis: boolean = true;\n  yAxis: boolean = true;\n  showYAxisLabel: boolean = true;\n  showXAxisLabel: boolean = true;\n  xAxisLabel: string = 'Dzień';\n  yAxisLabel: string = 'Ilość pieniędzy';\n\n  ngOnInit(): void {\n    this.userService.getUser(this.userId).subscribe(\n      res => {\n        this.user = res;\n        if (this.chartType == 'user') {\n          this.chartService.getCurrentMonthChart(this.user._id, this.chartDate.getMonth().toString()).subscribe(res => {\n            this.chartContainer = res;\n          })\n        }\n        else if (this.chartType == 'firm') {\n          this.chartService.getFirmCurrentMothChart(this.user.firmId, this.chartDate.getMonth().toString()).subscribe(res => {\n            this.chartContainer = res;\n          })\n        }\n      },\n      error => console.error(error)\n    )}\n\n  getChart(month) {\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n      if (this.chartType == 'user') {\n        this.chartService.getCurrentMonthChart(this.user._id, month).subscribe(res => {\n          this.chartContainer = res;\n        })\n      }\n      else if (this.chartType == 'firm') {\n        this.chartService.getFirmCurrentMothChart(this.user.firmId, month).subscribe(res => {\n          this.chartContainer = res;\n        })\n      }\n    },\n    error => console.error(error))\n\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.monthName = this.chartService.getMonthName(this.chartDate.getMonth());\n    this.getChart(this.chartDate.getMonth());\n  }\n\n}\n","<div class=\"chart-container\">\n  <h2 class=\"title\">Stan konta - {{monthName}}</h2>\n  <ngx-charts-line-chart\n  [view]=\"view\"\n  [showXAxisLabel]=\"showXAxisLabel\"\n  [showYAxisLabel]=\"showYAxisLabel\"\n  [xAxis]=\"xAxis\"\n  [yAxis]=\"yAxis\"\n  [xAxisLabel]=\"xAxisLabel\"\n  [yAxisLabel]=\"yAxisLabel\"\n  [results]=\"chartContainer\"\n    >\n  </ngx-charts-line-chart>\n</div>\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { ChartService } from 'src/app/services/chart.service';\n\n@Component({\n  selector: 'app-budget-forecasting-chart',\n  templateUrl: './budget-forecasting-chart.component.html',\n  styleUrls: ['./budget-forecasting-chart.component.scss']\n})\nexport class BudgetForecastingChartComponent implements OnInit {\n\n  userId = localStorage.getItem('user');\n  user\n  chartContainer: any;\n  @Input() chartType: string;\n  @Input() chartDate: Date = new Date();\n  monthName = this.chartService.getMonthName(this.chartDate.getMonth());\n\n  view = ['500','300']\n  showLabels: boolean = true;\n  animations: boolean = true;\n  xAxis: boolean = true;\n  yAxis: boolean = true;\n  showYAxisLabel: boolean = true;\n  showXAxisLabel: boolean = true;\n  xAxisLabel: string = 'Dzień';\n  yAxisLabel: string = 'Ilość pieniędzy';\n\n  multi = [\n    {\n      \"name\": \"Germany\",\n      \"series\": [\n        {\n          \"name\": \"1990\",\n          \"value\": 62000000\n        },\n        {\n          \"name\": \"2010\",\n          \"value\": 73000000\n        },\n        {\n          \"name\": \"2011\",\n          \"value\": 89400000\n        }\n      ]\n    },\n  \n    {\n      \"name\": \"USA\",\n      \"series\": [\n        {\n          \"name\": \"1990\",\n          \"value\": 250000000\n        },\n        {\n          \"name\": \"2010\",\n          \"value\": 309000000\n        },\n        {\n          \"name\": \"2011\",\n          \"value\": 311000000\n        }\n      ]\n    },\n  \n    {\n      \"name\": \"France\",\n      \"series\": [\n        {\n          \"name\": \"1990\",\n          \"value\": 58000000\n        },\n        {\n          \"name\": \"2010\",\n          \"value\": 50000020\n        },\n        {\n          \"name\": \"2011\",\n          \"value\": 58000000\n        }\n      ]\n    },\n    {\n      \"name\": \"UK\",\n      \"series\": [\n        {\n          \"name\": \"1990\",\n          \"value\": 57000000\n        },\n        {\n          \"name\": \"2010\",\n          \"value\": 62000000\n        }\n      ]\n    }\n  ];\n  \n\n  constructor(private userService: UserService, private chartService: ChartService) { }\n\n  ngOnInit(): void {\n    this.userService.getUser(this.userId).subscribe(\n      res => {\n        this.user = res;\n        if (this.chartType == 'user') {\n          this.chartService.getForecastingChart(this.user._id).subscribe(res => {\n            this.chartContainer = res;\n          })\n        }\n        else if (this.chartType == 'firm') {\n          this.chartService.getFirmForecastingChart(this.user.firmId).subscribe(res => {\n            this.chartContainer = res;\n          })\n        }\n      },\n      error => console.error(error)\n    )}\n\n}\n","<div class=\"chart-forecasting-container\">\n    <h2 class=\"title\">Prognozowany stan - {{monthName}}</h2>\n    <ngx-charts-line-chart\n    [view]=\"view\"\n    [showXAxisLabel]=\"showXAxisLabel\"\n    [showYAxisLabel]=\"showYAxisLabel\"\n    [xAxis]=\"xAxis\"\n    [yAxis]=\"yAxis\"\n    [xAxisLabel]=\"xAxisLabel\"\n    [yAxisLabel]=\"yAxisLabel\"\n    [results]=\"chartContainer\"\n      >\n    </ngx-charts-line-chart>\n  </div>\n  \n  ","import { Component, Input, OnInit } from '@angular/core';\nimport { Budget } from 'src/app/models/budget';\nimport { UserService } from 'src/app/services/user.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AddIncomeModalComponent } from '../modals/add-income-modal/add-income-modal.component';\nimport { AddExpenseModalComponent } from '../modals/add-expense-modal/add-expense-modal.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ShowAccountChangeDetailsComponent } from '../modals/show-account-change-details/show-account-change-details.component';\n\n@Component({\n  selector: 'app-budget-list',\n  templateUrl: './budget-list.component.html',\n  styleUrls: ['./budget-list.component.scss']\n})\nexport class BudgetListComponent implements OnInit {\n\n  user;\n  userId = localStorage.getItem('user');\n  accountChangesContainer: any;\n  userTotalMoney;\n  @Input() type: string;\n\n  constructor(private userService: UserService, public dialog: MatDialog, private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.refreshList();\n  }\n\n  refreshList() {\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n      if (this.type === 'firm') {\n        if (!res.firmBudget) { this.user.firmBudget = new Budget(null, [], []); }\n        this.accountChangesContainer = [...res.firmBudget.income, ...res.firmBudget.expense];\n        this.accountChangesContainer = this.accountChangesContainer.sort((a, b) => Date.parse(b.date) - Date.parse(a.date));\n        this.userTotalMoney = res.firmBudget.money;\n        console.log(res);\n      } else {\n        if (!res.budget) { this.user.budget = new Budget(null, [], []); }\n        this.accountChangesContainer = [...res.budget.income, ...res.budget.expense];\n        this.accountChangesContainer = this.accountChangesContainer.sort((a, b) => Date.parse(b.date) - Date.parse(a.date));\n        this.userTotalMoney = res.budget.money;\n        this.accountChangesContainer = this.accountChangesContainer.filter(change => {\n          if (change.status !== 'Waiting' || change.type === 'expense') { return change; }\n        });\n      }\n    });\n  }\n\n  addIncome() {\n    const ref = this.dialog.open(AddIncomeModalComponent, {\n      data: {\n        id: this.user._id,\n        budgetType: 'user'\n      }\n    });\n    ref.afterClosed().subscribe(res => {\n      if (res === true) {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Poprawnie dodano przychód', 'OK', {\n          duration: 5000,\n          horizontalPosition: 'right',\n          panelClass: ['snackbar-success']\n        });\n      }\n      this.refreshList();\n    });\n  }\n\n  addExpense() {\n    const ref = this.dialog.open(AddExpenseModalComponent, {\n      disableClose: true,\n      data: {\n        id: this.user._id,\n        budgetType: 'user'\n      }\n    });\n    ref.afterClosed().subscribe((res) => {\n      if (res === 0) {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Poprawnie dodano wydatek', 'OK', {\n          duration: 5000,\n          horizontalPosition: 'right',\n          panelClass: ['snackbar-success']\n        });\n      }\n      else if (res === 2) {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Operacja nie powiodła się ponieważ ujemny stan budżetu jest niedozwolony', 'OK', {\n          duration: 5000,\n          horizontalPosition: 'right',\n          panelClass: ['snackbar-warn']\n        });\n      }\n      this.refreshList();\n    });\n  }\n\n  showDetails(data) {\n    this.dialog.open(ShowAccountChangeDetailsComponent, {\n      data: {\n        data\n      }\n    });\n  }\n}\n","<div class=\"budget-container\">\n    <div class=\"budget-balance\">\n        <p>Stan konta: {{(userTotalMoney || 0) | currency:' '}}zł </p>\n    </div>\n    <mat-divider></mat-divider>\n\n    <div class=\"no-account-changes\" *ngIf=\"accountChangesContainer?.length == 0\">\n        <p>Brak danych</p>\n    </div>\n    <mat-list class=\"budget-changes-list\">\n            <mat-list-item (click)=\"showDetails(accountChange)\" *ngFor=\"let accountChange of accountChangesContainer | slice:0:10\" >\n                <mat-divider></mat-divider>\n                <mat-icon mat-list-icon>credit_card</mat-icon>\n                <div mat-line> \n                    <span> {{accountChange.name}}</span> \n                    <span class=\"align-right\" [class]=\"accountChange.type=='income' ? 'income': 'expense'\">{{accountChange.money | currency: ' '}}zł</span>  </div>\n                <div mat-line> {{accountChange.category.name}} <span class=\"align-right\">{{accountChange.date | date:'dd.MM.yyyy'}}</span> </div>\n            </mat-list-item>\n    </mat-list>\n\n    <div *ngIf=\"type !== 'firm'\" class=\"button-container\">\n        <button mat-fab class=\"button-income\" (click)=\"addIncome()\"><mat-icon>add</mat-icon></button>\n        <button mat-fab class=\"button-expense\" (click)=\"addExpense()\"><mat-icon>remove</mat-icon></button>\n    </div>\n    \n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AddIncomeModalComponent } from '../modals/add-income-modal/add-income-modal.component';\nimport { FirmService } from 'src/app/services/firm.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { AddExpenseModalComponent } from '../modals/add-expense-modal/add-expense-modal.component';\nimport { ShowAccountChangeDetailsComponent } from '../modals/show-account-change-details/show-account-change-details.component';\n\n@Component({\n  selector: 'app-firm-budget-list',\n  templateUrl: './firm-budget-list.component.html',\n  styleUrls: ['./firm-budget-list.component.scss']\n})\nexport class FirmBudgetListComponent implements OnInit {\n\n  user;\n  userId = localStorage.getItem('user');\n  firm;\n  accountChangesContainer;\n  acceptedBudgetChanges = 0;\n\n  constructor(private dialog: MatDialog, private firmService: FirmService, private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.refresh();\n  }\n\n  refresh() {\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n\n      this.firmService.getFirm(this.user.firmId).subscribe(response => {\n        this.firm = response;\n        this.accountChangesContainer = [...this.firm.firmBudget.income, ...this.firm.firmBudget.expense];\n        this.accountChangesContainer = this.accountChangesContainer.sort((a, b) => Date.parse(b.date) - Date.parse(a.date));\n        this.accountChangesContainer.forEach(change => {\n          if (change.status === 'Accepted') { this.acceptedBudgetChanges++; }\n        });\n      });\n    });\n  }\n\n  addIncome() {\n    const ref = this.dialog.open(AddIncomeModalComponent, {\n      data: {\n        id: this.user._id,\n        firmId: this.firm._id,\n        budgetType: 'firm'\n      }\n    });\n    ref.afterClosed().subscribe(() => {\n      this.refresh();\n    });\n  }\n\n  addExpense() {\n    const ref = this.dialog.open(AddExpenseModalComponent, {\n      data: {\n        id: this.user._id,\n        firmId: this.firm._id,\n        budgetType: 'firm'\n      }\n    });\n    ref.afterClosed().subscribe(() => {\n      this.refresh();\n    });\n  }\n\n  showDetails(data) {\n    this.dialog.open(ShowAccountChangeDetailsComponent, {\n      data: {\n        data\n      }\n    });\n  }\n\n}\n","<div class=\"firm-budget-container\">\n    <div class=\"firm-budget-balance\">\n        <p>Stan konta: {{(firm?.firmBudget?.money || 0) | currency:' '}}zł </p>\n        <mat-divider></mat-divider>\n    </div>\n\n    <div class=\"no-account-changes\" *ngIf=\"acceptedBudgetChanges == 0\">\n        <p>Brak danych</p>\n    </div>\n    <mat-list (click)=\"showDetails(accountChange)\" *ngFor=\"let accountChange of accountChangesContainer\" class=\"budget-changes-list\">\n        <mat-list-item *ngIf=\"accountChange.status == 'Accepted'\">\n            <mat-icon mat-list-icon>credit_card</mat-icon>\n            <div mat-line> \n                <span> {{accountChange.name}}</span> \n                <span class=\"align-right\" [class]=\"accountChange.type=='income' ? 'income': 'expense'\">{{accountChange.money | currency: ' '}}zł</span>  </div>\n            <div mat-line> {{accountChange.category.name}} <span class=\"align-right\">{{accountChange.date | date:'dd.MM.yyyy'}}</span> </div>\n            <mat-divider></mat-divider>\n        </mat-list-item>\n    </mat-list>\n\n    <div class=\"button-container\">\n        <button mat-fab type=\"button\" class=\"button-income\" (click)=\"addIncome()\"><mat-icon>add</mat-icon></button>\n        <button mat-fab type=\"button\" class=\"button-expense\" (click)=\"addExpense()\"><mat-icon>remove</mat-icon></button>\n    </div>\n    \n</div>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { FirmService } from 'src/app/services/firm.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-firm-users-list',\n  templateUrl: './firm-users-list.component.html',\n  styleUrls: ['./firm-users-list.component.scss']\n})\nexport class FirmUsersListComponent implements OnInit {\n\n  userId = localStorage.getItem('user');\n  user;\n  users;\n\n  constructor(private userService: UserService, private firmService: FirmService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n\n      this.firmService.getFirm(this.user.firmId).subscribe(response => {\n        this.users = response;\n        this.users = this.users.users;\n\n        this.users = this.users.sort((userOne, userTwo) => {\n          if (userOne.firmStatus < userTwo.firmStatus) { return 1; }\n          if (userOne.firmStatus > userTwo.firmStatus) { return -1; }\n          return 0;\n        });\n      });\n    });\n  }\n\n  goToProfile(id) {\n    this.router.navigate(['/profil'], {queryParams: {id}});\n  }\n\n\n}\n","<div class=\"users-list-container\">\n    <h2 class=\"title\">Lista pracowników</h2>\n    <mat-divider></mat-divider>\n    <mat-list *ngFor=\"let user of users\">\n        <mat-list-item (click)=\"goToProfile(user._id)\" *ngIf=\"user.firmStatus > 0\"> <mat-icon color=\"primary\"> {{user.firmStatus == 3 ? 'looks_3' : user.firmStatus == 2 ? 'looks_two' : 'looks_one'}} </mat-icon> {{user?.name}} {{user?.surname}} \n        <span [class]='user.isOnline ? \"green-circle\" : \"red-circle\"'>  </span>\n        </mat-list-item>\n    </mat-list>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer>\n    <div class=\"footer-container\">\n        <p>Dominik Puchała &copy; 2020</p>\n        <p>Uniwersytet Rzeszowski</p>\n    </div>\n</footer>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from 'src/app/models/user';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  user: User;\n  userId;\n  isUserLoggedIn: boolean;\n  @Input() isAdminLoggedIn: boolean = false;\n  @Input() pageName: string;\n\n  constructor(public userService: UserService, private router: Router) { }\n\n  ngOnInit(): void {\n    if (!localStorage.getItem('user')) {\n      this.isUserLoggedIn = false;\n    } \n    else {\n      this.isUserLoggedIn = true;\n      this.userId = localStorage.getItem('user');\n      this.userService.getUser(this.userId).subscribe(\n        res => {\n          this.user = res;\n        },\n        error => console.error(error),\n      )\n    } \n  }\n\n  logout() {\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    this.userService.changeOnlineStatus(this.userId).subscribe();\n    this.router.navigate(['/logowanie']);\n  }\n\n}\n","<header>\n    <nav class=\"nav\" *ngIf=\"userService.loggedIn()\">\n        <div class=\"current-page\">\n            {{pageName}}\n        </div>\n        <ul class=\"nav-list\">\n            <li *ngIf=\"!isAdminLoggedIn\" class=\"nav-item\" routerLink=\"/profil\"> {{user?.name | titlecase}} </li>\n            <li *ngIf=\"isAdminLoggedIn\" class=\"nav-item-disabled\" > {{user?.name | titlecase}} </li>\n            <li class=\"nav-item\" (click)=\"logout()\">Wyloguj się</li>\n        </ul>\n    </nav>\n    <nav class=\"nav\" *ngIf=\"!userService.loggedIn()\">\n        <img class=\"header-logo\" src=\"../../../assets/images/logo.png\" alt=\"logo\">\n        <ul class=\"nav-list\">\n            <li class=\"nav-item\" routerLink=\"/logowanie\">Zaloguj się</li>\n            <li class=\"nav-item\" routerLink=\"/rejestracja\">Zarejestruj się</li>\n        </ul>\n    </nav>\n</header>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { BudgetGoals } from 'src/app/models/budgetGoals';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-add-budget-goal-modal',\n  templateUrl: './add-budget-goal-modal.component.html',\n  styleUrls: ['./add-budget-goal-modal.component.scss']\n})\nexport class AddBudgetGoalModalComponent implements OnInit {\n\n  budgetGoalModel = new BudgetGoals('', null, 0, false, null);\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any, private userService: UserService) { }\n\n  ngOnInit(): void {\n  }\n\n  addBudgetGoal() {\n    this.userService.addBudgetGoal(this.budgetGoalModel, this.data.userId).subscribe();\n  }\n\n}\n","<form class=\"budget-goal-form\" #BudgetGoalForm=\"ngForm\">\n    <h2 class=\"title\">Cel</h2>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Nazwa</mat-label>\n        <input matInput class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"budgetGoalModel.name\" #name=\"ngModel\" required>\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group icon-form-group\">\n        <mat-label>Kwota do uzbierania</mat-label>\n        <input matInput class=\"form-control\" type=\"number\" name=\"goal\" [(ngModel)]=\"budgetGoalModel.goal\" #goal=\"ngModel\" required>\n    </mat-form-field>\n\n    <button mat-button class=\"btn-success\" type=\"button\" [mat-dialog-close]=\"true\" [disabled]=\"BudgetGoalForm.form.invalid\" (click)=\"addBudgetGoal()\">Dodaj cel</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { Category } from 'src/app/models/category';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-add-category-modal',\n  templateUrl: './add-category-modal.component.html',\n  styleUrls: ['./add-category-modal.component.scss']\n})\nexport class AddCategoryModalComponent implements OnInit {\n\n  categoryModel = new Category('', '', [null]);\n\n  constructor(private categoryService: CategoryService, public dialogRef: MatDialogRef<AddCategoryModalComponent>) { }\n\n  ngOnInit(): void {\n  }\n\n  addCategory() {\n    this.categoryService.addCategory(this.categoryModel).subscribe(res => {\n      this.dialogRef.close(true);\n    })\n  }\n\n}\n","<form class=\"category-form\" #CategoryForm=\"ngForm\">\n    <h2 class=\"title\">Kategoria</h2>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Nazwa</mat-label>\n        <input matInput class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"categoryModel.name\" #name=\"ngModel\" required>\n        <!-- <div *ngIf=\"name.errors && name.touched\">\n            <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group icon-form-group\">\n        <mat-label>Ikona</mat-label>\n        <input matInput class=\"form-control\" type=\"text\" name=\"icon\" [(ngModel)]=\"categoryModel.icon\" #icon=\"ngModel\" required>\n        <!-- <div *ngIf=\"name.errors && name.touched\">\n            <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n        <span class=\"transfer\"><a target=\"_blank\" href=\"https://material.io/resources/icons/?style=baseline\"><mat-icon>info</mat-icon></a></span>\n    </mat-form-field>\n\n    <button mat-button class=\"btn-success\" type=\"button\" mat-dialog-close [disabled]=\"CategoryForm.form.invalid\" (click)=\"addCategory()\">Dodaj kategorie</button>\n</form>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { Expense } from 'src/app/models/expense';\nimport { UserService } from 'src/app/services/user.service';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Budget } from 'src/app/models/budget';\nimport { FirmService } from 'src/app/services/firm.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CategoryService } from 'src/app/services/category.service';\n\n@Component({\n  selector: 'app-add-expense-modal',\n  templateUrl: './add-expense-modal.component.html',\n  styleUrls: ['./add-expense-modal.component.scss']\n})\nexport class AddExpenseModalComponent implements OnInit {\n\n  user: any = [];\n  firm;\n  expenseModel = new Expense('', 0, null, null, 'expense', 'Accepted', '');\n  categories: any = [];\n  defaultCategory: any;\n\n  constructor(private userService: UserService, @Inject(MAT_DIALOG_DATA) public data: any, private firmService: FirmService,\n              public dialogRef: MatDialogRef<AddExpenseModalComponent>, private categoryService: CategoryService) { }\n\n  ngOnInit(): void {\n    this.userService.getUser(this.data.id).subscribe(res => {\n      this.user = res;\n      if (!this.user.budget) { this.user.budget = new Budget(null, [], []); }\n    });\n    if (this.data.budgetType === 'firm') {\n    this.firmService.getFirm(this.data.firmId).subscribe(res => {\n      this.firm = res;\n    });\n  }\n\n    this.categoryService.getAllCategories().subscribe(res => {\n    this.categories = res;\n    this.expenseModel.category = res[0];\n  });\n  }\n\n  addExpense() {\n    if (this.user.settings.isBudgetNegativeValueAllowed === false && this.user.budget.money - this.expenseModel.money < 0) {\n      this.dialogRef.close(2);\n      return;\n    }\n    if (this.data.budgetType === 'user') {\n      this.user.budget.expense.push(this.expenseModel);\n      this.userService.changeBudgetUser(this.user._id, this.user).subscribe();\n    }\n    else {\n      if (this.user.firmStatus > 1) { this.expenseModel.status = 'Accepted'; }\n      else { this.expenseModel.status = 'Waiting'; }\n      this.firm.firmBudget.expense.push(this.expenseModel);\n      this.firmService.editFirm(this.firm._id, this.firm).subscribe();\n    }\n    this.manageCategory();\n    this.dialogRef.close(0);\n  }\n\n  manageCategory() {\n    this.categoryService.getCategory(this.expenseModel.category.name).subscribe(res => {\n      const words = this.expenseModel.name.toLowerCase().split(' ');\n      words.map(word => {\n        res.matches.map(match => {\n          if (match.name === word) {\n            match.amount++;\n            return;\n          }\n        });\n      });\n      this.categoryService.updateCategory(res).subscribe();\n  });\n}\n\nchooseCategory() {\n  this.categoryService.chooseCategory(this.expenseModel.name).subscribe(res => {\n    if (res == null) { this.expenseModel.category = this.categories[0]; }\n    else { this.expenseModel.category = this.categories[res]; }\n  });\n}\n\n}\n","<form class=\"expense-form\" #ExpenseForm=\"ngForm\">\n    <h2 class=\"title\">Wydatek</h2>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Nazwa</mat-label>\n        <input (change)=\"chooseCategory()\" matInput class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"expenseModel.name\" #name=\"ngModel\" required>\n        <!-- <div *ngIf=\"name.errors && name.touched\">\n            <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Ilość pieniędzy</mat-label>\n        <input matInput class=\"form-control\" type=\"number\" min=\"0\" name=\"money\" [(ngModel)]=\"expenseModel.money\" #money=\"ngModel\" required>\n        <!-- <div *ngIf=\"name.errors && name.touched\">\n            <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group\" appearance=\"fill\">\n        <mat-label>Data</mat-label>\n        <input matInput #date=\"ngModel\" name=\"date\" [matDatepicker]=\"picker\" [(ngModel)]=\"expenseModel.date\" required>\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Rodzaj</mat-label>\n        <mat-select [(value)]=\"expenseModel.category\" class=\"select\" name=\"category\" [(ngModel)]=\"expenseModel.category\" required>\n            <mat-option *ngFor=\"let category of categories\" [value]=\"category\"> {{category.name}} </mat-option>\n        </mat-select>\n        \n    </mat-form-field>\n\n    <div class=\"buttons-container\">\n        <button mat-button class=\"btn-success\" type=\"button\" [mat-dialog-close]=\"true\" [disabled]=\"ExpenseForm.form.invalid\" (click)=\"addExpense()\">Dodaj wydatek</button>\n        <button mat-button class=\"btn-warn\" type=\"button\" [mat-dialog-close]=\"false\" >Cofnij</button>\n    </div>\n</form>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { Income } from 'src/app/models/income';\nimport { UserService } from 'src/app/services/user.service';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Budget } from 'src/app/models/budget';\nimport { FirmService } from 'src/app/services/firm.service';\nimport { CategoryService } from 'src/app/services/category.service';\n\n@Component({\n  selector: 'app-add-income-modal',\n  templateUrl: './add-income-modal.component.html',\n  styleUrls: ['./add-income-modal.component.scss']\n})\nexport class AddIncomeModalComponent implements OnInit {\n\n  user: any = [];\n  firm;\n  incomeModel = new Income('', 0, null, {name: '', icon: '', matches: []}, 'income', 'Accepted', '', '', '', '');\n  categories: any = [];\n  defaultCategory: any;\n  budgetGoals;\n  selectedBudgetGoal;\n\n  constructor(private userService: UserService, private firmService: FirmService,\n              @Inject(MAT_DIALOG_DATA) public data: any, public dialogRef: MatDialogRef<AddIncomeModalComponent>,\n              private categoryService: CategoryService) { }\n\n  ngOnInit(): void {\n      this.userService.getUser(this.data.id).subscribe(res => {\n        this.user = res;\n        this.budgetGoals = res.budgetGoals;\n        this.budgetGoals = this.budgetGoals.filter(goal => {\n          if (!goal.isCompleted) { return goal; }\n        });\n        if (!this.user.budget) { this.user.budget = new Budget(null, [], []); }\n      });\n      if (this.data.budgetType === 'firm') {\n      this.firmService.getFirm(this.data.firmId).subscribe(res => {\n        this.firm = res;\n      });\n    }\n\n      this.categoryService.getAllCategories().subscribe(res => {\n      this.categories = res;\n      this.incomeModel.category = res[0];\n    });\n  }\n\n  manageCategory() {\n    this.categoryService.getCategory(this.incomeModel.category.name).subscribe(res => {\n      const words = this.incomeModel.name.toLowerCase().split(' ');\n      words.map(word => {\n        res.matches.map(match => {\n          if (match.name === word) {\n            match.amount++;\n            return;\n          }\n        });\n      });\n\n      this.categoryService.updateCategory(res).subscribe();\n  });\n}\n\n  addIncome() {\n    if (this.data.budgetType === 'user') {\n      this.user.budget.income.push(this.incomeModel);\n      this.userService.changeBudgetUser(this.user._id, this.user).subscribe();\n      if (this.selectedBudgetGoal !== undefined) {\n        this.userService.updateBudgetGoal(this.selectedBudgetGoal, this.data.id, this.incomeModel.money).subscribe();\n      }\n\n      this.dialogRef.close(true);\n    }\n    else {\n      if (this.user.firmStatus > 1) { this.incomeModel.status = 'Accepted'; }\n      else { this.incomeModel.status = 'Waiting'; }\n      this.firm.firmBudget.income.push(this.incomeModel);\n      this.firmService.editFirm(this.firm._id, this.firm).subscribe();\n    }\n    this.manageCategory();\n  }\n\n  chooseCategory() {\n    this.categoryService.chooseCategory(this.incomeModel.name).subscribe(res => {\n      if (res == null) { this.incomeModel.category = this.categories[0]; }\n      else { this.incomeModel.category = this.categories[res]; }\n    });\n  }\n\n}\n","<form class=\"income-form\" #IncomeForm=\"ngForm\">\n    <h2 class=\"title\">Dochód</h2>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Nazwa</mat-label>\n        <input (change)=\"chooseCategory()\" matInput class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"incomeModel.name\" #name=\"ngModel\" required>\n        <!-- <div *ngIf=\"name.errors && name.touched\">\n            <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Ilość pieniędzy</mat-label>\n        <input matInput class=\"form-control\" type=\"number\" min=\"0\" name=\"money\" [(ngModel)]=\"incomeModel.money\" #money=\"ngModel\" required>\n        <!-- <div *ngIf=\"name.errors && name.touched\">\n            <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group\" appearance=\"fill\">\n        <mat-label>Data</mat-label>\n        <input matInput #date=\"ngModel\" name=\"date\" [matDatepicker]=\"picker\" [(ngModel)]=\"incomeModel.date\" required>\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n\n    <mat-form-field *ngIf=\"data.budgetType!='firm'\" class=\"form-group\">\n        <mat-label>Cel</mat-label>\n        <mat-select [(value)]=\"selectedBudgetGoal\" class=\"select\" name=\"budgetGoal\" [(ngModel)]=\"selectedBudgetGoal\">\n            <mat-option *ngFor=\"let goal of budgetGoals\" [value]=\"goal\"> {{goal.name}} </mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Rodzaj</mat-label>\n        <mat-select [(value)]=\"incomeModel.category\" class=\"select\" name=\"category\" [(ngModel)]=\"incomeModel.category\" required>\n            <mat-option *ngFor=\"let category of categories\" [value]=\"category\"> {{category.name}} </mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <button mat-button class=\"btn-success\" type=\"button\" mat-dialog-close [disabled]=\"IncomeForm.form.invalid\" (click)=\"addIncome()\">Dodaj dochód</button>\n</form>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-add-money-to-goal-modal',\n  templateUrl: './add-money-to-goal-modal.component.html',\n  styleUrls: ['./add-money-to-goal-modal.component.scss']\n})\nexport class AddMoneyToGoalModalComponent implements OnInit {\n\n  money: number;\n  userId;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any, private userService: UserService,\n              public dialogRef: MatDialogRef<AddMoneyToGoalModalComponent>) { }\n\n  ngOnInit(): void {\n  }\n\n  addIncome() {\n    this.userId = localStorage.getItem('user');\n    this.userService.updateBudgetGoal(this.data.goal, this.userId, this.money).subscribe(_ => {\n      this.dialogRef.close(true);\n    });\n  }\n\n}\n","<form class=\"income-form\" #IncomeForm=\"ngForm\">\n    <h2 class=\"title\">Dodaj pieniądze do celu - {{data.goal.name}} </h2>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Ilość pieniędzy</mat-label>\n        <input matInput class=\"form-control\" type=\"number\" min=\"0.01\" step=\"1\" name=\"money\" [(ngModel)]=\"money\" required>\n    </mat-form-field>\n\n    <button mat-button class=\"btn-success\" type=\"button\" mat-dialog-close [disabled]=\"IncomeForm.form.invalid\" (click)=\"addIncome()\">Dodaj</button>\n</form>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-change-password-modal',\n  templateUrl: './change-password-modal.component.html',\n  styleUrls: ['./change-password-modal.component.scss']\n})\nexport class ChangePasswordModalComponent implements OnInit {\n\n  changePasswordModel = {\n    password: '',\n    newPassword: ''\n  };\n\n  constructor(private userService: UserService, @Inject(MAT_DIALOG_DATA) public data: any, private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n  }\n\n  changePassword() {\n    this.userService.changePassword(this.data.userId, this.changePasswordModel.password, this.changePasswordModel.newPassword)\n    .subscribe(res => {\n      this.userService.playNotificationsSound();\n      this.snackBar.open('Zmieniono hasło', 'OK', {\n          horizontalPosition: 'right',\n          duration: 5000,\n          panelClass: ['snackbar-success']\n        });\n    },\n    error => {\n      if (error.error === 'Invalid password') {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Nieprawidłowe hasło', 'OK', {\n          horizontalPosition: 'right',\n          duration: 5000,\n          panelClass: ['snackbar-warn']\n        });\n      }\n    });\n  }\n\n}\n","<div class=\"change-permissions-container\">\n    <form id=\"ChangePasswordForm\" class=\"change-password-form\" #ChangePasswordForm=\"ngForm\">\n\n        <h2 class=\"title\">Zmień hasło</h2>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Stare hasło</mat-label>\n            <input matInput class=\"form-control\" type=\"password\" name=\"password\" [(ngModel)]=\"changePasswordModel.password\" #password=\"ngModel\" required>\n        </mat-form-field>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Nowe hasło</mat-label>\n            <input matInput class=\"form-control\" type=\"password\" name=\"newPassword\" [(ngModel)]=\"changePasswordModel.newPassword\" #newPassword=\"ngModel\" pattern=\".{8,}\" required>\n        </mat-form-field>\n\n        <button class=\"change-button\" type=\"button\" [disabled]=\"ChangePasswordForm.form.invalid\" mat-raised-button mat-dialog-close (click)=\"changePassword()\">Zmień</button>\n    \n    </form>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { User } from 'src/app/models/user';\n\n@Component({\n  selector: 'app-change-permissions-modal',\n  templateUrl: './change-permissions-modal.component.html',\n  styleUrls: ['./change-permissions-modal.component.scss']\n})\nexport class ChangePermissionsModalComponent implements OnInit {\n\n  user;\n  changePermissionsModel = new User('', '', '', '', '', '', '', null, '', null, null, '', 0, null, [], 0, null, null, null, [], null);\n  permissions: number;\n\n  constructor(private userService: UserService, @Inject(MAT_DIALOG_DATA) public data: any ) { }\n\n  ngOnInit(): void {\n    this.userService.getUser(this.data.userId).subscribe(res => {\n      this.user = res;\n    });\n\n    this.userService.getUser(this.data.employeeId).subscribe(res => {\n      this.changePermissionsModel = res;\n      this.permissions = res.firmStatus;\n    });\n  }\n\n  changePermissions() {\n    this.userService.changeUserPermissions(this.data.employeeId, this.permissions).subscribe();\n  }\n\n}\n","<div class=\"change-permissions-container\">\n    <form id=\"ChangePermissionsForm\" class=\"change-permissions-form\" #ChangePermissionsForm=\"ngForm\">\n\n        <h2 class=\"title\">Zmień uprawnienia użytkownika {{changePermissionsModel.name}} {{changePermissionsModel.surname}} </h2>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Uprawnienia</mat-label>\n            <mat-select class=\"select\" name=\"permissions\" [(ngModel)]=\"permissions\" required>\n                <mat-option *ngIf=\"user?.firmStatus >= 3\" value=3>Właściciel</mat-option>\n                <mat-option *ngIf=\"user?.firmStatus >= 2\" value=2>Kierownik</mat-option>\n                <mat-option value=1>Pracownik</mat-option>\n            </mat-select>\n        </mat-form-field>\n\n        <div class=\"button-container\">\n            <button mat-raised-button type=\"button\" class=\"button--success\" [mat-dialog-close]=\"true\" [disabled]=\"ChangePermissionsForm.form.invalid\" (click)=\"changePermissions()\">Zmień</button>\n            <button mat-raised-button type=\"button\" class=\"button--delete\" [mat-dialog-close]=\"true\">Zamknij</button>\n        </div>\n    \n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-confirm-leaving-firm',\n  templateUrl: './confirm-leaving-firm.component.html',\n  styleUrls: ['./confirm-leaving-firm.component.scss']\n})\nexport class ConfirmLeavingFirmComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"confirm-leaving-container\">\n    <h2 class=\"title\">Uwaga</h2>\n    <p>Po opuszczeniu tej firmy, zostanie ona usunięta, ponieważ jesteś jedynym właścicielem tej firmy. Aby tego uniknąć nadaj uprawnienia właściciela innej osobie</p>\n\n    <div class=\"button-container\">\n        <button mat-button class=\"button--delete\" type=\"button\" [mat-dialog-close]=\"true\">Opuść mimo to</button>\n        <button mat-button type=\"button\" [mat-dialog-close]=\"false\">Cofnij</button>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-delete-goal-modal',\n  templateUrl: './delete-goal-modal.component.html',\n  styleUrls: ['./delete-goal-modal.component.scss']\n})\nexport class DeleteGoalModalComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <p>Czy jesteś pewny, że chcesz usunąć cel ?</p>\n    <div class=\"buttons-container\">\n        <button class=\"delete-button\" mat-raised-button [mat-dialog-close]=\"true\">Usuń</button>\n        <button class=\"cancel-button\" mat-raised-button mat-dialog-close >Anuluj</button>\n    </div>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { Category } from 'src/app/models/category';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CategoryService } from 'src/app/services/category.service';\n\n@Component({\n  selector: 'app-edit-category-modal',\n  templateUrl: './edit-category-modal.component.html',\n  styleUrls: ['./edit-category-modal.component.scss']\n})\nexport class EditCategoryModalComponent implements OnInit {\n\n  categoryEditModel = new Category('', '', [null]);\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any, private categoryService: CategoryService) { }\n\n  ngOnInit(): void {\n    this.categoryEditModel = this.data.category;\n  }\n\n  editCategory() {\n    this.categoryService.updateCategory(this.categoryEditModel).subscribe();\n  }\n\n}\n","<form class=\"category-form\" #CategoryEditForm=\"ngForm\">\n    <h2 class=\"title\">Edycja Kategorii</h2>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Nazwa</mat-label>\n        <input matInput class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"categoryEditModel.name\" #name=\"ngModel\" required>\n        <!-- <div *ngIf=\"name.errors && name.touched\">\n            <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group icon-form-group\">\n        <mat-label>Ikona</mat-label>\n        <input matInput class=\"form-control\" type=\"text\" name=\"icon\" [(ngModel)]=\"categoryEditModel.icon\" #icon=\"ngModel\" required>\n        <!-- <div *ngIf=\"name.errors && name.touched\">\n            <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n        <span class=\"transfer\"><a target=\"_blank\" href=\"https://material.io/resources/icons/?style=baseline\"><mat-icon>info</mat-icon></a></span>\n    </mat-form-field>\n\n    <button mat-button class=\"btn-success\" type=\"button\" [mat-dialog-close]=\"true\" [disabled]=\"CategoryEditForm.form.invalid\" (click)=\"editCategory()\">Edytuj</button>\n</form>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { Firm } from 'src/app/models/firm';\nimport { FirmService } from 'src/app/services/firm.service';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-edit-firm-data-modal',\n  templateUrl: './edit-firm-data-modal.component.html',\n  styleUrls: ['./edit-firm-data-modal.component.scss']\n})\nexport class EditFirmDataModalComponent implements OnInit {\n\n  firmModel = new Firm('', {'country': '', 'city': '', 'street': ''}, [], null, false, []);\n\n  constructor(private firmService: FirmService, @Inject(MAT_DIALOG_DATA) public data: any ) { }\n\n  ngOnInit(): void {\n    this.firmService.getFirm(this.data.id).subscribe(res => {\n      this.firmModel = res;\n    })\n  }\n\n  editFirmData() {\n    this.firmService.editFirm(this.data.id, this.firmModel).subscribe();\n  }\n\n}\n","<form class=\"firm-form\" #firmForm=\"ngForm\">\n    <h2 class=\"title\">Edytuj dane firmy</h2>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Nazwa</mat-label>\n        <input matInput class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"firmModel.name\" #name=\"ngModel\" pattern=\".{1,20}\" required>\n        <!-- <div *ngIf=\"name.errors && name.touched\">\n            <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Państwo</mat-label>\n        <input matInput class=\"form-control\" type=\"text\" name=\"country\" [(ngModel)]=\"firmModel.address.country\" #country=\"ngModel\" pattern=\".{1,20}\" required>\n        <!-- <div *ngIf=\"surname.errors && surname.touched\">\n            <p class=\"text--warn\" *ngIf=\"surname.errors.required\">Nazwisko jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"surname.errors.pattern\">Nazwisko nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Miasto</mat-label>\n        <input matInput class=\"form-control\" type=\"text\" name=\"city\" [(ngModel)]=\"firmModel.address.city\" #city=\"ngModel\" required>\n        <!-- <div *ngIf=\"email.errors && email.touched\">\n            <p class=\"text--warn\" *ngIf=\"email.errors.required\">Email jest wymagany</p>\n            <p class=\"text--warn\" *ngIf=\"email.errors.pattern\">Nieprawidłowy adres email</p>\n        </div> -->\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Adres</mat-label>\n        <input matInput class=\"form-control\" type=\"text\" name=\"street\" [(ngModel)]=\"firmModel.address.street\" #street=\"ngModel\">\n        <!-- <div *ngIf=\"phone.errors && phone.touched\">\n            <p class=\"text--warn\" *ngIf=\"phone.errors.pattern\">Numer telefonu musi składać się z 9 cyfr</p>\n        </div> -->\n    </mat-form-field>\n\n    <button mat-button class=\"btn-success\" type=\"button\" mat-dialog-close [disabled]=\"firmForm.form.invalid\" (click)=\"editFirmData()\">Zaktualizuj dane</button>\n</form>\n\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BudgetGoals } from 'src/app/models/budgetGoals';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-edit-goal-modal',\n  templateUrl: './edit-goal-modal.component.html',\n  styleUrls: ['./edit-goal-modal.component.scss']\n})\nexport class EditGoalModalComponent implements OnInit {\n\n  goalModel = new BudgetGoals('', null, null, null, null);\n  userId;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any, private userService: UserService,\n              public dialogRef: MatDialogRef<EditGoalModalComponent>) { }\n\n  ngOnInit(): void {\n    this.goalModel = this.data.goal;\n  }\n\n  editGoal() {\n    this.userId = localStorage.getItem('user');\n    this.userService.editGoal(this.userId, this.goalModel).subscribe(_ => {\n      this.dialogRef.close(true);\n    });\n  }\n\n}\n","<form class=\"goal-form\" #goalForm=\"ngForm\">\n    <h2 class=\"title\">Edytuj cel</h2>\n\n    <div class=\"grid--container\">\n        <mat-form-field class=\"form-group\">\n            <mat-label>Nazwa</mat-label>\n            <input matInput class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"goalModel.name\" #name=\"ngModel\" required>\n        </mat-form-field>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Ilość pieniędzy do zebrania</mat-label>\n            <input matInput class=\"form-control\" type=\"text\" name=\"money\" [(ngModel)]=\"goalModel.goal\" #goal=\"ngModel\" required>\n        </mat-form-field>\n    </div>\n    <button mat-button class=\"btn-success\" type=\"button\" [mat-dialog-close]=\"true\" [disabled]=\"goalForm.form.invalid\" (click)=\"editGoal()\">Zaktualizuj cel</button>\n</form>\n\n","import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/models/user';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-edit-profile-modal',\n  templateUrl: './edit-profile-modal.component.html',\n  styleUrls: ['./edit-profile-modal.component.scss']\n})\nexport class EditProfileModalComponent implements OnInit {\n\n  profileModel = new User('', '', '', '', '', '', '', null, '', null, null, '', 0, null, [], 0, null, null, null, [], null);\n  userId = localStorage.getItem('user');\n  user;\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.userId = localStorage.getItem('user');\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.profileModel = res;\n    });\n  }\n\n  editProfile() {\n    this.userService.editUser(this.userId, this.profileModel).subscribe();\n  }\n\n}\n","<form class=\"profile-form\" #profileForm=\"ngForm\">\n    <h2 class=\"title\">Edytuj profil</h2>\n\n    <div class=\"grid--container\">\n        <mat-form-field class=\"form-group\">\n            <mat-label>Imie</mat-label>\n            <input matInput class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"profileModel.name\" #name=\"ngModel\" pattern=\".{1,20}\" placeholder=\"Podaj swoję imie...\" required>\n            <!-- <div *ngIf=\"name.errors && name.touched\">\n                <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n                <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n            </div> -->\n        </mat-form-field>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Nazwisko</mat-label>\n            <input matInput class=\"form-control\" type=\"text\" [class.input--warn]=\"surname.invalid && surname.touched\" placeholder=\"nazwisko\" name=\"surname\" \n            [(ngModel)]=\"profileModel.surname\" #surname=\"ngModel\" pattern=\".{1,20}\" required>\n            <!-- <div *ngIf=\"surname.errors && surname.touched\">\n                <p class=\"text--warn\" *ngIf=\"surname.errors.required\">Nazwisko jest wymagane</p>\n                <p class=\"text--warn\" *ngIf=\"surname.errors.pattern\">Nazwisko nie może mieć więcej niż 20 znaków</p>\n            </div> -->\n        </mat-form-field>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Email</mat-label>\n            <input matInput class=\"form-control\" type=\"email\" [class.input--warn]=\"email.invalid && email.touched\" placeholder=\"email\" name=\"email\" \n            [(ngModel)]=\"profileModel.email\" #email=\"ngModel\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\" required>\n            <!-- <div *ngIf=\"email.errors && email.touched\">\n                <p class=\"text--warn\" *ngIf=\"email.errors.required\">Email jest wymagany</p>\n                <p class=\"text--warn\" *ngIf=\"email.errors.pattern\">Nieprawidłowy adres email</p>\n            </div> -->\n        </mat-form-field>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Numer telefonu</mat-label>\n            <input matInput class=\"form-control\" type=\"text\" [class.input--warn]=\"phone.invalid && phone.touched\" placeholder=\"numer telefonu\" name=\"phone\" \n            [(ngModel)]=\"profileModel.phone\" #phone=\"ngModel\" pattern=\"\\d{9}\">\n            <!-- <div *ngIf=\"phone.errors && phone.touched\">\n                <p class=\"text--warn\" *ngIf=\"phone.errors.pattern\">Numer telefonu musi składać się z 9 cyfr</p>\n            </div> -->\n        </mat-form-field>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Data urodzenia</mat-label>\n            <input matInput type=\"date\" class=\"form-control\" name=\"dateOfBirth\" [(ngModel)]=\"profileModel.dateOfBirth\" #dateOfBirth=\"ngModel\" value=\"01.01.2000\">\n        </mat-form-field>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Płeć</mat-label>\n            <mat-select class=\"select\" name=\"sex\" [(ngModel)]=\"profileModel.sex\" required>\n                <mat-option value=\"man\"> Mężczyzna </mat-option>\n                <mat-option value=\"woman\"> Kobieta </mat-option>\n            </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Stanowisko</mat-label>\n            <input matInput type=\"input\" class=\"form-control\" name=\"positionName\" [(ngModel)]=\"profileModel.position.name\" #positionName=\"ngModel\">\n        </mat-form-field>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Wynagrodzenie</mat-label>\n            <input matInput type=\"number\" class=\"form-control\" name=\"positionEarnings\" [(ngModel)]=\"profileModel.position.earnings\" #positionEarnings=\"ngModel\">\n        </mat-form-field>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Opis</mat-label>\n            <textarea matInput placeholder=\"Dodaj swój opis...\" name=\"description\" [(ngModel)]=\"profileModel.description\" #description=\"ngModel\"></textarea>\n        </mat-form-field>\n    </div>\n    <button mat-button class=\"btn-success\" type=\"button\" mat-dialog-close [disabled]=\"profileForm.form.invalid\" (click)=\"editProfile()\">Zaktualizuj profil</button>\n</form>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Firm } from 'src/app/models/firm';\nimport { FirmService } from 'src/app/services/firm.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-firm-create-modal',\n  templateUrl: './firm-create-modal.component.html',\n  styleUrls: ['./firm-create-modal.component.scss']\n})\nexport class FirmCreateModalComponent implements OnInit {\n\n  userId = localStorage.getItem('user');\n  user;\n  firmCreateModel = new Firm('', {'country': '', 'city': '', 'street': ''}, [], null, false, []);\n\n  constructor(private firmService: FirmService, private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n    })\n  }\n\n  createFirm() {\n    this.firmService.addFirm(this.firmCreateModel, this.user).subscribe();\n  }\n\n}\n","<form class=\"firm-create-form\" #firmCreateForm=\"ngForm\">\n    <h2 class=\"title\">Utwórz firme</h2>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Nazwa</mat-label>\n        <input matInput class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"firmCreateModel.name\" #name=\"ngModel\" required>\n        <!-- <div *ngIf=\"name.errors && name.touched\">\n            <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Państwo</mat-label>\n        <input matInput class=\"form-control\" type=\"text\" name=\"country\" [(ngModel)]=\"firmCreateModel.address.country\" #country=\"ngModel\" required>\n        <!-- <div *ngIf=\"name.errors && name.touched\">\n            <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Miasto</mat-label>\n        <input matInput class=\"form-control\" type=\"text\" name=\"city\" [(ngModel)]=\"firmCreateModel.address.city\" #city=\"ngModel\" required>\n        <!-- <div *ngIf=\"name.errors && name.touched\">\n            <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Ulica</mat-label>\n        <input matInput class=\"form-control\" type=\"text\" name=\"street\" [(ngModel)]=\"firmCreateModel.address.street\" #street=\"ngModel\" required>\n        <!-- <div *ngIf=\"name.errors && name.touched\">\n            <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n    </mat-form-field>\n\n    <button mat-button class=\"btn-success\" type=\"button\" [mat-dialog-close]=\"true\" [disabled]=\"firmCreateForm.form.invalid\" (click)=\"createFirm()\">Utwórz firmę</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { FirmService } from 'src/app/services/firm.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-firm-search-modal',\n  templateUrl: './firm-search-modal.component.html',\n  styleUrls: ['./firm-search-modal.component.scss']\n})\nexport class FirmSearchModalComponent implements OnInit {\n\n  user;\n  userId = localStorage.getItem('user');\n  firms: any;\n  searchedFirm = '';\n  activeFirms = 0;\n  ready;\n\n  constructor(private firmService: FirmService, private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.ready = false;\n    this.firmService.getFirms().subscribe(res => {\n      this.firms = res;\n      this.firms = this.firms.filter(firm => {\n        if (firm.isDeleted !== true) {\n          this.activeFirms++;\n          return firm;\n        }\n      });\n      this.ready = true;\n      console.log(this.firms);\n    });\n\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n    });\n  }\n\n  joinFirm(id) {\n    this.userService.joinFirm(id, this.user).subscribe();\n  }\n\n}\n","<div class=\"firm-search-container\">\n    <h2 class=\"title\">Szukaj firmy</h2>\n    <mat-spinner *ngIf=\"!ready\"></mat-spinner>\n    <div *ngIf=\"ready\">\n        <div class=\"no-firms\" *ngIf=\"activeFirms == 0\">\n            <p>Aktualnie nie ma żadnych firm</p>\n        </div>\n        <!-- <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchedFirm\" autocomplete=\"off\" placeholder=\"Szukaj firmy\"> -->\n        <mat-list class=\"firm-search\" *ngFor=\"let firm of firms\">\n            <mat-list-item class=\"firm-item\" *ngIf=\"firm.isDeleted != true\">\n                <mat-icon>business</mat-icon>\n                <p>{{firm.name}} {{firm.address.country}}, {{firm.address.city}}, {{firm.address.street}}</p>\n                <button class=\"join-firm-button\" mat-dialog-close mat-raised-button type=\"button\" (click)=\"joinFirm(firm._id)\"><mat-icon>add</mat-icon></button>\n                <mat-divider></mat-divider>\n            </mat-list-item>\n        </mat-list>\n    </div>\n\n</div>\n\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-open-mail-modal',\n  templateUrl: './open-mail-modal.component.html',\n  styleUrls: ['./open-mail-modal.component.scss']\n})\nexport class OpenMailModalComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"mail-container\">\n    <h2 class=\"title\"> {{data.mail.topic}} </h2>\n    <p class=\"message\"> {{data.mail.message}} </p>\n    <div class=\"buttons-container\">\n        <button *ngIf=\"data.isAdmin == true && data.canAnswer == true\" mat-raised-button [mat-dialog-close]=\"true\" class=\"response-button\">Odpowiedz</button>\n        <button mat-raised-button [mat-dialog-close]=\"false\" class=\"close-button\">Zamknij</button>\n    </div>\n\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { Mail } from 'src/app/models/mail';\nimport { MailService } from 'src/app/services/mail.service';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-send-mail-modal',\n  templateUrl: './send-mail-modal.component.html',\n  styleUrls: ['./send-mail-modal.component.scss']\n})\nexport class SendMailModalComponent implements OnInit {\n\n  mailModel = new Mail('','','','','','','');\n\n  constructor(private mailService: MailService, @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n      this.mailModel.recipientId = this.data.mail.senderId;\n      this.mailModel.topic = this.data.mail.topic;\n      this.mailModel.senderName = this.data.adminName;\n  }\n\n  sendMessage() {\n    this.mailModel.recipientId = this.data.mail.senderId;\n    this.mailModel.status = \"Zakończone\";\n    this.mailModel.type = \"adminResponse\";\n    this.mailService.sendMessage(this.mailModel).subscribe();\n  }\n\n}\n","<div class=\"send-mail-container\">\n    <form class=\"helpdesk-form\" #HelpdeskForm=\"ngForm\">\n        <mat-form-field class=\"form-group\">\n            <input matInput class=\"form-control topic\" type=\"text\" name=\"topic\" [(ngModel)]=\"mailModel.topic\" #name=\"ngModel\" required disabled>\n            <!-- <div *ngIf=\"name.errors && name.touched\">\n                <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n                <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n            </div> -->\n        </mat-form-field>\n    \n        <mat-form-field class=\"form-group\">\n            <mat-label>Odpowiedz...</mat-label>\n            <textarea matInput class=\"form-control textarea\" name=\"message\" [(ngModel)]=\"mailModel.message\" #name=\"ngModel\" required maxlength=\"100\"></textarea>\n            <!-- <div *ngIf=\"name.errors && name.touched\">\n                <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n                <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n            </div> -->\n        </mat-form-field>\n    \n        <div class=\"buttons-container\">\n            <button mat-raised-button class=\"btn-success\" type=\"button\" [mat-dialog-close]=\"true\" [disabled]=\"HelpdeskForm.form.invalid\" (click)=\"sendMessage()\">Wyślij</button>\n            <button mat-raised-button class=\"btn-warn\" type=\"button\" [mat-dialog-close]=\"false\">Cofnij</button>\n        </div>\n    </form>\n</div>\n\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { Income } from '../../../models/income';\nimport { UserService } from 'src/app/services/user.service';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FirmService } from 'src/app/services/firm.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AddExpenseModalComponent } from '../add-expense-modal/add-expense-modal.component';\nimport { Expense } from 'src/app/models/expense';\nimport { CategoryService } from 'src/app/services/category.service';\n\n@Component({\n  selector: 'app-send-money-dialog',\n  templateUrl: './send-money-dialog.component.html',\n  styleUrls: ['./send-money-dialog.component.scss']\n})\nexport class SendMoneyDialogComponent implements OnInit {\n\n  userId = localStorage.getItem('user');\n  user;\n  firm;\n  paymentModel = new Income('', null, null, {name: 'Przelew', icon: '', matches: []}, '', 'Waiting', '', '', '', '');\n  categories;\n  category;\n\n  constructor(private userService: UserService, private firmService: FirmService, @Inject(MAT_DIALOG_DATA) public data: any,\n              private snackBar: MatSnackBar, public dialogRef: MatDialogRef<AddExpenseModalComponent>,\n              private categoryService: CategoryService) { }\n\n  ngOnInit(): void {\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n    });\n    this.categoryService.getAllCategories().subscribe(res => {\n      this.categories = res;\n      this.category = this.categories.filter(category => {\n        if (category.name === 'Przelew') { return category; }\n      });\n    });\n\n    if (this.data.type === 'firm') {\n      this.firmService.getFirm(this.data._id).subscribe(res => {\n        this.firm = res;\n      });\n    }\n  }\n\n  sendPayment() {\n\n    this.paymentModel.date = new Date();\n\n    const expense = new Expense('', 0, null, {name: 'Przelew', icon: '', matches: []}, 'expense', '', '');\n    expense.recipientName = this.data.target.name + ' ' + this.data.target.surname;\n    expense.name = this.paymentModel.name;\n    expense.money = this.paymentModel.money;\n    expense.date = this.paymentModel.date;\n    expense.type = 'expense';\n    expense.status = 'Waiting';\n    this.user.budget.expense.push(expense);\n\n    this.paymentModel.type = 'income';\n    this.paymentModel.senderId = this.user._id;\n    this.paymentModel.senderName = this.data.senderName;\n\n    if (this.data.type === 'user') {\n\n      if ((this.user.settings.isBudgetNegativeValueAllowed === false && this.user.budget.money - this.paymentModel.money < 0 )\n          || this.data.target.settings.allowReceivingTransfers === false) {\n            this.dialogRef.close(false);\n      }\n\n      this.data.target.budget.income.push(this.paymentModel);\n      if (!this.data.target.awaitingPaymentsToAccept) { this.data.target.awaitingPaymentsToAccept = 1; }\n      else { this.data.target.awaitingPaymentsToAccept++; }\n\n      this.userService.sendMoney(this.user._id, expense, this.data.target._id, this.paymentModel).subscribe();\n    }\n    else {\n      this.data.target.firmBudget.income.push(this.paymentModel);\n      this.firmService.editFirm(this.data.target._id, this.data.target).subscribe();\n    }\n    this.dialogRef.close(true);\n  }\n\n}\n","<form class=\"send-money-form\" #SendMoneyForm=\"ngForm\">\n    <h2 class=\"title\">Przelew</h2>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Tytuł</mat-label>\n        <input matInput class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"paymentModel.name\" #name=\"ngModel\" required>\n        <!-- <div *ngIf=\"name.errors && name.touched\">\n            <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Ilość pieniędzy</mat-label>\n        <input matInput class=\"form-control\" type=\"number\" min=\"0\" name=\"money\" [(ngModel)]=\"paymentModel.money\" #money=\"ngModel\" required>\n        <!-- <div *ngIf=\"name.errors && name.touched\">\n            <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Wiadomość</mat-label>\n        <textarea matInput class=\"form-control\" name=\"message\" [(ngModel)]=\"paymentModel.message\" #money=\"ngModel\"></textarea>\n        <!-- <div *ngIf=\"name.errors && name.touched\">\n            <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n    </mat-form-field>\n    <button mat-button class=\"btn-success\" type=\"button\" mat-dialog-close [disabled]=\"SendMoneyForm.form.invalid\" (click)=\"sendPayment()\">Wykonaj</button>\n    \n</form>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-show-account-change-details',\n  templateUrl: './show-account-change-details.component.html',\n  styleUrls: ['./show-account-change-details.component.scss']\n})\nexport class ShowAccountChangeDetailsComponent implements OnInit {\n\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"show-account-changes-container\">\n    <p><span class=\"title\">Tytuł:</span> {{data?.data?.name || 'Brak tytułu'}}</p>\n    <p><span class=\"title\">Ilość pieniędzy:</span> {{data?.data?.money | currency:' '}}zł</p>\n    <p *ngIf=\"data.data.senderName\"><span class=\"title\">Nadawca:</span> {{data?.data?.senderName}}</p>\n    <p *ngIf=\"!data.data.senderName\"><span class=\"title\">Nadawca:</span> Przelew własny</p>\n    <p><span class=\"title\">Data:</span> {{data?.data?.date | date:'shortDate'}}</p>\n    <p><span class=\"title\">Kategoria:</span> {{data?.data?.category?.name || 'Brak'}}</p>\n    <p><span class=\"title\">Status:</span> {{data?.data?.status == 'Waiting'? 'W trakcie' : 'Zaakceptowane'}}</p>\n    <p><span class=\"title\">Wiadomość:</span> {{data?.data?.message || 'Brak wiadomości'}}</p>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-show-new-password-modal',\n  templateUrl: './show-new-password-modal.component.html',\n  styleUrls: ['./show-new-password-modal.component.scss']\n})\nexport class ShowNewPasswordModalComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any, private snackBar: MatSnackBar, private userService: UserService) { }\n\n  ngOnInit(): void {\n  }\n\n  copyToClipboard() {\n\n    this.userService.playNotificationsSound();\n    this.snackBar.open('Skopiowano hasło do schowka', 'OK', {\n      duration: 5000,\n      horizontalPosition: 'right',\n      panelClass: ['snackbar-success']\n    })\n  }\n\n}\n","<div class=\"show-new-password-container\">\n    <textarea readonly class=\"password\" id=\"password\"> {{data.password}} </textarea>\n    <p class=\"notification\">Nowe hasło zostało automatycznie wygenerowane</p>\n    <mat-icon [cdkCopyToClipboard]=\"data.password\" class=\"copy\" (click)=\"copyToClipboard()\">content_copy</mat-icon>\n    <button mat-raised-button mat-dialog-close class=\"close-button\">OK</button>\n</div>\n\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-unblock-user-modal',\n  templateUrl: './unblock-user-modal.component.html',\n  styleUrls: ['./unblock-user-modal.component.scss']\n})\nexport class UnblockUserModalComponent implements OnInit {\n\n  blockedUsersId = [];\n  blockedUsers = [];\n  user;\n\n  constructor(private userService: UserService, @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n    this.refreshList();\n  }\n\n  refreshList() {\n    this.userService.getUser(this.data.userId).subscribe(res => {\n      this.blockedUsersId = res.disabledUser;\n      this.user = res;\n\n      this.blockedUsersId.map(id => {\n        this.userService.getUser(id).subscribe(res => {\n          this.blockedUsers.push(res);\n        })\n      })\n    })\n  }\n\n  remove(user) {\n    this.user.disabledUser = this.user.disabledUser.filter(u => {\n      if (u != user._id) return u;\n    })\n\n    this.userService.editUser(this.user._id, this.user).subscribe(() => {\n      this.refreshList();\n    });\n  }\n\n}\n","<div class=\"unblock-user-container\">\n    <h2 class=\"title\"> Zablokowani użytkownicy </h2>\n\n    <mat-list class=\"list\">\n        <mat-list-item class=\"list-item\" *ngFor=\"let user of blockedUsers\"> \n            <span>{{user.name}} {{user.surname}} </span>\n            <button class=\"delete-button\" (click)=\"remove(user)\" mat-raised-button><mat-icon>delete</mat-icon> </button>\n        </mat-list-item>\n    </mat-list>\n\n    <button mat-raised-button class=\"close-button\" mat-dialog-close>Zamknij</button>\n</div>\n\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Category } from 'src/app/models/category';\n\n@Pipe({\n  name: 'budgetListPipe'\n})\nexport class BudgetListPipePipe implements PipeTransform {\n\n  transform(items: any[], searchedCategory: Category[], searchedName: string = ''): any[] {\n    if (!items) return [];\n    if (!searchedName) {\n      if (searchedCategory == null) return items;\n      if (searchedCategory.length == 0) return items;\n    }\n\n\n    if (searchedName) searchedName = searchedName.toLowerCase();\n\n    let result = [];\n\n    items.filter(item => {\n      //console.log(item);\n      if (searchedCategory != null) {\n        if (searchedCategory.length == 0) {\n          if (item.name.toLowerCase().includes(searchedName)) {\n            result.push(item);\n          }\n        }\n        else {\n          searchedCategory.map(category => {\n            if (searchedName.trim()!='') {\n              if (category.name == item.category.name && item.name.toLowerCase().includes(searchedName)) {\n                result.push(item);\n              }\n            }\n            else {\n              if (category.name == item.category.name ) {\n                result.push(item);\n              }\n            }\n          })\n        }\n      }\n      else {\n          if (item.name.toLowerCase().includes(searchedName)) {\n            result.push(item);\n          }\n      }\n      \n    })\n\n    result = [...new Set(result)];\n\n    return result;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'moneyTransferPipe'\n})\nexport class MoneyTransferPipePipe implements PipeTransform {\n\n  transform(items: any[], searchedText, type): any[] {\n    if (!items) return [];\n    if (!searchedText) return items;\n\n    searchedText = searchedText.toLowerCase();\n\n    if (type == 'users') {\n      return items.filter(item => {\n        let fullname = item.name.toLowerCase() + ' ' + item.surname.toLowerCase();\n        return fullname.includes(searchedText);\n      })\n    }\n    else {\n      return items.filter(item => {\n        return item.name.toLowerCase().includes(searchedText);\n      })\n    }\n\n\n  }\n\n}\n","import { Component, OnInit, Input, OnDestroy, OnChanges, SimpleChange, SimpleChanges} from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { UserService } from 'src/app/services/user.service';\nimport { EventEmitterService } from 'src/app/services/event-emitter.service';\nimport { Router, NavigationEnd } from '@angular/router';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent implements OnInit, OnDestroy {\n\n  userId: string = localStorage.getItem('user');\n  user;\n  isHandset: Observable<BreakpointState> = this.breakpointObserver.observe(Breakpoints.Handset);\n  moneyTransferBadge: number;\n  @Input() isAdminLoggedIn = false;\n  @Input() shouldRefresh = false;\n  subscription: any;\n\n  constructor(private breakpointObserver: BreakpointObserver, private userService: UserService,\n              private eventEmitterService: EventEmitterService, private router: Router) {\n    this.router.routeReuseStrategy.shouldReuseRoute = () => {\n      return false;\n    };\n    this.subscription = this.router.events.subscribe((e) => {\n      if (e instanceof NavigationEnd) {\n        this.router.navigated = false;\n      }\n    });\n   }\n\n  ngOnInit(): void {\n    this.refreshList();\n\n    if (this.eventEmitterService.subscription === undefined) {\n      this.eventEmitterService.subscription = this.eventEmitterService.invokeSidenavComponentFunction.subscribe(() => {\n        this.refreshList();\n      });\n    }\n  }\n\n  refreshList() {\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n      this.moneyTransferBadge = res.awaitingPaymentsToAccept;\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n}\n","<mat-sidenav-container>\n    <mat-sidenav #drawer [ngClass]=\"{hidden: !(isHandset | async)!.matches}\" fixedInViewport=\"false\" \n    [attr.role]=\"isHandset ? 'navigation' : 'navigation'\" [mode]=\"(isHandset | async)!.matches ? 'side' : 'side'\"\n    [opened]=\"!(isHandset | async)!.matches\">\n        <mat-nav-list *ngIf=\"!isAdminLoggedIn\">\n\n            <div class=\"sidemenu--title\" routerLink=\"/przeglad\">\n                <img class=\"logo\" src=\"../../../assets/images/logo.png\" alt=\"logo\">\n            </div>\n\n            <mat-divider></mat-divider>\n\n            <a class=\"list-item\" mat-list-item routerLink=\"/przeglad\">\n                <mat-icon>person</mat-icon>\n                <p class=\"list-item--text\">Przegląd</p>\n            </a>\n            <a class=\"list-item\" mat-list-item routerLink=\"/uzytkownik-wykresy\">\n                <mat-icon>show_chart</mat-icon>\n                <p class=\"list-item--text\">Wykresy</p>\n            </a>\n            <a class=\"list-item\" mat-list-item routerLink=\"/konto\">\n                <mat-icon>account_balance</mat-icon>\n                <p class=\"list-item--text\">Konto</p>\n            </a>\n            <a class=\"list-item\" mat-list-item routerLink=\"/przelew\">\n                <mat-icon>payment</mat-icon>\n                <p class=\"list-item--text\" [matBadge]=\"moneyTransferBadge\" [matBadgeHidden]=\"moneyTransferBadge==0\" matBadgeSize=\"small\" matBadgeOverlap=\"false\">Przelew</p>\n            </a>\n\n            <mat-divider></mat-divider>\n\n            <a class=\"list-item\" mat-list-item routerLink=\"/firma\">\n                <mat-icon>business</mat-icon>\n                <p class=\"list-item--text\">Firma</p>\n            </a>\n            <span *ngIf=\"user?.firmId\" >\n                <a class=\"list-item\" mat-list-item routerLink=\"/firma-konto\">\n                    <mat-icon>account_tree</mat-icon>\n                    <p class=\"list-item--text\">Konto indywidualne</p>\n                </a>\n                <a class=\"list-item\" mat-list-item routerLink=\"/firma-wykresy\">\n                    <mat-icon>bar_chart</mat-icon>\n                    <p class=\"list-item--text\">Wykresy</p>\n                </a>\n                <a class=\"list-item\" mat-list-item routerLink=\"/chat\">\n                    <mat-icon>chat</mat-icon>\n                    <p class=\"list-item--text\">Czat</p>\n                </a>\n                <a class=\"list-item\" mat-list-item routerLink=\"/przelew-firma\">\n                    <mat-icon>local_atm</mat-icon>\n                    <p class=\"list-item--text\">Przelew</p>\n                </a>\n                <a class=\"list-item\" mat-list-item routerLink=\"/zarzadzaj-firma\">\n                    <mat-icon>build</mat-icon>\n                    <p class=\"list-item--text\">Zarządzaj firmą</p>\n                </a>\n            </span>\n            <mat-divider></mat-divider>\n\n            <a class=\"list-item\" mat-list-item routerLink=\"/ustawienia\">\n                <mat-icon>settings</mat-icon>\n                <p class=\"list-item--text\">Ustawienia</p>\n            </a>\n\n            <a class=\"list-item\" mat-list-item routerLink=\"/pomoc\">\n                <mat-icon>help</mat-icon>\n                <p class=\"list-item--text\">Pomoc</p>\n            </a>\n        </mat-nav-list>\n\n        <mat-nav-list *ngIf=\"isAdminLoggedIn\">\n            \n            <div class=\"sidemenu--title\" routerLink=\"/admin-panel\">\n                <img class=\"logo\" src=\"../../../assets/images/logo.png\" alt=\"logo\">\n            </div>\n\n            <mat-divider></mat-divider>\n\n            <a class=\"list-item\" mat-list-item routerLink=\"/admin-panel-users\">\n                <mat-icon>person</mat-icon>\n                <p class=\"list-item--text\">Użytkownicy</p>\n            </a>\n\n            <a class=\"list-item\" mat-list-item routerLink=\"/admin-panel-messages\">\n                <mat-icon>email</mat-icon>\n                <p class=\"list-item--text\">Wiadomości</p>\n            </a>\n\n            <a class=\"list-item\" mat-list-item routerLink=\"/admin-panel-categories\">\n                <mat-icon>category</mat-icon>\n                <p class=\"list-item--text\">Kategorie</p>\n            </a>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content>\n        <mat-toolbar>\n            <button class=\"menu-button\" mat-flat-button type=\"button\" aria-label=\"Toggle sidenav\" (click)=\"drawer.toggle()\" *ngIf=\"(isHandset | async)!.matches\">\n                <mat-icon class=\"arrow\" >keyboard_arrow_right</mat-icon>\n            </button>\n        </mat-toolbar>\n        <router-outlet></router-outlet>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnInit, OnChanges, SimpleChange, SimpleChanges, Input } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { ChartService } from 'src/app/services/chart.service';\n\n@Component({\n  selector: 'app-vertical-bar-chart-incomes-expenses',\n  templateUrl: './vertical-bar-chart-incomes-expenses.component.html',\n  styleUrls: ['./vertical-bar-chart-incomes-expenses.component.scss']\n})\nexport class VerticalBarChartIncomesExpensesComponent implements OnChanges, OnInit {\n\n  userId = localStorage.getItem('user');\n  user;\n  chartData: any;\n  view: any[] = [500,300];\n  @Input() chartDate: Date = new Date();\n  @Input() chartType: string;\n  monthName = this.chartService.getMonthName(this.chartDate.getMonth());\n\n  showLabels: boolean = true;\n  animations: boolean = true;\n  xAxis: boolean = false;\n  yAxis: boolean = true;\n  showYAxisLabel: boolean = true;\n  showXAxisLabel: boolean = false;\n  yAxisLabel: string = 'Ilość pieniędzy';\n  showYAxis: boolean = true;\n  showXAxis: boolean = false;\n  gradient: boolean = false;\n  colorScheme = {\n    domain: ['green', 'red']\n  }\n\n  constructor(private userService: UserService, private chartService: ChartService) { }\n\n  ngOnInit(): void {\n    this.userService.getUser(this.userId).subscribe(\n      res => {\n        this.user = res;\n        if (this.chartType == 'user') {\n          this.chartService.getCurrentMonthVerticalIncomeExpenseChart(this.user._id, this.chartDate.getMonth().toString()).subscribe(res => {\n            this.chartData = res;\n          })\n        }\n        else if (this.chartType == 'firm') {\n          this.chartService.getFirmCurrentMonthVerticalIncomeExpenseChart(this.user.firmId, this.chartDate.getMonth().toString()).subscribe(res => {\n            this.chartData = res;\n          })\n          \n        }}),\n      error => console.error(error)\n  }\n\n  getChart(month: string) {\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n      if (this.chartType == 'user') {\n        this.chartService.getCurrentMonthVerticalIncomeExpenseChart(this.user._id, month).subscribe(res => {\n          this.chartData = res;\n        })\n      }\n      else if (this.chartType == 'firm') {\n       \n        this.chartService.getFirmCurrentMonthVerticalIncomeExpenseChart(this.user.firmId, month).subscribe(res => {\n          this.chartData = res;\n        })\n      }\n    },\n    error => console.error(error))\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.monthName = this.chartService.getMonthName(this.chartDate.getMonth());\n    this.getChart(this.chartDate.getMonth().toString());\n  }\n\n}\n","<div class=\"chart-bar-vertical-container\">\n    <h2 class=\"title\">Ilość dochodów i wydatków - {{monthName}}</h2>\n    <ngx-charts-bar-vertical\n    [view]=\"view\"\n    [results]=\"chartData\"\n    [gradient]=\"gradient\"\n    [xAxis]=\"showXAxis\"\n    [yAxis]=\"showYAxis\"\n    [showXAxisLabel]=\"showXAxisLabel\"\n    [showYAxisLabel]=\"showYAxisLabel\"\n    [yAxisLabel]=\"yAxisLabel\"\n    [scheme]=\"colorScheme\" >\n</ngx-charts-bar-vertical>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router, private authService: AuthService) {}\n\n  canActivate(): boolean {\n    if (!this.authService.isAuthenticated()) {\n      this.router.navigate(['/logowanie']);\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot} from '@angular/router';\nimport decode from 'jwt-decode';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuardService implements CanActivate {\n\n  constructor(public authService: AuthService, public router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot): boolean {\n\n    if (!localStorage.getItem('token')) {\n      this.router.navigate(['/logowanie']);\n      return false;\n    }\n\n    const token = localStorage.getItem('token');\n    const tokenPayload = decode(token);\n\n    if (!this.authService.isAuthenticated() || tokenPayload.admin !== true) {\n      this.router.navigate(['/logowanie']);\n      return false;\n    }\n    return true;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { Budget } from 'src/app/models/budget';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AddBudgetGoalModalComponent } from 'src/app/components/modals/add-budget-goal-modal/add-budget-goal-modal.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { FormControl } from '@angular/forms';\nimport { ShowAccountChangeDetailsComponent } from 'src/app/components/modals/show-account-change-details/show-account-change-details.component';\nimport { AddMoneyToGoalModalComponent } from 'src/app/components/modals/add-money-to-goal-modal/add-money-to-goal-modal.component';\nimport { EditGoalModalComponent } from 'src/app/components/modals/edit-goal-modal/edit-goal-modal.component';\nimport { DeleteGoalModalComponent } from 'src/app/components/modals/delete-goal-modal/delete-goal-modal.component';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.scss']\n})\nexport class AccountComponent implements OnInit {\n\n  user;\n  userId;\n  accountChangesContainer: any;\n  categories;\n  category;\n  selectedCategories = new FormControl();\n  name;\n  checkboxes = {\n    incomes: true,\n    expenses: true\n  };\n  currentDate;\n  currentMonth;\n  budgetGoals;\n  completedGoals;\n\n\n  constructor(private userService: UserService, private dialog: MatDialog, private snackBar: MatSnackBar,\n              private categoryService: CategoryService) { }\n\n  ngOnInit(): void {\n    this.userId = localStorage.getItem('user');\n    this.currentDate = new Date();\n    this.currentMonth = this.currentDate.getMonth();\n    this.refreshList(this.currentMonth);\n    this.categoryService.getAllCategories().subscribe(res => {\n      this.categories = res;\n    });\n  }\n\n  refreshList(month) {\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n      if (!res.budget) { this.user.budget = new Budget(null, [], []); }\n      this.accountChangesContainer = [...res.budget.income, ...res.budget.expense];\n      this.accountChangesContainer = this.accountChangesContainer.filter(change => {\n        return (new Date(change.date).getMonth() === month);\n      });\n      this.accountChangesContainer = this.accountChangesContainer.sort((a, b) => Date.parse(b.date) - Date.parse(a.date) );\n    });\n\n    this.refreshGoals();\n  }\n\n  previousMonth() {\n    this.currentDate = new Date(this.currentDate.setMonth(this.currentDate.getMonth() - 1));\n    this.currentMonth--;\n    this.refreshList(this.currentMonth);\n  }\n\n  nextMonth() {\n    this.currentDate = new Date(this.currentDate.setMonth(this.currentDate.getMonth() + 1));\n    this.currentMonth++;\n    this.refreshList(this.currentMonth);\n  }\n\n  addBudgetGoal() {\n    const dialogRef = this.dialog.open(AddBudgetGoalModalComponent, {\n      width: '400px',\n      height: '300px',\n      data: {\n        userId: this.userId\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(res => {\n      if (res === true) {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Pomyślnie dodano kategorie', 'OK', {\n          duration: 5000,\n          horizontalPosition: 'right',\n          panelClass: ['snackbar-success']\n        });\n        this.refreshList(new Date().getMonth());\n    }\n    });\n  }\n\n  showDetails(data) {\n    this.dialog.open(ShowAccountChangeDetailsComponent, {\n      data: {\n        data\n      },\n      width: '500px'\n    });\n  }\n\n  refreshGoals() {\n    this.userService.getUserBudgetGoals(this.userId).subscribe(res => {\n      this.budgetGoals = res;\n      this.completedGoals = this.budgetGoals.filter(goal => {\n        if (goal.isCompleted) {\n          return goal;\n        }\n      });\n    });\n  }\n\n  addMoney(goal) {\n    const ref = this.dialog.open(AddMoneyToGoalModalComponent, {\n      data: {\n        goal\n      }\n    });\n\n    ref.afterClosed().subscribe(res => {\n      if (res === true) {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Pomyślnie dodano kategorie', 'OK', {\n          duration: 5000,\n          horizontalPosition: 'right',\n          panelClass: ['snackbar-success']\n        });\n        this.refreshGoals();\n      }\n    });\n  }\n\n  editGoal(goal) {\n    const ref = this.dialog.open(EditGoalModalComponent, {\n      data: {\n        goal\n      }\n    });\n\n    ref.afterClosed().subscribe(res => {\n      if (res === true) {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Pomyślnie uaktualniono cel', 'OK', {\n          duration: 5000,\n          horizontalPosition: 'right',\n          panelClass: ['snackbar-success']\n        });\n        this.refreshGoals();\n      }\n    });\n  }\n\n  deleteGoal(goal) {\n    const ref = this.dialog.open(DeleteGoalModalComponent, {\n      data: {\n        goal\n      }\n    });\n\n    ref.afterClosed().subscribe(res => {\n      if (res === true) {\n        this.userService.deleteGoal(this.userId, goal).subscribe(_ => {\n          this.userService.playNotificationsSound();\n          this.snackBar.open('Pomyślnie usunięto cel', 'OK', {\n            duration: 5000,\n            horizontalPosition: 'right',\n            panelClass: ['snackbar-success']\n          });\n          this.refreshGoals();\n        });\n      }\n    });\n  }\n}\n","<app-header pageName=\"Konto\"></app-header>\n<app-sidenav></app-sidenav>\n\n<div class=\"account-container\">\n    <mat-tab-group mat-align-tabs=\"center\">\n        <mat-tab class=\"account-history\" label=\"Historia konta\">\n            <div class=\"filters-container\">\n                <div class=\"flex-container inputs\">\n                    <mat-form-field class=\"form-group\">\n                        <mat-label>Kategoria</mat-label>\n                        <mat-select [formControl]=\"selectedCategories\" multiple>\n                            <mat-option *ngFor=\"let category of categories\" [value]=\"category\"> {{category.name}} </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n        \n                    <mat-form-field>\n                        <mat-label>Nazwa</mat-label>\n                        <input matInput type=\"text\" [(ngModel)]=\"name\" autocomplete=\"off\">\n                    </mat-form-field>\n                </div>\n                <div class=\"selection-container\">\n                    <div class=\"checkboxes\">\n                        <mat-checkbox color=\"primary\" [(ngModel)]=\"checkboxes.expenses\" selected>Wydatki</mat-checkbox>\n                        <mat-checkbox color=\"primary\" [(ngModel)]=\"checkboxes.incomes\" selected>Przychody</mat-checkbox>\n                    </div>\n    \n                    <mat-chip-list class=\"chips-container\" #categoryChips aria-label=\"Selected categories\">\n                        <mat-chip selected color=\"primary\" *ngFor=\"let category of selectedCategories.value\">{{category?.name}}</mat-chip>\n                    </mat-chip-list>\n                </div>\n            </div>\n        \n            <div class=\"month-container\">\n                <div class=\"arrow-left\" (click)=\"previousMonth()\"></div>\n                <div class=\"month-name\"> {{currentDate | date: 'MMMM yyyy'}} </div>\n                <div class=\"arrow-right\" (click)=\"nextMonth()\"></div>\n            </div>\n        \n            <div class=\"budget-list-container\">\n                <div class=\"budget-balance\">\n                    <p>Stan konta: <span [class]=\"user?.budget?.money > 0 ? 'font-color-green' : 'font-color-red'\">{{(user?.budget?.money || 0) | currency:' '}}zł</span> </p>\n                    <mat-divider></mat-divider>\n                </div>\n            \n                <div class=\"no-account-changes\" *ngIf=\"accountChangesContainer?.length == 0\">\n                    <p>Brak danych</p>\n                </div>\n        \n                <mat-list *ngFor=\"let accountChange of accountChangesContainer | budgetListPipe:selectedCategories.value:name\" class=\"budget-changes-list\">\n                    <mat-list-item (click)=\"showDetails(accountChange)\" *ngIf=\"accountChange.type == 'income' && checkboxes.incomes == true || accountChange.type == 'expense' && checkboxes.expenses == true\">\n                        <mat-divider></mat-divider>\n                        <mat-icon mat-list-icon>credit_card</mat-icon>\n                        <div mat-line> {{accountChange.name}} <span class=\"align-right\" [class]=\"accountChange.type=='income' ? 'income': 'expense'\"> {{accountChange.money | currency: ' '}}zł</span>  </div>\n                        <div mat-line> {{accountChange.category.name}} <span class=\"align-right\">{{accountChange.date | date:'dd.MM.yyyy'}}</span> </div>\n                        <span [class]=\"accountChange.type=='income' ? 'green-line' : 'red-line'\"></span>\n                    </mat-list-item>\n                </mat-list>\n            </div>\n        </mat-tab>\n        <mat-tab label=\"Cele\">\n            <div class=\"grid-container\">\n                <div class=\"goals-ongoing-container\">\n                    <p class=\"title\">Trwające cele</p>\n                    <mat-divider></mat-divider>\n                    <mat-list class=\"list\" *ngFor=\"let goal of budgetGoals\">\n                        <mat-list-item class=\"list-item\" *ngIf=\"!goal.isCompleted\">\n                            <div mat-line class=\"header\">\n                                <span class=\"header-small\">\n                                    <mat-icon>emoji_events</mat-icon>\n                                    <span>{{goal.name}}</span>\n                                </span>\n                                <span>{{goal.currentState | currency: ' '}}/{{goal.goal | currency:' '}}zł</span>\n                            </div>\n                            <div mat-line><mat-progress-bar class=\"progress-bar\" mode=\"determinate\" [value]=\"goal.progress\"></mat-progress-bar></div>\n                            <button class=\"add-money-button\" mat-button (click)=\"addMoney(goal)\">+</button>\n                            <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\n                                <mat-icon>more_vert</mat-icon>\n                            </button>\n                            <mat-menu #menu=\"matMenu\">\n                                <button mat-menu-item (click)=\"editGoal(goal)\">\n                                  <mat-icon>edit</mat-icon>\n                                  <span>Edytuj</span>\n                                </button>\n                                <button mat-menu-item (click)=\"deleteGoal(goal)\">\n                                  <mat-icon>delete</mat-icon>\n                                  <span>Usuń</span>\n                                </button>\n                              </mat-menu>\n                            <mat-divider></mat-divider>\n                        </mat-list-item>\n                    </mat-list>\n                </div>\n                <div class=\"goals-completed-container\">\n                    <p class=\"title\">Ukończone cele</p>\n                    <mat-divider></mat-divider>\n                    <mat-list class=\"list\" *ngFor=\"let goal of completedGoals\">\n                        <mat-list-item class=\"list-item\">\n                            <div mat-line class=\"header\">\n                                <span class=\"header-small\">\n                                    <mat-icon>emoji_events</mat-icon>\n                                    <span>{{goal.name}}</span>\n                                </span>\n                                <span>{{goal.currentState | currency: ' '}}/{{goal.goal | currency:' '}}zł</span>\n                                <mat-icon class=\"complete-icon\">check_circle</mat-icon>\n                            </div>\n                        </mat-list-item>\n                    </mat-list>\n                </div>\n            </div>\n            <button mat-fab class=\"button-create\" (click)=\"addBudgetGoal()\"><mat-icon>add</mat-icon></button>\n        </mat-tab>\n    </mat-tab-group>\n</div>\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AddCategoryModalComponent } from 'src/app/components/modals/add-category-modal/add-category-modal.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { UserService } from 'src/app/services/user.service';\nimport { EditCategoryModalComponent } from 'src/app/components/modals/edit-category-modal/edit-category-modal.component';\n\n@Component({\n  selector: 'app-admin-category',\n  templateUrl: './admin-category.component.html',\n  styleUrls: ['./admin-category.component.scss']\n})\nexport class AdminCategoryComponent implements OnInit {\n\n  categories: any = [];\n\n  constructor(private categoryService: CategoryService, private userService: UserService, private dialog: MatDialog, private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.refreshList();\n  }\n\n  refreshList() {\n    this.categoryService.getAllCategories().subscribe(res => {\n      this.categories = res;\n    })\n  }\n\n  addCategory() {\n    const ref = this.dialog.open(AddCategoryModalComponent, {\n      width: '400px',\n      height: '300px'\n    })\n\n    ref.afterClosed().subscribe(res => {\n      if (res === true) {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Pomyślnie dodano kategorie', 'OK', {\n          duration: 5000,\n          horizontalPosition: 'right',\n          panelClass: ['snackbar-success']\n        })\n        this.refreshList();\n      }\n    })\n  }\n\n  editCategory(category) {\n    let dialogRef = this.dialog.open(EditCategoryModalComponent, {\n      width: '400px',\n      height: '300px',\n      data: {\n        category: category\n      }\n    })\n\n    dialogRef.afterClosed().subscribe(res => {\n      if(res === true) {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Pomyślnie uaktualniono kategorie', 'OK', {\n        duration: 5000,\n        horizontalPosition: 'right',\n        panelClass: ['snackbar-success']\n      })\n      }\n    })\n  }\n\n  deleteCategory(category) {\n    this.categoryService.deleteCategory(category).subscribe(res => {\n      this.userService.playNotificationsSound();\n      this.snackBar.open('Pomyślnie usunięto kategorie', 'OK', {\n        duration: 5000,\n        horizontalPosition: 'right',\n        panelClass: ['snackbar-success']\n      })\n      this.refreshList();\n    })\n  }\n\n}\n","<app-header isAdminLoggedIn=\"true\" pageName=\"Admin - kategorie\"></app-header>\n<app-sidenav isAdminLoggedIn=\"true\"></app-sidenav>\n\n<div class=\"admin-category-container\">\n    <mat-tab-group class=\"tabs-container\" mat-align-tabs=\"center\">\n        <mat-tab label=\"Lista kategorii\">\n            <mat-list class=\"categories-list\" *ngFor=\"let category of categories\">\n                <mat-list-item> \n                    <mat-icon mat-list-icon> {{category.icon}} </mat-icon>   \n                    <div mat-line> {{category.name}} </div>\n                    <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"icon menu\">\n                        <mat-icon class=\"more-icon\">more_vert</mat-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <button mat-menu-item (click)=\"editCategory(category)\">\n                            <mat-icon>edit</mat-icon>\n                            <span>Edytuj</span>\n                        </button>\n                        <button mat-menu-item (click)=\"deleteCategory(category)\">\n                            <mat-icon>delete</mat-icon>\n                            <span>Usuń</span>\n                        </button>\n                    </mat-menu> \n                </mat-list-item>\n            </mat-list>\n            <button mat-fab class=\"button-create\" (click)=\"addCategory()\"><mat-icon>add</mat-icon></button>\n        </mat-tab>\n    </mat-tab-group>\n</div>\n\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin-login',\n  templateUrl: './admin-login.component.html',\n  styleUrls: ['./admin-login.component.scss']\n})\nexport class AdminLoginComponent implements OnInit {\n\n  loginModel = {email: '', password: ''};\n\n  constructor(private userService: UserService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  loginUser() {\n\n   this.userService.loginUser(this.loginModel.email, this.loginModel.password).subscribe(\n     res => {\n     localStorage.setItem('token', res.token)\n     localStorage.setItem('user', res.userId)\n     this.router.navigate(['/admin-panel']);\n   },\n   error => {\n     console.error(error);\n   })\n  }\n\n}\n","<div class=\"login-container\">\n    <form id=\"LoginForm\" class=\"login-form\" #LoginForm=\"ngForm\">\n\n        <div class=\"logo\">\n            <img src=\"../../../assets/images/logo-gray.png\" alt=\"logo\">\n        </div>\n\n        <h2 class=\"title\">Zaloguj się na konto admina</h2>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Email</mat-label>\n            <input matInput class=\"form-control\" type=\"email\" placeholder=\"email\" name=\"email\" [(ngModel)]=\"loginModel.email\" #email=\"ngModel\">\n        </mat-form-field>\n    \n        <mat-form-field class=\"form-group\">\n            <mat-label>Hasło</mat-label>\n            <input matInput class=\"form-control\" type=\"password\" placeholder=\"hasło\" name=\"password\" [(ngModel)]=\"loginModel.password\" #password=\"ngModel\">\n        </mat-form-field>\n\n        <button mat-raised-button type=\"button\" [disabled]=\"LoginForm.form.invalid\" (click)=\"loginUser()\">Zaloguj się</button>\n    \n    </form>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { OpenMailModalComponent } from 'src/app/components/modals/open-mail-modal/open-mail-modal.component';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MailService } from 'src/app/services/mail.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SendMailModalComponent } from 'src/app/components/modals/send-mail-modal/send-mail-modal.component';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-admin-messages',\n  templateUrl: './admin-messages.component.html',\n  styleUrls: ['./admin-messages.component.scss']\n})\nexport class AdminMessagesComponent implements OnInit {\n\n  userId = localStorage.getItem('user');\n  user;\n  displayedColumns = ['topic', 'message', 'senderName'];\n  dataSourceWaitingMails;\n  dataSourceinProgressMails;\n  dataSourceEndedMails;\n  waitingMails: any = [];\n  inProgressMails: any = [];\n  endedMails: any = [];\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(private mailService: MailService, private dialog: MatDialog, private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.getMails();\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n    });\n  }\n\n  getMails() {\n    this.mailService.getAllMails().subscribe(res => {\n\n      this.waitingMails = res || [];\n      this.waitingMails = this.waitingMails.filter(mail => {\n        if (mail.status === 'Oczekujące' && mail.type === 'userAsk') { return mail; }\n      });\n\n      this.inProgressMails = res;\n      this.inProgressMails = this.inProgressMails.filter(mail => {\n        if (mail.status === 'W trakcie' && mail.type === 'userAsk' && mail.recipientId === this.userId) { return mail; }\n      });\n\n      this.endedMails = res;\n      this.endedMails = this.endedMails.filter(mail => {\n        if (mail.status === 'Zakończone' && mail.type === 'userAsk') { return mail; }\n      });\n\n      this.dataSourceWaitingMails = new MatTableDataSource(this.waitingMails || []);\n      this.dataSourceWaitingMails.sort = this.sort;\n      this.dataSourceWaitingMails.paginator = this.paginator;\n\n      this.dataSourceinProgressMails = new MatTableDataSource(this.inProgressMails || []);\n      this.dataSourceinProgressMails.sort = this.sort;\n      this.dataSourceinProgressMails.paginator = this.paginator;\n\n      this.dataSourceEndedMails = new MatTableDataSource(this.endedMails || []);\n      this.dataSourceEndedMails.sort = this.sort;\n      this.dataSourceEndedMails.paginator = this.paginator;\n    });\n  }\n\n  openMail(mail, canAnswer) {\n    const ref = this.dialog.open(OpenMailModalComponent, {\n      height: '500px',\n      width: '400px',\n      data: {\n        mail,\n        isAdmin: true,\n        canAnswer\n      }\n    });\n    ref.afterClosed().subscribe(res => {\n      if (res === true) {\n        if (mail.status !== 'W trakcie') {\n          mail.status = 'W trakcie';\n          mail.recipientId = this.userId;\n          this.mailService.reserveMail(mail, this.userId).subscribe(() => {\n            this.getMails();\n          });\n        }\n        const reference = this.dialog.open(SendMailModalComponent, {\n          width: '400px',\n          height: '600px',\n          data: {\n            mail,\n            adminName: this.user.name\n          }\n        });\n\n        reference.afterClosed().subscribe(response => {\n          if (response === true) {\n            mail.status = 'Zakończone';\n            this.mailService.respondeToMail(mail).subscribe(() => {\n              this.getMails();\n            });\n          }\n        });\n      }\n    });\n  }\n}\n","<app-header [isAdminLoggedIn]=\"true\" pageName=\"Admin - wiadomości\"></app-header>\n<app-sidenav [isAdminLoggedIn]=\"true\"></app-sidenav>\n\n<div class=\"admin-messages-container\">\n    <mat-tab-group class=\"tabs-container\" mat-align-tabs=\"center\">\n        <mat-tab label=\"Oczekujące\">\n            <div>\n                <mat-paginator [length]=\"this.waitingMails?.length || 0\"\n                [pageSize]=\"5\"\n                [pageSizeOptions]=\"[3, 5, 10]\">\n                </mat-paginator>\n\n                <table mat-table [dataSource]=\"dataSourceWaitingMails\" class=\"waiting-messages-list mat-elevation-z8\">\n                \n                    <ng-container matColumnDef=\"topic\">\n                        <th mat-header-cell *matHeaderCellDef> Temat </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.topic}} </td>\n                    </ng-container>\n                \n                    <ng-container matColumnDef=\"message\">\n                        <th mat-header-cell *matHeaderCellDef> Wiadomość </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.message | slice:0:30}} </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"senderName\">\n                        <th mat-header-cell *matHeaderCellDef> Użytkownik </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.senderName}} </td>\n                    </ng-container>\n                \n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"openMail(row, true)\"></tr>\n                </table>\n            </div>\n        </mat-tab>\n        <mat-tab label=\"W trakcie\">\n            <div>\n                <mat-paginator [length]=\"this.inProgressMails?.length || 0\"\n                [pageSize]=\"5\"\n                [pageSizeOptions]=\"[3, 5, 10]\">\n                </mat-paginator>\n\n                <table mat-table [dataSource]=\"dataSourceinProgressMails\" class=\"waiting-messages-list mat-elevation-z8\">\n                \n                    <ng-container matColumnDef=\"topic\">\n                        <th mat-header-cell *matHeaderCellDef> Temat </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.topic}} </td>\n                    </ng-container>\n                \n                    <ng-container matColumnDef=\"message\">\n                        <th mat-header-cell *matHeaderCellDef> Wiadomość </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.message | slice:0:30}} </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"senderName\">\n                        <th mat-header-cell *matHeaderCellDef> Użytkownik </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.senderName}} </td>\n                    </ng-container>\n                \n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"openMail(row, true)\"></tr>\n                </table>\n            </div>\n        </mat-tab>\n        <mat-tab label=\"Zakończone\">\n            <div>\n                <mat-paginator [length]=\"this.endedMails?.length || 0\"\n                [pageSize]=\"5\"\n                [pageSizeOptions]=\"[3, 5, 10]\">\n                </mat-paginator>\n\n                <table mat-table [dataSource]=\"dataSourceEndedMails\" class=\"waiting-messages-list mat-elevation-z8\">\n                \n                    <ng-container matColumnDef=\"topic\">\n                        <th mat-header-cell *matHeaderCellDef> Temat </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.topic}} </td>\n                    </ng-container>\n                \n                    <ng-container matColumnDef=\"message\">\n                        <th mat-header-cell *matHeaderCellDef> Wiadomość </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.message | slice:0:30}} </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"senderName\">\n                        <th mat-header-cell *matHeaderCellDef> Użytkownik </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.senderName}} </td>\n                    </ng-container>\n                \n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"openMail(row, false)\"></tr>\n                </table>\n            </div>\n        </mat-tab>\n    </mat-tab-group>\n</div>\n\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.scss']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  isAdminLoggedIn = true;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header pageName=\"Panel administratora\" [isAdminLoggedIn]=\"isAdminLoggedIn\"></app-header>\n<app-sidenav [isAdminLoggedIn]=\"isAdminLoggedIn\"></app-sidenav>\n\n\n<app-footer></app-footer>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ShowNewPasswordModalComponent } from 'src/app/components/modals/show-new-password-modal/show-new-password-modal.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss']\n})\nexport class UserListComponent implements OnInit {\n\n  users;\n\n  constructor(private userService: UserService, private dialog: MatDialog, private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.userService.getUsers().subscribe(res => {\n      this.users = res;\n\n      this.users = this.users.filter(user => {\n        if (!user.admin) return user;\n      })\n    })\n  }\n\n  restartPassword(user) {\n    this.userService.restartPassword(user).subscribe(res => {\n      this.userService.playNotificationsSound();\n      this.snackBar.open('Udało się zmienić hasło', 'OK', {\n        duration: 5000,\n        horizontalPosition: 'right',\n        panelClass: ['snackbar-success']\n      })\n      this.dialog.open(ShowNewPasswordModalComponent, {\n        width: '300px',\n        height: '200px',\n        data: {\n          password: res\n        }\n      });\n    })\n  }\n\n  blockUser(user) {\n    this.userService.blockUser(user).subscribe(res => {\n      this.userService.playNotificationsSound();\n      this.snackBar.open('Udało się zablokować użytkownika', 'OK', {\n        duration: 5000,\n        horizontalPosition: 'right',\n        panelClass: ['snackbar-success']\n      })\n    })\n  }\n\n  unblockUser(user) {\n    this.userService.unblockUser(user).subscribe(res => {\n      this.userService.playNotificationsSound();\n      this.snackBar.open('Udało się odblokować użytkownika', 'OK', {\n        duration: 5000,\n        horizontalPosition: 'right',\n        panelClass: ['snackbar-success']\n      })\n    })\n  }\n\n}\n","<app-header pageName=\"Admin - lista użytkowników\"></app-header>\n<app-sidenav isAdminLoggedIn=\"true\"></app-sidenav>\n\n<div class=\"user-list-container\">\n    <mat-tab-group mat-align-tabs=\"center\">\n        <mat-tab label=\"Użytkownicy\">\n            <mat-list class=\"user-list\" *ngFor=\"let user of users\">\n                <mat-list-item class=\"user-list-item\"> \n                    <span> {{user.name}} {{user.surname}} </span>\n                    <div class=\"menu\">\n                        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"icon menu\">\n                            <mat-icon class=\"more-icon\">more_vert</mat-icon>\n                        </button>\n                        <mat-menu #menu=\"matMenu\">\n                            <button mat-menu-item (click)=\"restartPassword(user)\">\n                                <mat-icon>restore</mat-icon>\n                                <span>Zresetuj hasło</span>\n                            </button>\n                            <button *ngIf=\"!user.isUserBlocked\" mat-menu-item (click)=\"blockUser(user)\">\n                                <mat-icon>block</mat-icon>\n                                <span>Zablokuj</span>\n                            </button>\n                            <button *ngIf=\"user.isUserBlocked\" mat-menu-item (click)=\"unblockUser(user)\">\n                                <mat-icon>lock_open</mat-icon>\n                                <span>Odblokuj</span>\n                            </button>\n                        </mat-menu> \n                    </div>\n                </mat-list-item>\n            </mat-list>\n        </mat-tab>\n    </mat-tab-group>\n</div>\n\nasd\n\n<app-footer></app-footer>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { FirmService } from 'src/app/services/firm.service';\nimport { NgForm } from '@angular/forms';\nimport { WebSocketService } from 'src/app/services/web-socket.service';\nimport { ChatMessageDto } from 'src/app/models/chatMessageDto';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.scss']\n})\nexport class ChatComponent implements OnInit, OnDestroy {\n\n  userId = localStorage.getItem('user');\n  user;\n  firm;\n  chatStatus = true;\n\n  constructor(private userService: UserService, private firmService: FirmService, public webSocketService: WebSocketService) { }\n\n  ngOnInit(): void {\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n\n      this.firmService.getFirm(this.user.firmId).subscribe(response => {\n        this.firm = response;\n      });\n\n      this.openWebSocket();\n\n      this.webSocketService.event$.subscribe(data => {\n        this.changeChatStatus(data);\n      });\n    });\n  }\n\n  openWebSocket() {\n    this.webSocketService.openWebSocket();\n  }\n\n  changeChatStatus(status: boolean) {\n    this.chatStatus = status;\n    console.log(this.chatStatus);\n  }\n\n  sendMessage(sendForm: NgForm) {\n    const username = this.user.name + ' ' + this.user.surname;\n    const chatMessageDto = new ChatMessageDto(username, sendForm.value.message);\n    this.webSocketService.sendMessage(chatMessageDto, this.firm._id);\n    sendForm.controls.message.reset();\n  }\n\n  ngOnDestroy(): void {\n    this.webSocketService.closeWebSocket();\n  }\n}\n","<app-header pageName=\"Czat\" ></app-header>\n<app-sidenav></app-sidenav>\n<div class=\"chat-container\">\n    <h2 class=\"page-title\">Czat - {{firm?.name}}</h2>\n\n    <div class=\"chatroom\">\n        <div *ngIf=\"!chatStatus\" role=\"button\" (click)=\"openWebSocket()\" class=\"chat-closed-information\">Czat nie jest załadowany poprawnie, kliknik tutaj, aby załadować ponownie</div>\n        <ul id=\"chatList\" class=\"chat-list\">\n            <li class=\"chat-list-item\" *ngFor=\"let chatMessage of webSocketService.chatMessages\">\n                <div class=\"username\"><strong>{{chatMessage.user}}:</strong></div>\n                <div class=\"message\">{{chatMessage.message}}</div>\n            </li>\n        </ul>\n        <form class=\"chat-form\" (ngSubmit)=\"sendMessage(sendForm)\" #sendForm=\"ngForm\">\n            <input class=\"message\" type=\"text\" name=\"message\" id=\"message\" placeholder=\"Napisz wiadomość...\" ngModel required>\n            <button [disabled]=\"!chatStatus\" mat-raised-button class=\"send-button\" type=\"submit\"><mat-icon>send</mat-icon></button>\n        </form>\n    </div>\n\n</div>\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { ChartService } from 'src/app/services/chart.service';\n\n@Component({\n  selector: 'app-firm-charts',\n  templateUrl: './firm-charts.component.html',\n  styleUrls: ['./firm-charts.component.scss']\n})\nexport class FirmChartsComponent implements OnInit {\n\n  chartType = \"firm\";\n  chartDate = [new Date(), new Date()];\n\n  constructor(private chartService: ChartService) { }\n\n  ngOnInit(): void {\n  }\n\n  previousMonth(chart: number) {\n    this.chartDate[chart] = new Date(this.chartDate[chart].setMonth(this.chartDate[chart].getMonth()-1));\n  }\n\n  nextMonth(chart: number) {\n    this.chartDate[chart] = new Date(this.chartDate[chart].setMonth(this.chartDate[chart].getMonth()+1));\n  }\n\n}\n","<app-header pageName=\"Wykresy firmy\"></app-header>\n<app-sidenav></app-sidenav>\n<div class=\"firm-charts-container\">\n    <div class=\"container-small\">\n        <div class=\"month-container\">\n            <div class=\"arrow-left\" (click)=\"previousMonth(0)\"></div>\n            <div class=\"month-name\"> {{chartDate[0] | date: 'MMMM yyyy'}} </div>\n            <div class=\"arrow-right\" (click)=\"nextMonth(0)\"></div>\n        </div>\n        <app-budget-chart [chartType]=\"chartType\" [chartDate]=\"chartDate[0]\"></app-budget-chart>\n    </div>\n    <div class=\"container-small\">\n        <div class=\"month-container\">\n            <div class=\"arrow-left\" (click)=\"previousMonth(1)\"></div>\n            <div class=\"month-name\"> {{chartDate[1] | date: 'MMMM yyyy'}} </div>\n            <div class=\"arrow-right\" (click)=\"nextMonth(1)\"></div>\n        </div>\n        <app-vertical-bar-chart-incomes-expenses [chartType]=\"chartType\" [chartDate]=\"chartDate[1]\"></app-vertical-bar-chart-incomes-expenses>\n    </div>\n</div>\n<app-footer></app-footer>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-firm-user-budget',\n  templateUrl: './firm-user-budget.component.html',\n  styleUrls: ['./firm-user-budget.component.scss']\n})\nexport class FirmUserBudgetComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header pageName=\"Twoje konto w firmie\"></app-header>\n<div class=\"container\">\n    <app-sidenav></app-sidenav>\n    <app-budget-list type=\"firm\"></app-budget-list>\n</div>\n<app-footer></app-footer>\n\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FirmSearchModalComponent } from 'src/app/components/modals/firm-search-modal/firm-search-modal.component';\nimport { FirmCreateModalComponent } from 'src/app/components/modals/firm-create-modal/firm-create-modal.component';\nimport { FirmService } from 'src/app/services/firm.service';\nimport { ChartService } from 'src/app/services/chart.service';\n\n@Component({\n  selector: 'app-firm',\n  templateUrl: './firm.component.html',\n  styleUrls: ['./firm.component.scss']\n})\nexport class FirmComponent implements OnInit {\n\n  chartType = 'firm';\n  userId = localStorage.getItem('user');\n  user;\n  firm;\n  sidenavRefresh = false;\n\n  constructor(private userService: UserService, private dialog: MatDialog, private firmService: FirmService,\n              private chartService: ChartService) { }\n\n  ngOnInit(): void {\n    this.refresh();\n  }\n\n  refresh() {\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n\n      this.firmService.getFirm(this.user.firmId).subscribe(response => {\n        this.firm = response;\n      });\n    });\n  }\n\n  searchFirm() {\n    const ref = this.dialog.open(FirmSearchModalComponent);\n    ref.afterClosed().subscribe(_ => {\n      this.refresh();\n    });\n  }\n\n  createFirm() {\n    const ref = this.dialog.open(FirmCreateModalComponent);\n    ref.afterClosed().subscribe(_ => {\n      this.refresh();\n      this.sidenavRefresh = !this.sidenavRefresh;\n    });\n  }\n\n}\n","<app-header pageName=\"Firma\"></app-header>\n<div class=\"firm-container\">\n    <app-sidenav shouldRefresh=\"sidenavRefresh\"></app-sidenav>\n    <div class=\"no-firm\" *ngIf=\"!user?.firmId\">\n        <p>Obecnie nie jesteś członkiem żadnej firmy!</p>\n        <div class=\"firm-button-container\">\n            <button mat-raised-button type=\"button\" (click)=\"searchFirm()\">Poszukaj firmy</button>\n            <button mat-raised-button type=\"button\" (click)=\"createFirm()\">Utwórz firme</button>\n        </div>\n    </div>\n    <div class=\"waiting-for-accept\" *ngIf=\"user?.firmStatus == 0 && user?.firmId\">\n        <p>Twoje zaproszenie do firmy {{firm?.name}} oczekuję na akceptacje</p>\n    </div>\n    <div class=\"firm\" *ngIf=\"user?.firmId && user?.firmStatus > 0\">\n        <div class=\"firm-header\">\n            <h2 class=\"title\"> {{firm?.name}} </h2>\n            <p>&bull;</p>\n            <p class=\"manage-button\" routerLink=\"/zarzadzaj-firma\">Zarządzaj</p>\n        </div>\n        <div class=\"firm-main-content\">\n            <div class=\"grid-container\">\n                <app-firm-budget-list></app-firm-budget-list>\n                <app-budget-chart [chartType]=\"chartType\"></app-budget-chart>\n            </div>\n            <app-firm-users-list class=\"users-list\"></app-firm-users-list>\n        </div>\n    </div>\n</div>\n<app-footer></app-footer>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Mail } from '../../models/mail';\nimport { UserService } from 'src/app/services/user.service';\nimport { MailService } from 'src/app/services/mail.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OpenMailModalComponent } from '../../components/modals/open-mail-modal/open-mail-modal.component';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\n\n@Component({\n  selector: 'app-helpdesk',\n  templateUrl: './helpdesk.component.html',\n  styleUrls: ['./helpdesk.component.scss']\n})\nexport class HelpdeskComponent implements OnInit {\n\n  userId = localStorage.getItem('user');\n  user;\n  mailModel = new Mail('', '', '', '', '', '', '');\n\n  sendedMails: any = [];\n  displayedColumnsSendedMails = ['topic', 'message', 'status'];\n  dataSourceSendedMails;\n\n  receivedMails: any = [];\n  displayedColumnsReceivedMails = ['topic', 'message', 'senderName'];\n  dataSourceReceivedMails;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(private userService: UserService, private mailService: MailService, private snackBar: MatSnackBar,\n              public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n    });\n    this.getSendedMessages();\n    this.getReceivedMessages();\n}\n\n  getSendedMessages() {\n    this.mailService.getSendedMails(this.userId).subscribe(res => {\n      this.sendedMails = res || [];\n      this.dataSourceSendedMails = new MatTableDataSource(this.sendedMails || []);\n      this.dataSourceSendedMails.sort = this.sort;\n      this.dataSourceSendedMails.paginator = this.paginator;\n    });\n  }\n\n  getReceivedMessages() {\n    this.mailService.getReceivedMails(this.userId).subscribe(res => {\n      this.receivedMails = res || [];\n      this.receivedMails = this.receivedMails.filter(mail => {\n        if (mail.type === 'adminResponse') { return mail; }\n      });\n      this.dataSourceReceivedMails = new MatTableDataSource(this.receivedMails || []);\n      this.dataSourceReceivedMails.sort = this.sort;\n      this.dataSourceReceivedMails.paginator = this.paginator;\n    });\n  }\n\n  sendMessage() {\n    const username = this.user.name + ' ' + this.user.surname;\n    this.mailModel.senderName = username;\n    this.mailModel.senderId = this.userId;\n    this.mailModel.type = 'userAsk';\n    this.mailService.sendMessage(this.mailModel).subscribe(\n      res => {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Wiadomość została wysłana', 'OK', {\n          duration: 5000,\n          horizontalPosition: 'right',\n          panelClass: ['snackbar-success']\n        });\n        this.mailModel.topic = '';\n        this.mailModel.message = '';\n        this.getSendedMessages();\n    });\n  }\n\n  openMail(mail) {\n    const ref = this.dialog.open(OpenMailModalComponent, {\n      height: '500px',\n      width: '600px',\n      data: {\n        mail,\n        isAdmin: false\n      }\n    });\n    ref.afterClosed().subscribe(() => {\n      this.getSendedMessages();\n    });\n  }\n\n}\n","<app-header pageName=\"Pomoc\"></app-header>\n<app-sidenav></app-sidenav>\n\n<div class=\"helpdesk-container\">\n\n    <mat-tab-group class=\"tabs-container\" mat-align-tabs=\"center\">\n        <mat-tab label=\"Wyślij wiadomość\">\n            <form class=\"helpdesk-form\" #HelpdeskForm=\"ngForm\">\n                <mat-form-field class=\"form-group\">\n                    <mat-label>Temat</mat-label>\n                    <input matInput class=\"form-control\" type=\"text\" name=\"topic\" [(ngModel)]=\"mailModel.topic\" #name=\"ngModel\" required>\n                    <!-- <div *ngIf=\"name.errors && name.touched\">\n                        <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n                        <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n                    </div> -->\n                </mat-form-field>\n\n                <mat-form-field class=\"form-group\">\n                    <mat-label>Opisz swój problem...</mat-label>\n                    <textarea matInput class=\"form-control textarea\" name=\"message\" [(ngModel)]=\"mailModel.message\" #name=\"ngModel\" required maxlength=\"100\"></textarea>\n                    <!-- <div *ngIf=\"name.errors && name.touched\">\n                        <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n                        <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n                    </div> -->\n                </mat-form-field>\n\n                <button mat-button class=\"btn-success\" type=\"button\" [disabled]=\"HelpdeskForm.form.invalid\" (click)=\"sendMessage()\">Wyślij</button>\n            </form>\n        </mat-tab>\n        <mat-tab label=\"Otrzymane wiadomości\">\n            <div>\n                <mat-paginator [length]=\"this.receivedMails?.length || 0\"\n                [pageSize]=\"5\"\n                [pageSizeOptions]=\"[3, 5, 10]\">\n                </mat-paginator>\n\n                <table mat-table [dataSource]=\"dataSourceReceivedMails\" class=\"sended-messeges-list mat-elevation-z8\">\n                \n                    <ng-container matColumnDef=\"topic\">\n                        <th mat-header-cell *matHeaderCellDef> Temat </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.topic}} </td>\n                    </ng-container>\n                \n                    <ng-container matColumnDef=\"message\">\n                        <th mat-header-cell *matHeaderCellDef> Wiadomość </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.message | slice:0:30}} </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"senderName\">\n                        <th mat-header-cell *matHeaderCellDef> Wysłał </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.senderName}} </td>\n                    </ng-container>\n                \n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumnsReceivedMails\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumnsReceivedMails;\" (click)=\"openMail(row)\"></tr>\n                </table>\n            </div>\n        </mat-tab>\n        <mat-tab label=\"Wysłane wiadomości\">\n            <div>\n                <mat-paginator [length]=\"this.sendedMails?.length || 0\"\n                [pageSize]=\"5\"\n                [pageSizeOptions]=\"[3, 5, 10]\">\n                </mat-paginator>\n\n                <table mat-table [dataSource]=\"dataSourceSendedMails\" class=\"sended-messeges-list mat-elevation-z8\">\n                \n                    <ng-container matColumnDef=\"topic\">\n                    <th mat-header-cell *matHeaderCellDef> Temat </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.topic}} </td>\n                    </ng-container>\n                \n                    <ng-container matColumnDef=\"message\">\n                    <th mat-header-cell *matHeaderCellDef> Wiadomość </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.message | slice:0:30}} </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"status\">\n                        <th mat-header-cell *matHeaderCellDef> Status </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.status}} </td>\n                    </ng-container>\n                \n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumnsSendedMails\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumnsSendedMails;\" (click)=\"openMail(row)\"></tr>\n                </table>\n            </div>\n        </mat-tab>\n    </mat-tab-group>\n\n\n\n</div>\n\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginModel = {email: '', password: ''};\n\n  constructor(private userService: UserService, private router: Router, private authService: AuthService, private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    if (this.authService.isAuthenticated) this.router.navigate(['/przeglad'])\n  }\n\n  loginUser() {\n\n   this.userService.loginUser(this.loginModel.email, this.loginModel.password).subscribe(\n     res => {\n      localStorage.setItem('token', res.token);\n      localStorage.setItem('user', res.userId);\n      this.userService.changeOnlineStatus(res.userId).subscribe();\n      this.router.navigate(['/przeglad']);\n   },\n   error => {\n      if (error.error == 'Invalid email' || error.error == 'Invalid password') {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Nieprawidłowy adres email lub hasło', 'OK', {\n          horizontalPosition: 'right',\n          duration: 5000,\n          panelClass: ['snackbar-warn']\n        })\n      }\n      else if (error.error == 'User is blocked') {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Twoje konto zostało zbanowane', 'OK', {\n          horizontalPosition: 'right',\n          duration: 5000,\n          panelClass: ['snackbar-warn']\n        })\n      }\n      else if (error) {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Coś poszło nie tak, spróbuj ponownie później', 'OK', {\n          horizontalPosition: 'right',\n          duration: 5000,\n          panelClass: ['snackbar-warn']\n        })\n      }\n   })\n  }\n }\n","<div class=\"login-container\">\n    <form id=\"LoginForm\" class=\"login-form\" #LoginForm=\"ngForm\">\n\n        <div class=\"logo\">\n            <img src=\"../../../assets/images/logo-gray.png\" alt=\"logo\">\n        </div>\n\n        <h2 class=\"title\">Zaloguj się</h2>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Email</mat-label>\n            <input matInput class=\"form-control\" type=\"email\" placeholder=\"email\" name=\"email\" [(ngModel)]=\"loginModel.email\" #email=\"ngModel\">\n        </mat-form-field>\n    \n        <mat-form-field class=\"form-group\">\n            <mat-label>Hasło</mat-label>\n            <input matInput class=\"form-control\" type=\"password\" placeholder=\"hasło\" name=\"password\" [(ngModel)]=\"loginModel.password\" #password=\"ngModel\">\n        </mat-form-field>\n\n        <button mat-raised-button type=\"button\" [disabled]=\"LoginForm.form.invalid\" (click)=\"loginUser()\">Zaloguj się</button>\n    \n    </form>\n    <p class=\"register-button\">Nie masz jeszcze konta ? <a class=\"underline\" routerLink=\"/rejestracja\">Zarejestruj się</a></p>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FirmService } from 'src/app/services/firm.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ChangePermissionsModalComponent } from 'src/app/components/modals/change-permissions-modal/change-permissions-modal.component';\nimport { Router } from '@angular/router';\nimport { EditFirmDataModalComponent } from 'src/app/components/modals/edit-firm-data-modal/edit-firm-data-modal.component';\nimport { ConfirmLeavingFirmComponent } from 'src/app/components/modals/confirm-leaving-firm/confirm-leaving-firm.component';\n\n@Component({\n  selector: 'app-manage-firm',\n  templateUrl: './manage-firm.component.html',\n  styleUrls: ['./manage-firm.component.scss']\n})\nexport class ManageFirmComponent implements OnInit {\n\n  user;\n  userId = localStorage.getItem('user');\n  firm;\n  accountChangesContainer;\n  sidenavRefresh = false;\n\n  constructor(private firmService: FirmService, private userService: UserService, private dialog: MatDialog, private router: Router) { }\n\n  ngOnInit(): void {\n    this.refresh();\n  }\n\n  refresh() {\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n\n      this.firmService.getFirm(this.user.firmId).subscribe(response => {\n        this.firm = response;\n        this.accountChangesContainer = [...this.firm.firmBudget.income, ...this.firm.firmBudget.expense];\n      });\n    });\n  }\n\n  acceptUser(id) {\n    this.userService.acceptUserToFirm(id).subscribe(() => {\n      this.refresh();\n    });\n  }\n\n  discardUser(id) {\n    this.userService.discardUserToFirm(id).subscribe(() => {\n      this.refresh();\n    });\n  }\n\n  acceptBudgetChange(id) {\n    this.firmService.acceptBudgetChange(this.firm._id, id).subscribe(() => {\n      this.refresh();\n    });\n  }\n\n  discardBudgetChange(id) {\n    this.firmService.discardBudgetChange(this.firm._id, id).subscribe(() => {\n      this.refresh();\n    });\n  }\n\n  changePermissions(id) {\n    const ref = this.dialog.open(ChangePermissionsModalComponent, {\n      data: {\n        userId: this.user._id,\n        employeeId: id\n      }\n    });\n    ref.afterClosed().subscribe(() => {\n      this.refresh();\n    });\n  }\n\n  deleteEmployee(id) {\n    this.userService.deleteUserFromFirm(id).subscribe(() => {\n      this.refresh();\n    });\n  }\n\n  deleteFirm() {\n    this.firmService.deleteFirm(this.firm._id).subscribe();\n    this.router.navigate(['/przeglad']);\n    this.sidenavRefresh = true;\n  }\n\n  leaveFirm() {\n    let amountOfOwners = 0;\n    this.firm.users.forEach(user => {\n      if (user.firmStatus === 3) { amountOfOwners++; }\n    });\n    if (amountOfOwners === 1 && this.user.firmStatus === 3) {\n      const ref = this.dialog.open(ConfirmLeavingFirmComponent);\n      ref.afterClosed().subscribe(res => {\n        if (res === true) {\n          this.firmService.deleteFirm(this.firm._id).subscribe();\n          this.router.navigate(['/firma']);\n        }\n      });\n    }\n    else {\n      this.userService.leaveFirm(this.user._id).subscribe();\n      this.router.navigate(['/firma']);\n    }\n    this.sidenavRefresh = true;\n  }\n\n  editFirmData() {\n    const ref = this.dialog.open(EditFirmDataModalComponent, {\n      data: {\n        id: this.firm._id\n      }\n    });\n    ref.afterClosed().subscribe( () => {\n      this.refresh();\n    });\n  }\n\n}\n","<app-header pageName=\"Zarządzaj firmą\"></app-header>\n<app-sidenav shoouldRefresh=\"sidenavRefresh\"></app-sidenav>\n\n<div class=\"firm-manage-container\">\n\n    <div class=\"firm-section\">\n        <h2 class=\"title\">Dane firmy</h2>\n        <p *ngIf=\"user?.firmStatus == 3\" class=\"edit-button\" (click)=\"editFirmData()\" routerLink=\"/zarzadzaj-firma\">Edytuj</p>\n\n        <div class=\"firm-informations-item\">\n            <p class=\"label\">Nazwa</p>\n            <p class=\"item\"> {{firm?.name}} </p>\n        </div>\n        <div class=\"firm-informations-item\">\n            <p class=\"label\">Państwo</p>\n            <p class=\"item\"> {{firm?.address.country}} </p>\n        </div>\n        <div class=\"firm-informations-item\">\n            <p class=\"label\">Miasto</p>\n            <p class=\"item\"> {{firm?.address.city}} </p>\n        </div>\n        <div class=\"firm-informations-item\">\n            <p class=\"label\">Ulica</p>\n            <p class=\"item\"> {{firm?.address.street}} </p>\n        </div>\n    </div>\n\n    <div class=\"firm-section\" *ngIf=\"user?.firmStatus > 1\">\n        <h2 class=\"title\">Prośby o dołączenie</h2>\n        <!-- <div class=\"no-attempting\">\n            <p>Brak próśb o dołączenie</p>\n        </div> -->\n        <mat-list class=\"attempting-users\" *ngFor=\"let user of firm?.users\">\n            <mat-list-item class=\"attempting-users-item\" *ngIf=\"user.firmStatus == 0\" > \n                <p>{{user?.name}} {{user?.surname}}</p> \n                <div class=\"button-container\">\n                    <button mat-raised-button class=\"button--success\" type=\"button\" (click)=\"acceptUser(user._id)\"><mat-icon>add</mat-icon></button>\n                    <button mat-raised-button class=\"button--delete\" type=\"button\" (click)=\"discardUser(user._id)\"><mat-icon>delete</mat-icon></button>\n                </div>\n            </mat-list-item>\n        </mat-list>\n    </div>\n\n    <div class=\"firm-section\" *ngIf=\"user?.firmStatus > 1\">\n        <h2 class=\"title\">Prośby o dodanie wpłaty/wydatku</h2>\n        <!-- <div class=\"no-attempting\">\n            <p>Brak próśb o dołączenie</p>\n        </div> -->\n        <mat-list class=\"attempting-budget-changes\" *ngFor=\"let accountChange of accountChangesContainer\">\n            <mat-list-item class=\"attempting-budget-changes-item\" *ngIf=\"accountChange.status == 'Waiting'\">\n                <mat-icon mat-list-icon>credit_card</mat-icon>\n                <div mat-line> {{accountChange.name}} \n                    <span class=\"align-right\" [class]=\"accountChange.type=='income' ? 'income': 'expense'\">{{accountChange.money | currency: ' '}}zł</span>  \n                </div>\n                <div mat-line> {{accountChange.category.name}} \n                    <span class=\"align-right\">{{accountChange.date | date:'dd.MM.yyyy'}}</span> \n                </div>\n                <div class=\"button-container\">\n                    <button type=\"button\" mat-raised-button class=\"button--success\" (click)=\"acceptBudgetChange(accountChange._id)\"><mat-icon>add</mat-icon></button>\n                    <button type=\"button\" mat-raised-button class=\"button--delete\" (click)=\"discardBudgetChange(accountChange._id)\"><mat-icon>delete</mat-icon></button>\n                </div>\n                <mat-divider></mat-divider>\n            </mat-list-item>\n        </mat-list>\n    </div>\n\n    <div class=\"firm-section\" *ngIf=\"user?.firmStatus > 1\">\n        <h2 class=\"title\">Zarządzaj pracownikami</h2>\n        <!-- <div class=\"no-attempting\">\n            <p>Brak próśb o dołączenie</p>\n        </div> -->\n\n        <div *ngFor=\"let employee of firm?.users\">\n            <mat-card class=\"users-manage\" *ngIf=\"employee.firmStatus <= user?.firmStatus && employee.firmStatus > 0\">\n                <mat-card-header>\n                    <mat-card-title> {{employee.name}} {{employee.surname}} </mat-card-title>\n                    <mat-card-subtitle> {{employee.firmStatus == 1 ? 'Pracownik' : employee.firmStatus == 2 ? 'Kierownik' : 'Właściciel'}} \n                    </mat-card-subtitle>\n                </mat-card-header>\n                <mat-card-actions>\n                    <button mat-button class=\"button--gold\" (click)=\"changePermissions(employee._id)\">Uprawnienia</button>\n                    <button *ngIf=\"employee._id != user._id\" mat-button class=\"button--delete\" (click)=\"deleteEmployee(employee._id)\">Usuń</button>\n                </mat-card-actions>\n            </mat-card>\n        </div>\n    </div>\n\n    <div class=\"firm-section danger delete\">\n        <h2 class=\"title\">Opuść firme</h2>\n        <button mat-button class=\"button--delete\" (click)=\"leaveFirm()\">Opuść firmę</button>\n    </div>\n    \n    <div class=\"firm-section danger delete\" *ngIf=\"user?.firmStatus > 1\">\n        <h2 class=\"title\">Usuń firme</h2>\n        <button mat-button class=\"button--delete\" (click)=\"deleteFirm()\">Usuń firmę</button>\n    </div>\n\n    \n</div>\n\n\n<app-footer></app-footer>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { FirmService } from 'src/app/services/firm.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Income } from 'src/app/models/income';\nimport { Expense } from 'src/app/models/expense';\n\n@Component({\n  selector: 'app-money-transfer-firm',\n  templateUrl: './money-transfer-firm.component.html',\n  styleUrls: ['./money-transfer-firm.component.scss']\n})\nexport class MoneyTransferFirmComponent implements OnInit {\n\n  userId = localStorage.getItem('user');\n  user;\n  firm;\n  paymentModel = new Income('', null, null, {name: 'Przelew', icon: '', matches: []}, '', 'Waiting', '', '', '', '');\n  paymentToFirmModel = new Income('', null, null, {name: 'Przelew', icon: '', matches: []}, '', 'Waiting', '', '', '', '');\n  paymentFromFirmToUserModel = new Income('', null, null, {name: 'Przelew', icon: '', matches: []}, '', 'Waiting', '', '', '', '');\n  selectedUser;\n\n  constructor(private userService: UserService, private firmService: FirmService, public dialog: MatDialog,\n              private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n\n      this.firmService.getFirm(this.user.firmId).subscribe(response => {\n        this.firm = response;\n      });\n    });\n  }\n\n  sendPaymentToUser() {\n    if (!this.checkUserBudget(this.paymentModel)) { return; }\n\n    const expense = new Expense('', 0, null, {name: 'Przelew', icon: '', matches: []}, 'expense', '', '');\n    expense.name = this.paymentModel.name;\n    expense.money = this.paymentModel.money;\n    expense.date = new Date();\n    expense.type = 'expense';\n    expense.status = 'Accepted';\n    this.user.firmBudget.expense.push(expense);\n\n    this.paymentModel.type = 'income';\n    this.paymentModel.status = 'Accepted';\n    this.paymentModel.date = new Date();\n\n    this.user.budget.income.push(this.paymentModel);\n    this.userService.editUser(this.userId, this.user).subscribe(res => {\n      this.userService.playNotificationsSound();\n      this.snackBar.open('Udało się wysłać pieniądze', 'OK', {\n        panelClass: ['snackbar-success'],\n        duration: 5000,\n        horizontalPosition: 'right'\n      });\n    });\n  }\n\n  sendPaymentToFirm() {\n    if (!this.checkUserBudget(this.paymentToFirmModel)) { return; }\n\n    const expense = new Expense('', 0, null, {name: 'Przelew', icon: '', matches: []}, 'expense', '', '');\n    expense.name = this.paymentToFirmModel.name;\n    expense.money = this.paymentToFirmModel.money;\n    expense.date = new Date();\n    expense.type = 'expense';\n    expense.status = 'Waiting';\n    this.user.firmBudget.expense.push(expense);\n\n    this.paymentToFirmModel.type = 'income';\n    if (this.user.firmStatus > 1) {\n      this.paymentToFirmModel.status = 'Accepted';\n    }\n    else {\n      this.paymentToFirmModel.status = 'Waiting';\n    }\n    this.paymentToFirmModel.date = new Date();\n    this.paymentToFirmModel.senderName = this.user.name + ' ' + this.user.surname;\n    this.paymentToFirmModel.senderId = this.user._id;\n\n    this.firmService.getFirm(this.user.firmId).subscribe(res => {\n      this.firm = res;\n      this.firm.firmBudget.income.push(this.paymentToFirmModel);\n\n      this.firmService.editFirm(this.firm._id, this.firm).subscribe( () => {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Udało się wysłać pieniądze', 'OK', {\n          panelClass: ['snackbar-success'],\n          duration: 5000,\n          horizontalPosition: 'right'\n        });\n      });\n    });\n  }\n\n  sendPaymentFromFirmToUser() {\n    if (!this.checkFirmBudget(this.paymentFromFirmToUserModel)) { return; }\n\n    let totalExpense = 0;\n\n    this.paymentFromFirmToUserModel.type = 'income';\n    this.paymentFromFirmToUserModel.status = 'Accepted';\n    this.paymentFromFirmToUserModel.date = new Date();\n    this.paymentFromFirmToUserModel.senderName = this.firm.name;\n\n    this.selectedUser.forEach(user => {\n      user.firmBudget.income.push(this.paymentFromFirmToUserModel);\n      this.userService.editUser(user._id, user).subscribe();\n      totalExpense += this.paymentFromFirmToUserModel.money;\n    });\n\n    const expense = new Expense('', 0, null, {name: 'Przelew', icon: '', matches: []}, 'expense', '', '');\n    expense.name = this.paymentFromFirmToUserModel.name;\n    expense.money = totalExpense;\n    expense.date = new Date();\n    expense.type = 'expense';\n    expense.status = 'Accepted';\n    console.log(expense);\n    this.firm.firmBudget.expense.push(expense);\n\n    this.firmService.editFirm(this.firm._id, this.firm).subscribe(_ => {\n      this.userService.playNotificationsSound();\n      this.snackBar.open('Udało się wysłać pieniądze', 'OK', {\n        panelClass: ['snackbar-success'],\n        duration: 5000,\n        horizontalPosition: 'right'\n      });\n    });\n  }\n\n  checkUserBudget(payment) {\n    if (this.user.firmBudget.money - payment.money < 0) {\n      this.userService.playNotificationsSound();\n      this.snackBar.open('Zbyt mało środków na koncie', 'OK', {\n        panelClass: ['snackbar-warn'],\n        duration: 5000,\n        horizontalPosition: 'right'\n      });\n      return false;\n    }\n    return true;\n  }\n\n  checkFirmBudget(payment) {\n    if (this.firm.firmBudget.money - payment.money < 0) {\n      this.userService.playNotificationsSound();\n      this.snackBar.open('Zbyt mało środków na koncie', 'OK', {\n        panelClass: ['snackbar-warn'],\n        duration: 5000,\n        horizontalPosition: 'right'\n      });\n      return false;\n    }\n    return true;\n  }\n}\n","<app-header pageName=\"Przelew firmy\"></app-header>\n<app-sidenav></app-sidenav>\n\n    <mat-tab-group mat-align-tabs=\"center\" class=\"money-transfer-container\">\n        <mat-tab label=\"Przelew na swoje konto\">\n            <form class=\"send-money-form\" #SendMoneyForm=\"ngForm\">\n                <mat-form-field class=\"form-group\">\n                    <mat-label>Tytuł</mat-label>\n                    <input matInput class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"paymentModel.name\" #name=\"ngModel\" required>\n                </mat-form-field>\n            \n                <mat-form-field class=\"form-group\">\n                    <mat-label>Ilość pieniędzy</mat-label>\n                    <input matInput class=\"form-control\" type=\"number\" min=\"0\" name=\"money\" [(ngModel)]=\"paymentModel.money\" #money=\"ngModel\" required>\n                </mat-form-field>\n            \n                <mat-form-field class=\"form-group\">\n                    <mat-label>Wiadomość</mat-label>\n                    <textarea matInput class=\"form-control\" name=\"message\" [(ngModel)]=\"paymentModel.message\" #money=\"ngModel\"></textarea>\n                </mat-form-field>\n\n                <button mat-button class=\"btn-success\" type=\"button\" [disabled]=\"SendMoneyForm.form.invalid\" \n                (click)=\"sendPaymentToUser()\">Wykonaj</button>\n                \n            </form>\n        </mat-tab>\n        <mat-tab label=\"Przelew do firmy\">\n            <form class=\"send-money-form\" #SendMoneyFormToFirm=\"ngForm\">\n                <mat-form-field class=\"form-group\">\n                    <mat-label>Tytuł</mat-label>\n                    <input matInput class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"paymentToFirmModel.name\" #name=\"ngModel\" required>\n                </mat-form-field>\n            \n                <mat-form-field class=\"form-group\">\n                    <mat-label>Ilość pieniędzy</mat-label>\n                    <input matInput class=\"form-control\" type=\"number\" min=\"0\" name=\"money\" [(ngModel)]=\"paymentToFirmModel.money\" #money=\"ngModel\" required>\n                </mat-form-field>\n            \n                <mat-form-field class=\"form-group\">\n                    <mat-label>Wiadomość</mat-label>\n                    <textarea matInput class=\"form-control\" name=\"message\" [(ngModel)]=\"paymentToFirmModel.message\" #money=\"ngModel\"></textarea>\n                </mat-form-field>\n\n                <button mat-button class=\"btn-success\" type=\"button\" [disabled]=\"SendMoneyFormToFirm.form.invalid\" \n                (click)=\"sendPaymentToFirm()\">Wykonaj</button>\n                \n            </form>\n        </mat-tab>\n        <mat-tab *ngIf=\"user?.firmStatus > 1\" label=\"Przelew z firmy do użytkownika\">\n            <form class=\"send-money-form\" #SendMoneyFormFromFirmToUser=\"ngForm\">\n                <mat-form-field class=\"form-group\">\n                    <mat-label>Tytuł</mat-label>\n                    <input matInput class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"paymentFromFirmToUserModel.name\" #name=\"ngModel\" required>\n                </mat-form-field>\n            \n                <mat-form-field class=\"form-group\">\n                    <mat-label>Ilość pieniędzy</mat-label>\n                    <input matInput class=\"form-control\" type=\"number\" min=\"0\" name=\"money\" [(ngModel)]=\"paymentFromFirmToUserModel.money\" #money=\"ngModel\" required>\n                </mat-form-field>\n            \n                <mat-form-field class=\"form-group\">\n                    <mat-label>Wiadomość</mat-label>\n                    <textarea matInput class=\"form-control\" name=\"message\" [(ngModel)]=\"paymentFromFirmToUserModel.message\" #money=\"ngModel\"></textarea>\n                </mat-form-field>\n\n                \n                <mat-form-field class=\"form-group\">\n                    <mat-label>Użytkownik</mat-label>\n                    <mat-select multiple [(ngModel)]=\"selectedUser\" class=\"select\" name=\"user\" required>\n                        <mat-option *ngFor=\"let user of firm?.users\" [value]=\"user\">{{user.name}} {{user.surname}}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n\n                <button mat-button class=\"btn-success\" type=\"button\" [disabled]=\"SendMoneyFormFromFirmToUser.form.invalid\" \n                (click)=\"sendPaymentFromFirmToUser()\">Wykonaj</button>\n                \n            </form>\n        </mat-tab>\n    </mat-tab-group>\n\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SendMoneyDialogComponent } from 'src/app/components/modals/send-money-dialog/send-money-dialog.component';\nimport { FirmService } from 'src/app/services/firm.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { EventEmitterService } from 'src/app/services/event-emitter.service';\nimport { Income } from 'src/app/models/income';\nimport { Expense } from 'src/app/models/expense';\nimport { Budget } from 'src/app/models/budget';\n\n@Component({\n  selector: 'app-money-transfer',\n  templateUrl: './money-transfer.component.html',\n  styleUrls: ['./money-transfer.component.scss']\n})\nexport class MoneyTransferComponent implements OnInit {\n\n  user;\n  userId = localStorage.getItem('user');\n  users;\n  firms;\n  searchedUser: string;\n  searchedFirm: string;\n  awaitingPayments;\n  paymentModel = new Income('Przelew własny', null, null, {name: 'Przelew', icon: '', matches: []}, '', 'Accepted', '', '', '', '');\n\n  constructor(private userService: UserService, private firmService: FirmService, public dialog: MatDialog,\n              private snackBar: MatSnackBar, private router: Router, private eventEmitterService: EventEmitterService) { }\n\n  ngOnInit(): void {\n    this.refreshList();\n\n    this.userService.getUsers().subscribe(res => {\n      this.users = res;\n      this.users = this.users.filter(user => {\n        return user._id !== this.userId;\n      });\n    });\n\n    this.firmService.getFirms().subscribe(res => {\n      this.firms = res;\n    });\n  }\n\n  refreshList() {\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n\n      this.awaitingPayments = [...this.user.budget.income];\n\n      this.awaitingPayments = this.awaitingPayments.filter(payment => {\n        return payment.status === 'Waiting';\n      });\n      this.awaitingPayments = this.awaitingPayments.filter(payment =>\n        !this.user.disabledUser.filter(user => user === payment.senderId).length\n      );\n\n      this.awaitingPayments.forEach(payment => {\n        this.userService.getUser(payment.senderId).subscribe(response => {\n          payment.sender = response.name + ' ' + response.surname;\n          payment.senderImage = response.photo;\n        });\n      });\n    });\n  }\n\n  sendMoney(target, type) {\n    let blockedUser = false;\n\n    target.disabledUser.map(user => {\n      if (user === this.userId) {\n        blockedUser = true;\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Użytkownik docelowy zablokował Ci możliwość wysyłania pieniędzy', 'OK', {\n          duration: 5000,\n          horizontalPosition: 'right',\n          panelClass: ['snackbar-warn']\n        });\n        return;\n      }\n    });\n\n    if (target.settings.allowReceivingTransfers === false) {\n      this.userService.playNotificationsSound();\n      this.snackBar.open('Użytkownik docelowy zablokował możliwość wysyłania przelewów', 'OK', {\n        duration: 5000,\n        horizontalPosition: 'right',\n        panelClass: ['snackbar-warn']\n      });\n      return;\n    }\n\n    if (!blockedUser) {\n      const ref = this.dialog.open(SendMoneyDialogComponent, {\n        data: {\n          target,\n          type,\n          senderName: this.user.name + ' ' + this.user.surname\n        }\n      });\n      ref.afterClosed().subscribe(res => {\n        if (res === true) {\n          this.userService.playNotificationsSound();\n          this.snackBar.open('Udało się wysłać przelew', 'OK', {\n            panelClass: ['snackbar-success'],\n            duration: 5000,\n            horizontalPosition: 'right',\n          });\n        }\n        else {\n          this.userService.playNotificationsSound();\n          this.snackBar.open('Nie powiodło się wysyłanie przelewu', 'OK', {\n            panelClass: ['snackbar-warn'],\n            duration: 5000,\n            horizontalPosition: 'right'\n          });\n        }\n      });\n    }\n  }\n\n  sendMoneyToFirmAccount() {\n\n    if (this.user.settings.isBudgetNegativeValueAllowed === false &&\n      this.user.budget.money - this.paymentModel.money < 0 ) {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Nie powiodło się wysyłanie przelewu, konto nie może być ujemne', 'OK', {\n          panelClass: ['snackbar-warn'],\n          duration: 5000,\n          horizontalPosition: 'right'\n        });\n        return;\n      }\n\n    this.paymentModel.date = new Date();\n\n    const expense = new Expense('', 0, null, {name: 'Przelew', icon: '', matches: []}, 'expense', '', '');\n    expense.name = this.paymentModel.name;\n    expense.money = this.paymentModel.money;\n    expense.date = this.paymentModel.date;\n    expense.type = 'expense';\n    expense.status = 'Accepted';\n    this.user.budget.expense.push(expense);\n\n    this.paymentModel.type = 'income';\n    this.paymentModel.senderId = this.user._id;\n\n    if (!this.user.firmBudget) { this.user.firmBudget = new Budget(0, [], []); }\n    this.user.firmBudget.income.push(this.paymentModel);\n    this.userService.editUser(this.userId, this.user).subscribe(res => {\n      this.userService.playNotificationsSound();\n      this.snackBar.open('Udało się wysłać pieniądze', 'OK', {\n        panelClass: ['snackbar-success'],\n        duration: 5000,\n        horizontalPosition: 'right'\n      });\n    });\n  }\n\n  acceptMoney(payment) {\n    this.user.awaitingPaymentsToAccept--;\n    this.user.budget.income.map(income => {\n      if (income._id === payment._id) {\n        income.status = 'Accepted';\n        return;\n      }\n    });\n    this.userService.editUser(this.userId, this.user).subscribe(() => {\n      this.refreshList();\n    });\n    this.eventEmitterService.invokeSidenavRefreshListFunction();\n  }\n\n  discardMoney(payment) {\n    this.user.awaitingPaymentsToAccept--;\n    // Deleting income for current user\n    this.user.budget.income.map((income, index) => {\n      if (income._id === payment._id) {\n        this.user.budget.income.splice(index, 1);\n        return;\n      }\n    });\n\n    this.userService.changeBudgetUser(this.userId, this.user).subscribe(() => {\n      this.refreshList();\n    });\n    // Deleting expense for sending user\n    let sender;\n\n    this.userService.getUser(payment.senderId).subscribe(res => {\n      sender = res;\n      sender.budget.expense = sender.budget.expense.filter((expense) => {\n        if (expense._id !== payment.expenseRef) { return expense; }\n      });\n      this.userService.editUser(sender._id, sender).subscribe(() => {\n        this.refreshList();\n      });\n    });\n    this.eventEmitterService.invokeSidenavRefreshListFunction();\n  }\n\n  disableUser(payment) {\n    if (!this.user.disabledUser) { this.user.disabledUser = []; }\n    this.user.disabledUser.push(payment.senderId);\n    this.awaitingPayments.map(p => {\n      if (p.senderId === payment.senderId) { this.discardMoney(p); }\n    });\n    this.userService.editUser(this.userId, this.user).subscribe(() => {\n      this.refreshList();\n    });\n    this.eventEmitterService.invokeSidenavRefreshListFunction();\n  }\n\n  goToProfile(id) {\n    this.router.navigate(['/profil'], {queryParams: {id}});\n  }\n\n}\n","<app-header pageName=\"Przelew\"></app-header>\n<app-sidenav></app-sidenav>\n\n    <mat-tab-group mat-align-tabs=\"center\" class=\"money-transfer-container\">\n        <mat-tab label=\"Przelew do użytkownika\">\n            <div class=\"transfer-user-container\">\n                <mat-form-field>\n                    <mat-label>Wyszukaj użytkownika</mat-label>\n                    <input matInput type=\"text\" [(ngModel)]=\"searchedUser\" autocomplete=\"off\">\n                </mat-form-field>\n    \n                <mat-list role=\"list\" class=\"list\" *ngFor=\"let user of users | moneyTransferPipe:searchedUser:'users'\">\n                    <mat-list-item role=\"listitem\" class=\"list-item\">\n                        <p (click)=\"goToProfile(user._id)\">{{user.name}} {{user.surname}}</p>\n                        <button mat-button class=\"send-button\" (click)=\"sendMoney(user, 'user')\"><mat-icon>payment</mat-icon></button>\n                    </mat-list-item>\n                    <mat-divider></mat-divider>\n                </mat-list>\n            </div>\n        </mat-tab>\n        <mat-tab *ngIf=\"user?.firmId && user?.firmId!=''\" label=\"Przelew do firmy\">\n            <form class=\"send-money-form\" #SendMoneyForm=\"ngForm\">\n                <mat-form-field class=\"form-group\">\n                    <mat-label>Tytuł</mat-label>\n                    <input matInput class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"paymentModel.name\" #name=\"ngModel\" required>\n                </mat-form-field>\n            \n                <mat-form-field class=\"form-group\">\n                    <mat-label>Ilość pieniędzy</mat-label>\n                    <input matInput class=\"form-control\" type=\"number\" min=\"0\" name=\"money\" [(ngModel)]=\"paymentModel.money\" #money=\"ngModel\" required>\n                </mat-form-field>\n            \n                <button mat-button class=\"btn-success\" type=\"button\" [disabled]=\"SendMoneyForm.form.invalid\" (click)=\"sendMoneyToFirmAccount()\">Wykonaj</button>\n            </form>\n        </mat-tab>\n        <mat-tab label=\"Oczekujące przelewy\">\n            <mat-card *ngFor=\"let payment of awaitingPayments\" class=\"awaiting-payments-container\">\n                <mat-card-header>\n                    <img mat-card-avatar class=\"header-image\" [src]=\"payment.senderImage ? payment.senderImage : '../../../assets/images/profile-default.png'\" alt=\"profile-picture\">\n                    <mat-card-title> {{payment?.sender}} - {{payment?.name}} </mat-card-title>\n                    <mat-card-subtitle> {{payment?.date | date:'dd.MM.yyyy'}} - {{payment?.money | currency:' '}}zł </mat-card-subtitle>\n                </mat-card-header>\n                <mat-card-content>\n                    <p> {{payment?.message || 'Brak wiadomości'}} </p>\n                </mat-card-content>\n                <mat-card-actions align=\"end\">\n                    <button mat-button type=\"button\" class=\"button-accept\" (click)=\"acceptMoney(payment)\"><mat-icon>done</mat-icon></button>\n                    <button mat-button type=\"button\" class=\"button-discard\" (click)=\"discardMoney(payment)\"><mat-icon>clear</mat-icon></button>\n                    <button mat-button type=\"button\" matTooltip=\"Zablokuj użytkownika\" matTooltipPosition=\"below\" class=\"button-disable-user\" (click)=\"disableUser(payment)\"><mat-icon>block</mat-icon></button>\n                </mat-card-actions>\n            </mat-card>\n        </mat-tab>\n    </mat-tab-group>\n\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.scss']\n})\nexport class OverviewComponent implements OnInit {\n\n  chartType=\"user\";\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header pageName=\"Przegląd\"></app-header>\n<div class=\"container\">\n    <app-sidenav></app-sidenav>\n    <app-budget-list></app-budget-list>\n    <app-budget-chart [chartType]=\"chartType\"></app-budget-chart>\n</div>\n<app-footer></app-footer>\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EditProfileModalComponent } from 'src/app/components/modals/edit-profile-modal/edit-profile-modal.component';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { ChangePasswordModalComponent } from 'src/app/components/modals/change-password-modal/change-password-modal.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { UnblockUserModalComponent } from 'src/app/components/modals/unblock-user-modal/unblock-user-modal.component';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  userId = localStorage.getItem('user');\n  user;\n  image;\n  loggedInUser = true;\n  searchedUserId;\n\n  constructor(private userService: UserService, public dialog: MatDialog, private route: ActivatedRoute, private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.refresh();\n  }\n\n  refresh() {\n    this.route.queryParams.subscribe(params => {\n      if (params.id) {\n        this.loggedInUser = false;\n        this.searchedUserId = params.id;\n      }\n    });\n    if (this.loggedInUser) {\n      this.userService.getUser(this.userId).subscribe(res => {\n        this.user = res;\n      });\n    }\n    else {\n      this.userService.getUser(this.searchedUserId).subscribe(res => {\n        this.user = res;\n      });\n    }\n  }\n\n  editProfile() {\n    const ref = this.dialog.open(EditProfileModalComponent);\n    ref.afterClosed().subscribe(() => {\n      this.refresh();\n    });\n  }\n\n  updateUserImage() {\n    console.log(this.image);\n  }\n}\n","<app-header pageName=\"Profil\"></app-header>\n<app-sidenav></app-sidenav>\n<div class=\"profile-container\">\n    <div class=\"profile-photo\">\n        <img [src]=\"user?.photo ? user?.photo : '../../../assets/images/profile-default.png'\" alt=\"profile\">\n        <div *ngIf=\"loggedInUser\" class=\"profile-photo-settings\">\n            <div class=\"settings-item\">\n                <form action=\"/users/upload-image\" method=\"POST\" enctype=\"multipart/form-data\">\n                    <mat-icon>add_a_photo</mat-icon>\n                    <label> Dodaj zdjęcie \n                        <input name=\"profileImage\" type=\"file\" placeholder=\"Dodaj zdjęcie\" style=\"display: none;\"> \n                    </label>\n                    <button type=\"submit\" mat-button>Załaduj</button>\n                </form>\n            </div>\n        </div>\n    </div>\n    <div class=\"profile-informations-container\">\n        <div class=\"informations-header\">\n            <h2 class=\"title\">Informacje</h2>\n            <p *ngIf=\"loggedInUser\" class=\"edit-button\" (click)=\"editProfile()\" >Edytuj</p>\n        </div>\n        <div class=\"information-item\">\n            <p class=\"label\">Imię</p>\n            <p class=\"item\"> {{user?.name}} </p>\n        </div>\n        <div class=\"information-item\">\n            <p class=\"label\">Nazwisko</p>\n            <p class=\"item\"> {{user?.surname}} </p>\n        </div>\n        <div class=\"information-item\">\n            <p class=\"label\">Data urodzenia</p>\n            <p class=\"item\"> {{user?.dateOfBirth | date:'dd/MM/yyyy'}} </p>\n        </div>\n        <div class=\"information-item\">\n            <p class=\"label\">Email</p>\n            <p class=\"item\"> {{user?.email}} </p>\n        </div>\n        <div class=\"information-item\">\n            <p class=\"label\">Numer telefonu</p>\n            <p class=\"item\"> (+48){{user?.phone}} </p>\n        </div>\n        <div class=\"information-item\">\n            <p class=\"label\">Płeć</p>\n            <p class=\"item\"> {{user?.sex=='man' ? 'Mężczyzna' : 'Kobieta'}} </p>\n        </div>\n        <div class=\"information-item\">\n            <p class=\"label\">Stanowisko</p>\n            <p class=\"item\"> {{user?.position?.name || 'Brak stanowiska'}}{{user?.position?.earnings ? ', wynagrodzenie: ' + user.position.earnings + 'zł' : ''}} </p>\n        </div>\n        <div class=\"information-item\">\n            <p class=\"label\">Opis</p>\n            <p class=\"item\"> {{user?.description || 'Brak opisu'}} </p>\n        </div>\n    </div>\n</div>\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/models/user';\nimport { UserService } from 'src/app/services/user.service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerModel = new User('', '', '', '', '', '', '', null, '', null, {name: '', earnings: 0}, '', 0, null, [], 0, null, null,\n  null, [], null);\n  users;\n\n  constructor(private userService: UserService, private router: Router, private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.userService.getUsers().subscribe(users => {\n      this.users = users;\n    });\n  }\n\n  addUser() {\n\n    console.log(this.checkIfEmailExist(this.registerModel.email));\n    if (this.checkIfEmailExist(this.registerModel.email))  {\n      return;\n    }\n\n    this.userService.addUser(this.registerModel).subscribe(\n      res => {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Poprawnie zarejestrowano użytkownika', 'OK', {\n          horizontalPosition: 'right',\n          duration: 5000,\n          panelClass: ['snackbar-success']\n        });\n        this.router.navigate(['/logowanie']);\n    },\n    error => {\n      this.userService.playNotificationsSound();\n      this.snackBar.open('Coś poszło nie tak, spróbuj ponownie później', 'OK', {\n        horizontalPosition: 'right',\n        duration: 5000,\n        panelClass: ['snackbar-warn']\n      });\n    });\n  }\n\n  checkIfEmailExist(email): boolean {\n    for (const user of this.users) {\n      if (user.email === email) {\n        this.snackBar.open('Podany adres email już istnieje', 'OK', {\n          horizontalPosition: 'right',\n          duration: 5000,\n          panelClass: ['snackbar-warn']\n        });\n        return true;\n      }\n    }\n    return false;\n  }\n\n}\n","<div class=\"register-container\">\n    <form id=\"RegisterForm\" class=\"register-form\" #RegisterForm=\"ngForm\">\n\n        <div class=\"logo\">\n            <img src=\"../../../assets/images/logo-gray.png\" alt=\"logo\">\n        </div>\n\n        <h2 class=\"title\">Zarejestruj się</h2>\n    \n        <mat-form-field class=\"form-group\">\n            <mat-label>Imie</mat-label>\n            <input matInput class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"registerModel.name\" #name=\"ngModel\" pattern=\".{1,20}\" placeholder=\"Podaj swoję imie...\" required>\n            <!-- <div *ngIf=\"name.errors && name.touched\">\n                <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n                <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n            </div> -->\n        </mat-form-field>\n    \n        <mat-form-field class=\"form-group\">\n            <mat-label>Nazwisko</mat-label>\n            <input matInput class=\"form-control\" type=\"text\" [class.input--warn]=\"surname.invalid && surname.touched\" placeholder=\"Podaj swoję nazwisko...\" name=\"surname\" \n            [(ngModel)]=\"registerModel.surname\" #surname=\"ngModel\" pattern=\".{1,20}\" required>\n            <!-- <div *ngIf=\"surname.errors && surname.touched\">\n                <p class=\"text--warn\" *ngIf=\"surname.errors.required\">Nazwisko jest wymagane</p>\n                <p class=\"text--warn\" *ngIf=\"surname.errors.pattern\">Nazwisko nie może mieć więcej niż 20 znaków</p>\n            </div> -->\n        </mat-form-field>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Hasło</mat-label>\n            <input matInput class=\"form-control\" type=\"password\" [class.input--warn]=\"password.invalid && password.touched\" placeholder=\"Hasło\" name=\"password\" \n            [(ngModel)]=\"registerModel.password\" #password=\"ngModel\" pattern=\".{8,}\" required>\n            <!-- <div *ngIf=\"password.errors && password.touched\">\n                <p class=\"text--warn\" *ngIf=\"password.errors.required\">Hasło jest wymagane</p>\n                <p class=\"text--warn\" *ngIf=\"password.errors.pattern\">Hasło musi mieć co najmniej 8 znaków</p>\n            </div> -->\n        </mat-form-field>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Email</mat-label>\n            <input matInput class=\"form-control\" type=\"email\" [class.input--warn]=\"email.invalid && email.touched\" placeholder=\"Email\" name=\"email\" \n            [(ngModel)]=\"registerModel.email\" #email=\"ngModel\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\" required>\n            <!-- <div *ngIf=\"email.errors && email.touched\">\n                <p class=\"text--warn\" *ngIf=\"email.errors.required\">Email jest wymagany</p>\n                <p class=\"text--warn\" *ngIf=\"email.errors.pattern\">Nieprawidłowy adres email</p>\n            </div> -->\n        </mat-form-field>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Numer telefonu</mat-label>\n            <input matInput class=\"form-control\" type=\"text\" [class.input--warn]=\"phone.invalid && phone.touched\" placeholder=\"Numer telefonu\" name=\"phone\" \n            [(ngModel)]=\"registerModel.phone\" #phone=\"ngModel\" pattern=\"\\d{9}\">\n            <!-- <div *ngIf=\"phone.errors && phone.touched\">\n                <p class=\"text--warn\" *ngIf=\"phone.errors.pattern\">Numer telefonu musi składać się z 9 cyfr</p>\n            </div> -->\n        </mat-form-field>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Płeć</mat-label>\n            <mat-select class=\"select\" name=\"sex\" [(ngModel)]=\"registerModel.sex\" required>\n                <mat-option value=\"man\"> Mężczyzna </mat-option>\n                <mat-option value=\"woman\"> Kobieta </mat-option>\n            </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"form-group flex-item-full-width\" appearance=\"fill\">\n            <mat-label>Data urodzenia</mat-label>\n            <input matInput #dateOfBirth=\"ngModel\" name=\"dateOfBirth\" [matDatepicker]=\"picker\" [(ngModel)]=\"registerModel.dateOfBirth\" disabled required>\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker disabled=\"false\"></mat-datepicker>\n        </mat-form-field>\n\n        <button mat-raised-button class=\"register-button\" type=\"button\" [disabled]=\"RegisterForm.form.invalid\" (click)=\"addUser()\">Zarejestruj się</button>\n    \n    </form>\n    <p class=\"log-in-button\">Masz już konto ? <a class=\"underline\" routerLink=\"/logowanie\">Zaloguj się</a></p>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Settings } from '../../models/settings';\nimport { UserService } from 'src/app/services/user.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ChangePasswordModalComponent } from 'src/app/components/modals/change-password-modal/change-password-modal.component';\nimport { UnblockUserModalComponent } from 'src/app/components/modals/unblock-user-modal/unblock-user-modal.component';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n\n  userId = localStorage.getItem('user');\n  settingsModel = new Settings(null, null, null, null, null);\n\n  constructor(private userService: UserService, private snackBar: MatSnackBar, private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.settingsModel = res.settings;\n    });\n  }\n\n  saveSettings() {\n    this.userService.saveSettings(this.userId, this.settingsModel).subscribe(res => {\n      this.userService.playNotificationsSound();\n      this.snackBar.open('Ustawienia zapisano poprawnie', 'OK', {\n        duration: 5000,\n        horizontalPosition: 'right',\n        panelClass: ['snackbar-success']\n      });\n    });\n  }\n\n  changePassword() {\n    const dialogRef = this.dialog.open(ChangePasswordModalComponent, {\n      width: '300px',\n      height: '300px',\n      data: {\n        userId: this.userId\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(res => {\n      if (res === true) {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Pomyślnie zmieniono hasło', 'OK', {\n          duration: 5000,\n          horizontalPosition: 'right',\n          panelClass: ['snackbar-success']\n        });\n      }\n    });\n  }\n\n  unblockUser() {\n    const dialogRef = this.dialog.open(UnblockUserModalComponent, {\n      width: '400px',\n      height: '500px',\n      data: {\n        userId: this.userId\n      }\n    });\n  }\n\n}\n","<app-header pageName=\"Ustawienia\"></app-header>\n<app-sidenav></app-sidenav>\n\n<div class=\"settings-container\">\n\n    <form class=\"settings-form\" #SettingsForm=\"ngForm\">\n\n        <mat-checkbox color=\"primary\" class=\"form-control\" type=\"checkbox\" name=\"isBudgetNegativeValueAllowed\" [(ngModel)]=\"settingsModel.isBudgetNegativeValueAllowed\" #name=\"ngModel\" required>Pozwól na negatywne wartości budżetu</mat-checkbox>\n\n        <!-- <mat-checkbox color=\"primary\" class=\"form-control\" type=\"checkbox\" name=\"darkMode\" [(ngModel)]=\"settingsModel.darkMode\" #name=\"ngModel\" required>Ciemny motyw</mat-checkbox> -->\n\n        <mat-checkbox color=\"primary\" class=\"form-control\" type=\"checkbox\" name=\"notificationsSound\" [(ngModel)]=\"settingsModel.notificationsSound\" #name=\"ngModel\" required>Dźwięk powiadomień</mat-checkbox>\n\n        <mat-checkbox color=\"primary\" class=\"form-control\" type=\"checkbox\" name=\"allowReceivingTransfers\" [(ngModel)]=\"settingsModel.allowReceivingTransfers\" #name=\"ngModel\" required>Otrzymuj przelewy</mat-checkbox>\n\n        <label class=\"volume-container\">Głośność powiadomień\n            <mat-slider color=\"primary\" class=\"volume\" min=\"0\" max=\"100\" thumbLabel=\"true\" name=\"notificationVolume\" [(ngModel)]=\"settingsModel.notificationVolume\" #notificationVolume=\"ngModel\"></mat-slider>\n        </label>\n    \n        <button mat-button class=\"btn-success\" type=\"button\" (click)=\"saveSettings()\">Zapisz</button>\n    </form>\n\n    <div class=\"buttons-container\">\n        <button mat-raised-button (click)=\"changePassword()\">Zmień hasło</button>\n\n        <button mat-raised-button (click)=\"unblockUser()\">Odblokuj użytkownika</button>\n    </div>\n</div>\n\n<app-footer></app-footer>","import { Component, OnInit} from '@angular/core';\nimport { ChartService } from 'src/app/services/chart.service';\n\n@Component({\n  selector: 'app-user-charts',\n  templateUrl: './user-charts.component.html',\n  styleUrls: ['./user-charts.component.scss']\n})\nexport class UserChartsComponent implements OnInit {\n\n  chartType = \"user\";\n  chartDate = [new Date(), new Date()];\n\n  constructor(private chartService: ChartService) { }\n\n  ngOnInit(): void {\n  }\n\n  previousMonth(chart: number) {\n    this.chartDate[chart] = new Date(this.chartDate[chart].setMonth(this.chartDate[chart].getMonth()-1));\n  }\n\n  nextMonth(chart: number) {\n    this.chartDate[chart] = new Date(this.chartDate[chart].setMonth(this.chartDate[chart].getMonth()+1));\n  }\n\n}\n","<app-header pageName=\"Wykresy\"></app-header>\n<app-sidenav></app-sidenav>\n<div class=\"user-charts-container\">\n    <div class=\"container-small\">\n        <div class=\"month-container\">\n            <div class=\"arrow-left\" (click)=\"previousMonth(0)\"></div>\n            <div class=\"month-name\"> {{chartDate[0] | date: 'MMMM yyyy'}} </div>\n            <div class=\"arrow-right\" (click)=\"nextMonth(0)\"></div>\n        </div>\n        <app-budget-chart [chartType]=\"chartType\" [chartDate]=\"chartDate[0]\"></app-budget-chart>\n    </div>\n    <div class=\"container-small\">\n        <div class=\"month-container\">\n            <div class=\"arrow-left\" (click)=\"previousMonth(1)\"></div>\n            <div class=\"month-name\"> {{chartDate[1] | date: 'MMMM yyyy'}} </div>\n            <div class=\"arrow-right\" (click)=\"nextMonth(1)\"></div>\n        </div>\n        <app-vertical-bar-chart-incomes-expenses [chartType]=\"chartType\" [chartDate]=\"chartDate[1]\"></app-vertical-bar-chart-incomes-expenses>\n    </div>\n    <div class=\"container-small\">\n        <app-budget-forecasting-chart [chartType]=\"chartType\"></app-budget-forecasting-chart>\n    </div>\n</div>\n<app-footer></app-footer>\n\n","import { Expense } from './expense';\r\nimport { Income } from './income';\r\n\r\nexport class Budget {\r\n    constructor(\r\n        public money: number,\r\n        public expense: Expense[],\r\n        public income: Income[]\r\n    ) {}\r\n}\r\n","export class BudgetGoals {\r\n    constructor(\r\n        public name: string,\r\n        public goal: number,\r\n        public currentState: number,\r\n        public isCompleted: boolean,\r\n        public progress: number\r\n    ) {}\r\n}\r\n","import { Match } from './match';\r\n\r\nexport class Category {\r\n    constructor(\r\n        public name: string,\r\n        public icon: string,\r\n        public matches: Match[]\r\n    ) {}\r\n}\r\n","export class ChatMessageDto {\r\n    user: string;\r\n    message: string;\r\n\r\n    constructor(user: string, message: string) {\r\n        this.user = user;\r\n        this.message = message;\r\n    }\r\n}","import { Category } from './category';\r\n\r\nexport class Expense {\r\n    constructor(\r\n        public name: string,\r\n        public money: number,\r\n        public date: Date,\r\n        public category: Category,\r\n        public type: string,\r\n        public status: string,\r\n        public recipientName: string\r\n    ) {}\r\n}\r\n","import { Address } from './address';\r\nimport { User } from './user';\r\nimport { FirmBudget } from './firmBudget';\r\nimport { ChatMessageDto } from './chatMessageDto';\r\n\r\nexport class Firm {\r\n    constructor(\r\n        public name: string,\r\n        public address: Address,\r\n        public users: User[],\r\n        public firmBudget: FirmBudget,\r\n        public isDeleted: boolean,\r\n        public chatMessages: ChatMessageDto[]\r\n    ) {}\r\n}\r\n","import { Category } from './category';\r\n\r\nexport class Income {\r\n    constructor(\r\n        public name: string,\r\n        public money: number,\r\n        public date: Date,\r\n        public category: Category,\r\n        public type: string,\r\n        public status: string,\r\n        public message: string,\r\n        public senderId: string,\r\n        public senderName: string,\r\n        public expenseRef: string\r\n    ) {}\r\n}\r\n","export class Mail {\r\n    constructor(\r\n        public senderId: string,\r\n        public recipientId: string,\r\n        public senderName: string,\r\n        public topic: string,\r\n        public message: string,\r\n        public status: string,\r\n        public type: string\r\n    ) {}\r\n}","export class Settings {\r\n    constructor(\r\n        public isBudgetNegativeValueAllowed: boolean,\r\n        public darkMode: boolean,\r\n        public notificationsSound: boolean,\r\n        public allowReceivingTransfers: boolean,\r\n        public notificationVolume: number\r\n    ) {}\r\n}\r\n","import { Position } from './position';\r\nimport { Budget } from './budget';\r\nimport { Settings } from './settings';\r\nimport { BudgetGoals } from './budgetGoals';\r\n\r\nexport class User {\r\n    constructor(\r\n        public name: string,\r\n        public surname: string,\r\n        public password: string,\r\n        public email: string,\r\n        public phone: string,\r\n        public description: string,\r\n        public photo: string,\r\n        public dateOfBirth: Date,\r\n        public sex: string,\r\n        public budget: Budget,\r\n        public position: Position,\r\n        public firmId: string,\r\n        public firmStatus: number,\r\n        public firmBudget: Budget,\r\n        public disabledUser: [],\r\n        public awaitingPaymentsToAccept: number,\r\n        public admin: boolean,\r\n        public settings: Settings,\r\n        public isUserBlocked: boolean,\r\n        public budgetGoals: BudgetGoals[],\r\n        public isOnline: boolean\r\n    ) {}\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n\n  public jwtHelper: JwtHelperService = new JwtHelperService();\n\n  constructor() {}\n\n  public isAuthenticated(): boolean {\n    const token = localStorage.getItem('token') || '';\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { ConnectionService } from './connection.service';\nimport { Category } from '../models/category';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  constructor(private conn: ConnectionService) { }\n\n  getCategory(name) {\n    return this.conn.http.get<Category>(this.conn.url + `/categories/${name}`);\n  }\n\n  getAllCategories() {\n    return this.conn.http.get(this.conn.url + '/categories');\n  }\n\n  addCategory(category) {\n    return this.conn.http.post(this.conn.url + '/categories/create', category);\n  }\n\n  updateCategory(category) {\n    return this.conn.http.put(this.conn.url + '/categories/update', category);\n  }\n\n  chooseCategory(name) {\n    return this.conn.http.get<number>(this.conn.url + `/categories/choose-category/${name}`);\n  }\n\n  deleteCategory(category) {\n    return this.conn.http.delete(this.conn.url + `/categories/delete/${category._id}`);\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { ConnectionService } from './connection.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChartService {\n\n  public monthNames = ['Styczeń', 'Luty', 'Marzec', 'Kwiecień', 'Maj', 'Czerwiec', 'Lipiec', 'Sierpień', 'Wrzesień', 'Październik', 'Listopad', 'Grudzień'];\n\n  constructor(private conn: ConnectionService) { }\n\n  getMonthName(monthValue: number) {\n    return this.monthNames[monthValue];\n  }\n\n  getCurrentMonthChart(id: string, month: string) {\n    let data = {month: month};\n    return this.conn.http.get(this.conn.url + `/charts/currentMonthChart/${id}`, {\n      params: data\n    });\n  }\n\n  getFirmCurrentMothChart(id: string, month: string) {\n    let data = {month: month};\n    return this.conn.http.get(this.conn.url + `/charts/currentMonthChart/firm/${id}`, {\n      params: data\n    });\n  }\n\n  getCurrentMonthVerticalIncomeExpenseChart(id: string, month: string) {\n    let data = {month:month};\n    return this.conn.http.get(this.conn.url + `/charts/currentMonthVerticalIncomeExpenseChart/${id}`, {\n      params: data\n    });\n  }\n\n  getFirmCurrentMonthVerticalIncomeExpenseChart(id: string, month: string) {\n    let data = {month:month};\n    return this.conn.http.get(this.conn.url + `/charts/currentMonthVerticalIncomeExpenseChart/firm/${id}`, {\n      params: data\n    });\n  }\n\n  getForecastingChart(id: string) {\n    return this.conn.http.get(this.conn.url + `/charts/forecasting-chart/${id}`);\n  }\n\n  getFirmForecastingChart(id: string) {\n    return this.conn.http.get(this.conn.url + `/charts/forecasting-chart/firm/${id}`);\n  }\n\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConnectionService {\n\n  public url = `http://localhost:8000`;\n\n  constructor(public http: HttpClient) { }\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventEmitterService {\n\n  invokeSidenavComponentFunction = new EventEmitter();\n  subscription: Subscription;\n\n  constructor() { }\n\n  invokeSidenavRefreshListFunction() {\n    this.invokeSidenavComponentFunction.emit();\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { ConnectionService } from './connection.service';\nimport { Firm } from '../models/firm';\nimport { ChatMessageDto } from '../models/chatMessageDto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirmService {\n\n  constructor(private conn: ConnectionService) { }\n\n  getFirms() {\n    return this.conn.http.get(this.conn.url + '/firms');\n  }\n\n  getFirm(id) {\n    return this.conn.http.get<Firm>(this.conn.url + `/firms/${id}`);\n  }\n\n  getMessages(id: string) {\n    return this.conn.http.get<ChatMessageDto[]>(this.conn.url + `/firms/messages/${id}`);\n  }\n\n  editFirm(id, firm) {\n    return this.conn.http.put(this.conn.url + `/firms/${id}`, firm);\n  }\n\n  addFirm(firm, user) {\n    return this.conn.http.post(this.conn.url + '/firms/createfirm', {\n      firm,\n      user\n    });\n  }\n\n  acceptBudgetChange(firmId, id) {\n    return this.conn.http.put(this.conn.url + `/firms/${firmId}/acceptBudgetChange/${id}`, null);\n  }\n\n  discardBudgetChange(firmId, id) {\n    return this.conn.http.put(this.conn.url + `/firms/${firmId}/discardBudgetChange/${id}`, null);\n  }\n\n  deleteFirm(id) {\n    return this.conn.http.put(this.conn.url + `/firms/delete/${id}`, null);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ConnectionService } from './connection.service';\nimport { Mail } from '../models/mail';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MailService {\n\n  constructor(private conn: ConnectionService) { }\n\n  sendMessage(mail: Mail) {\n    return this.conn.http.put(this.conn.url + '/mail/send-message', mail);\n  }\n\n  getSendedMails(id: string) {\n    return this.conn.http.get(this.conn.url + `/mail/user-send-messages/${id}`);\n  }\n\n  getReceivedMails(id: string) {\n    return this.conn.http.get(this.conn.url + `/mail/user-received-messages/${id}`);\n  }\n\n  getMail(id) {\n    return this.conn.http.get<Mail>(this.conn.url + `/mail/${id}`);\n  }\n\n  getAllMails() {\n    return this.conn.http.get(this.conn.url + '/mail/mails');\n  }\n\n  reserveMail(mail, id) {\n    return this.conn.http.put(this.conn.url + `/mail/reserve-mail/${id}`, mail);\n  }\n\n  respondeToMail(mail) {\n    return this.conn.http.put(this.conn.url + `/mail/responde-mail`, mail); \n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { ConnectionService } from './connection.service';\nimport { User } from '../models/user';\nimport { Settings } from '../models/settings';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  userId = localStorage.getItem('user');\n\n  constructor(private conn: ConnectionService) { }\n\n  getUsers() {\n    return this.conn.http.get(this.conn.url + '/users');\n  }\n\n  uploadProfilePhoto(id: number, profilePhoto: File) {\n    return this.conn.http.post(this.conn.url + `/users/changeprofileimage/${id}`, profilePhoto);\n  }\n\n  addUser(user: User) {\n    return this.conn.http.post<any>(this.conn.url + '/users', user);\n  }\n\n  getUser(id: string) {\n    return this.conn.http.get<User>(this.conn.url + `/users/${id}`);\n  }\n\n  loginUser(email: string, password: string) {\n    return this.conn.http.post<any>(this.conn.url + '/users/login', {\n      email,\n      password\n    });\n  }\n\n  editUser(id: string, user: User) {\n    return this.conn.http.put<User>(this.conn.url + `/users/${id}`, user);\n  }\n\n  changeBudgetUser(id: string, user: User) {\n    return this.conn.http.put<User>(this.conn.url + `/users/${id}/changebudget`, user);\n  }\n\n  joinFirm(id: string, user: User) {\n    return this.conn.http.put<User>(this.conn.url + `/users/joinfirm/${id}`, user);\n  }\n\n  acceptUserToFirm(id: string) {\n    return this.conn.http.put(this.conn.url + `/users/acceptUserToFirm/${id}`, null);\n  }\n\n  discardUserToFirm(id: string) {\n    return this.conn.http.put(this.conn.url + `/users/discardUserToFirm/${id}`, null);\n  }\n\n  deleteUserFromFirm(id: string) {\n    return this.conn.http.put(this.conn.url + `/users/${id}/deleteUserFromFirm`, null);\n  }\n\n  changeUserPermissions(id: string, status: number) {\n    return this.conn.http.put(this.conn.url + `/users/${id}/changePermissions/${status}`, null);\n  }\n\n  leaveFirm(id: string) {\n    return this.conn.http.put(this.conn.url + `/users/leaveFirm/${id}`, null);\n  }\n\n  loggedIn() {\n    return !!localStorage.getItem('token');\n  }\n\n  saveSettings(id: string, settings: Settings) {\n    return this.conn.http.put(this.conn.url + `/users/edit-settings/${id}`, settings);\n  }\n\n  playNotificationsSound() {\n    if (!localStorage.getItem('user')) {\n      const audio = new Audio();\n      audio.src = '../../assets/sounds/notification.mp3';\n      audio.load();\n      audio.volume = 0.5;\n      audio.play();\n    }\n    else {\n      this.getUser(this.userId).subscribe(res => {\n        if (res.settings.notificationsSound === true) {\n          const audio = new Audio();\n          audio.src = '../../assets/sounds/notification.mp3';\n          audio.load();\n          audio.volume = res.settings.notificationVolume;\n          audio.play();\n        }\n      });\n    }\n  }\n\n  restartPassword(user) {\n    return this.conn.http.get(this.conn.url + `/users/restore-password/${user._id}`);\n  }\n\n  blockUser(user) {\n    return this.conn.http.put(this.conn.url + `/users/block-user/${user._id}`, user);\n  }\n\n  unblockUser(user) {\n    return this.conn.http.put(this.conn.url + `/users/unblock-user/${user._id}`, user);\n  }\n\n  getUserBudgetGoals(id: string) {\n    return this.conn.http.get(this.conn.url + `/users/budget-goals/${id}`);\n  }\n\n  addBudgetGoal(goal, userId) {\n    return this.conn.http.post(this.conn.url + `/users/add-goal/${userId}`, goal);\n  }\n\n  updateBudgetGoal(goal, userId, money) {\n    return this.conn.http.put(this.conn.url + `/users/update-goal/${userId}`, {\n      goal,\n      money\n    });\n  }\n\n  changePassword(userId, password, newPassword) {\n    return this.conn.http.put(this.conn.url + `/users/change-password/${userId}`, {\n      password,\n      newPassword\n    });\n  }\n\n  changeOnlineStatus(userId) {\n    return this.conn.http.put(this.conn.url + `/users/change-online-status/${userId}`, null);\n  }\n\n  getUserStatus(userId) {\n    return this.conn.http.get(this.conn.url + `/users/status/${userId}`);\n  }\n\n  sendMoney(expenseUserId, expense, incomeUserId, income) {\n    return this.conn.http.put(this.conn.url + `/users/send-money`, {\n      expenseUserId,\n      expense,\n      incomeUserId,\n      income\n    });\n  }\n\n  editGoal(userId, goal) {\n    return this.conn.http.put(this.conn.url + `/users/edit-goal/${userId}`, goal);\n  }\n\n  deleteGoal(userId, goal) {\n    return this.conn.http.put(this.conn.url + `/users/delete-goal/${userId}`, goal);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ChatMessageDto } from '../models/chatMessageDto';\nimport { ConnectionService } from './connection.service';\nimport { FirmService } from './firm.service';\nimport { UserService } from './user.service';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebSocketService {\n\n userId = localStorage.getItem('user');\n webSocket: WebSocket;\n chatMessages: ChatMessageDto[] = [];\n firm;\n private event = new Subject<boolean>();\n event$ = this.event.asObservable();\n\n  constructor(private conn: ConnectionService, private firmService: FirmService, private userService: UserService,\n              private window: Window) { }\n\n  public openWebSocket() {\n    this.webSocket = new WebSocket('ws://localhost:8000/chat');\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.firmService.getMessages(res.firmId).subscribe(response => {\n        this.chatMessages = response;\n      });\n\n      this.firmService.getFirm(res.firmId).subscribe(response => {\n        this.firm = response;\n      });\n\n    });\n\n    this.webSocket.onopen = (event) => {\n      console.log('Open: ', event);\n      this.webSocket.send(JSON.stringify({method: 'new', userId: this.userId}));\n      this.event.next(true);\n    };\n\n    this.webSocket.onmessage = (event) => {\n      const chatMessageDto = Object.assign({}, JSON.parse(event.data));\n      if (chatMessageDto.status) {\n        console.log(chatMessageDto.status);\n      }\n      else {\n        this.chatMessages.push(chatMessageDto.params.message);\n      }\n    };\n\n    this.webSocket.onclose = (event) => {\n      console.log('Close: ', event);\n      this.event.next(false);\n    };\n  }\n\n  public send(data) {\n    this.webSocket.send(JSON.stringify(data));\n  }\n\n  public sendMessage(chatMessageDto: ChatMessageDto, firmId: string) {\n    try {\n      this.webSocket.send(JSON.stringify({\n        method: 'message',\n        chatMessageDto,\n        firmId\n      }));\n    }catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n\n  public closeWebSocket() {\n    this.webSocket.close();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}