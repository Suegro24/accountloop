{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/budget-chart/budget-chart.component.ts","webpack:///src/app/components/budget-chart/budget-chart.component.html","webpack:///src/app/components/budget-forecasting-chart/budget-forecasting-chart.component.ts","webpack:///src/app/components/budget-forecasting-chart/budget-forecasting-chart.component.html","webpack:///src/app/components/budget-list/budget-list.component.ts","webpack:///src/app/components/budget-list/budget-list.component.html","webpack:///src/app/components/firm-budget-list/firm-budget-list.component.ts","webpack:///src/app/components/firm-budget-list/firm-budget-list.component.html","webpack:///src/app/components/firm-users-list/firm-users-list.component.ts","webpack:///src/app/components/firm-users-list/firm-users-list.component.html","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/components/modals/add-budget-goal-modal/add-budget-goal-modal.component.ts","webpack:///src/app/components/modals/add-budget-goal-modal/add-budget-goal-modal.component.html","webpack:///src/app/components/modals/add-category-modal/add-category-modal.component.ts","webpack:///src/app/components/modals/add-category-modal/add-category-modal.component.html","webpack:///src/app/components/modals/add-expense-modal/add-expense-modal.component.ts","webpack:///src/app/components/modals/add-expense-modal/add-expense-modal.component.html","webpack:///src/app/components/modals/add-income-modal/add-income-modal.component.ts","webpack:///src/app/components/modals/add-income-modal/add-income-modal.component.html","webpack:///src/app/components/modals/add-money-to-goal-modal/add-money-to-goal-modal.component.ts","webpack:///src/app/components/modals/add-money-to-goal-modal/add-money-to-goal-modal.component.html","webpack:///src/app/components/modals/change-password-modal/change-password-modal.component.ts","webpack:///src/app/components/modals/change-password-modal/change-password-modal.component.html","webpack:///src/app/components/modals/change-permissions-modal/change-permissions-modal.component.ts","webpack:///src/app/components/modals/change-permissions-modal/change-permissions-modal.component.html","webpack:///src/app/components/modals/confirm-leaving-firm/confirm-leaving-firm.component.ts","webpack:///src/app/components/modals/confirm-leaving-firm/confirm-leaving-firm.component.html","webpack:///src/app/components/modals/delete-goal-modal/delete-goal-modal.component.ts","webpack:///src/app/components/modals/delete-goal-modal/delete-goal-modal.component.html","webpack:///src/app/components/modals/edit-category-modal/edit-category-modal.component.ts","webpack:///src/app/components/modals/edit-category-modal/edit-category-modal.component.html","webpack:///src/app/components/modals/edit-firm-data-modal/edit-firm-data-modal.component.ts","webpack:///src/app/components/modals/edit-firm-data-modal/edit-firm-data-modal.component.html","webpack:///src/app/components/modals/edit-goal-modal/edit-goal-modal.component.ts","webpack:///src/app/components/modals/edit-goal-modal/edit-goal-modal.component.html","webpack:///src/app/components/modals/edit-profile-modal/edit-profile-modal.component.ts","webpack:///src/app/components/modals/edit-profile-modal/edit-profile-modal.component.html","webpack:///src/app/components/modals/firm-create-modal/firm-create-modal.component.ts","webpack:///src/app/components/modals/firm-create-modal/firm-create-modal.component.html","webpack:///src/app/components/modals/firm-search-modal/firm-search-modal.component.ts","webpack:///src/app/components/modals/firm-search-modal/firm-search-modal.component.html","webpack:///src/app/components/modals/open-mail-modal/open-mail-modal.component.ts","webpack:///src/app/components/modals/open-mail-modal/open-mail-modal.component.html","webpack:///src/app/components/modals/send-mail-modal/send-mail-modal.component.ts","webpack:///src/app/components/modals/send-mail-modal/send-mail-modal.component.html","webpack:///src/app/components/modals/send-money-dialog/send-money-dialog.component.ts","webpack:///src/app/components/modals/send-money-dialog/send-money-dialog.component.html","webpack:///src/app/components/modals/show-account-change-details/show-account-change-details.component.ts","webpack:///src/app/components/modals/show-account-change-details/show-account-change-details.component.html","webpack:///src/app/components/modals/show-new-password-modal/show-new-password-modal.component.ts","webpack:///src/app/components/modals/show-new-password-modal/show-new-password-modal.component.html","webpack:///src/app/components/modals/unblock-user-modal/unblock-user-modal.component.ts","webpack:///src/app/components/modals/unblock-user-modal/unblock-user-modal.component.html","webpack:///src/app/components/pipes/budget-list-pipe/budget-list-pipe.pipe.ts","webpack:///src/app/components/pipes/money-transfer-pipe/money-transfer-pipe.pipe.ts","webpack:///src/app/components/sidenav/sidenav.component.ts","webpack:///src/app/components/sidenav/sidenav.component.html","webpack:///src/app/components/vertical-bar-chart-incomes-expenses/vertical-bar-chart-incomes-expenses.component.ts","webpack:///src/app/components/vertical-bar-chart-incomes-expenses/vertical-bar-chart-incomes-expenses.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/guards/role-guard-service.service.ts","webpack:///src/app/layout/account/account.component.ts","webpack:///src/app/layout/account/account.component.html","webpack:///src/app/layout/admin/admin-category/admin-category.component.ts","webpack:///src/app/layout/admin/admin-category/admin-category.component.html","webpack:///src/app/layout/admin/admin-login/admin-login.component.ts","webpack:///src/app/layout/admin/admin-login/admin-login.component.html","webpack:///src/app/layout/admin/admin-messages/admin-messages.component.ts","webpack:///src/app/layout/admin/admin-messages/admin-messages.component.html","webpack:///src/app/layout/admin/admin-panel/admin-panel.component.ts","webpack:///src/app/layout/admin/admin-panel/admin-panel.component.html","webpack:///src/app/layout/admin/user-list/user-list.component.ts","webpack:///src/app/layout/admin/user-list/user-list.component.html","webpack:///src/app/layout/chat/chat.component.ts","webpack:///src/app/layout/chat/chat.component.html","webpack:///src/app/layout/firm-charts/firm-charts.component.ts","webpack:///src/app/layout/firm-charts/firm-charts.component.html","webpack:///src/app/layout/firm-user-budget/firm-user-budget.component.ts","webpack:///src/app/layout/firm-user-budget/firm-user-budget.component.html","webpack:///src/app/layout/firm/firm.component.ts","webpack:///src/app/layout/firm/firm.component.html","webpack:///src/app/layout/helpdesk/helpdesk.component.ts","webpack:///src/app/layout/helpdesk/helpdesk.component.html","webpack:///src/app/layout/login/login.component.ts","webpack:///src/app/layout/login/login.component.html","webpack:///src/app/layout/manage-firm/manage-firm.component.ts","webpack:///src/app/layout/manage-firm/manage-firm.component.html","webpack:///src/app/layout/money-transfer-firm/money-transfer-firm.component.ts","webpack:///src/app/layout/money-transfer-firm/money-transfer-firm.component.html","webpack:///src/app/layout/money-transfer/money-transfer.component.ts","webpack:///src/app/layout/money-transfer/money-transfer.component.html","webpack:///src/app/layout/overview/overview.component.ts","webpack:///src/app/layout/overview/overview.component.html","webpack:///src/app/layout/profile/profile.component.ts","webpack:///src/app/layout/profile/profile.component.html","webpack:///src/app/layout/register/register.component.ts","webpack:///src/app/layout/register/register.component.html","webpack:///src/app/layout/settings/settings.component.ts","webpack:///src/app/layout/settings/settings.component.html","webpack:///src/app/layout/user-charts/user-charts.component.ts","webpack:///src/app/layout/user-charts/user-charts.component.html","webpack:///src/app/models/budget.ts","webpack:///src/app/models/budgetGoals.ts","webpack:///src/app/models/category.ts","webpack:///src/app/models/chatMessageDto.ts","webpack:///src/app/models/expense.ts","webpack:///src/app/models/firm.ts","webpack:///src/app/models/income.ts","webpack:///src/app/models/mail.ts","webpack:///src/app/models/settings.ts","webpack:///src/app/models/user.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/category.service.ts","webpack:///src/app/services/chart.service.ts","webpack:///src/app/services/connection.service.ts","webpack:///src/app/services/event-emitter.service.ts","webpack:///src/app/services/firm.service.ts","webpack:///src/app/services/mail.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/app/services/web-socket.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","userService","title","localStorage","getItem","userId","getUserStatus","subscribe","res","changeStatus","event","$event","changeOnlineStatus","doBeforeUnload","doUnload","selector","templateUrl","styleUrls","routes","path","redirectTo","pathMatch","component","canActivate","data","expectedRole","Material","AppModule","provide","Window","useValue","window","forRoot","declarations","imports","providers","bootstrap","BudgetChartComponent","chartService","chartDate","Date","monthName","getMonthName","getMonth","view","showLabels","animations","xAxis","yAxis","showYAxisLabel","showXAxisLabel","xAxisLabel","yAxisLabel","getUser","user","chartType","getCurrentMonthChart","_id","toString","chartContainer","getFirmCurrentMothChart","firmId","error","console","month","changes","getChart","BudgetForecastingChartComponent","multi","getForecastingChart","getFirmForecastingChart","BudgetListComponent","dialog","snackBar","refreshList","type","firmBudget","accountChangesContainer","income","expense","sort","a","b","parse","date","userTotalMoney","money","log","budget","filter","change","status","ref","open","budgetType","afterClosed","playNotificationsSound","duration","horizontalPosition","panelClass","disableClose","FirmBudgetListComponent","firmService","acceptedBudgetChanges","refresh","getFirm","response","firm","forEach","addIncome","addExpense","FirmUsersListComponent","router","users","userOne","userTwo","firmStatus","navigate","queryParams","FooterComponent","HeaderComponent","isAdminLoggedIn","isUserLoggedIn","removeItem","AddBudgetGoalModalComponent","budgetGoalModel","addBudgetGoal","AddCategoryModalComponent","categoryService","dialogRef","categoryModel","addCategory","close","AddExpenseModalComponent","expenseModel","categories","getAllCategories","category","settings","isBudgetNegativeValueAllowed","push","changeBudgetUser","editFirm","manageCategory","getCategory","name","words","toLowerCase","split","map","word","matches","match","amount","updateCategory","chooseCategory","AddIncomeModalComponent","incomeModel","icon","budgetGoals","goal","isCompleted","selectedBudgetGoal","undefined","updateBudgetGoal","AddMoneyToGoalModalComponent","_","ChangePasswordModalComponent","changePasswordModel","password","newPassword","changePassword","ChangePermissionsModalComponent","changePermissionsModel","employeeId","permissions","changeUserPermissions","changePermissions","ConfirmLeavingFirmComponent","DeleteGoalModalComponent","EditCategoryModalComponent","categoryEditModel","editCategory","EditFirmDataModalComponent","firmModel","editFirmData","EditGoalModalComponent","goalModel","editGoal","EditProfileModalComponent","profileModel","editUser","editProfile","FirmCreateModalComponent","firmCreateModel","addFirm","createFirm","FirmSearchModalComponent","searchedFirm","activeFirms","ready","getFirms","firms","isDeleted","joinFirm","OpenMailModalComponent","SendMailModalComponent","mailService","mailModel","recipientId","mail","senderId","topic","senderName","adminName","sendMessage","SendMoneyDialogComponent","paymentModel","recipientName","target","surname","allowReceivingTransfers","awaitingPaymentsToAccept","sendMoney","sendPayment","ShowAccountChangeDetailsComponent","ShowNewPasswordModalComponent","copyToClipboard","UnblockUserModalComponent","blockedUsersId","blockedUsers","disabledUser","u","BudgetListPipePipe","items","searchedCategory","searchedName","length","result","item","includes","trim","Set","MoneyTransferPipePipe","searchedText","fullname","SidenavComponent","breakpointObserver","eventEmitterService","isHandset","observe","Handset","shouldRefresh","routeReuseStrategy","shouldReuseRoute","subscription","events","navigated","invokeSidenavComponentFunction","moneyTransferBadge","unsubscribe","VerticalBarChartIncomesExpensesComponent","showYAxis","showXAxis","gradient","colorScheme","domain","getCurrentMonthVerticalIncomeExpenseChart","chartData","getFirmCurrentMonthVerticalIncomeExpenseChart","AuthGuard","authService","isAuthenticated","providedIn","RoleGuardService","route","token","tokenPayload","admin","AccountComponent","selectedCategories","checkboxes","incomes","expenses","currentDate","currentMonth","refreshGoals","setMonth","width","height","getUserBudgetGoals","completedGoals","deleteGoal","previousMonth","nextMonth","AdminCategoryComponent","deleteCategory","AdminLoginComponent","loginModel","email","loginUser","setItem","AdminMessagesComponent","displayedColumns","waitingMails","inProgressMails","endedMails","getMails","getAllMails","dataSourceWaitingMails","paginator","dataSourceinProgressMails","dataSourceEndedMails","canAnswer","isAdmin","reserveMail","reference","respondeToMail","AdminPanelComponent","UserListComponent","getUsers","restartPassword","blockUser","unblockUser","ChatComponent","webSocketService","chatStatus","openWebSocket","event$","changeChatStatus","sendForm","username","chatMessageDto","value","message","controls","reset","closeWebSocket","FirmChartsComponent","chart","FirmUserBudgetComponent","FirmComponent","sidenavRefresh","HelpdeskComponent","sendedMails","displayedColumnsSendedMails","receivedMails","displayedColumnsReceivedMails","getSendedMessages","getReceivedMessages","getSendedMails","dataSourceSendedMails","getReceivedMails","dataSourceReceivedMails","LoginComponent","ManageFirmComponent","acceptUserToFirm","discardUserToFirm","acceptBudgetChange","discardBudgetChange","deleteUserFromFirm","deleteFirm","amountOfOwners","leaveFirm","MoneyTransferFirmComponent","paymentToFirmModel","paymentFromFirmToUserModel","checkUserBudget","checkFirmBudget","totalExpense","selectedUser","payment","sendPaymentToUser","sendPaymentToFirm","MoneyTransferComponent","awaitingPayments","sender","senderImage","photo","blockedUser","invokeSidenavRefreshListFunction","index","splice","expenseRef","p","discardMoney","OverviewComponent","ProfileComponent","loggedInUser","params","searchedUserId","image","RegisterComponent","registerModel","earnings","checkIfEmailExist","addUser","SettingsComponent","settingsModel","saveSettings","UserChartsComponent","Budget","BudgetGoals","currentState","progress","Category","ChatMessageDto","Expense","Firm","address","chatMessages","Income","Mail","Settings","darkMode","notificationsSound","notificationVolume","User","phone","description","dateOfBirth","sex","position","isUserBlocked","isOnline","AuthService","jwtHelper","isTokenExpired","CategoryService","conn","http","get","url","post","put","ChartService","monthNames","monthValue","ConnectionService","EventEmitterService","emit","FirmService","MailService","UserService","profilePhoto","audio","Audio","src","load","volume","play","expenseUserId","incomeUserId","WebSocketService","asObservable","webSocket","WebSocket","getMessages","onopen","send","JSON","stringify","method","next","onmessage","Object","assign","onclose","environment","production","bootstrapModule","err"],"mappings":"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AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AA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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, HostListener} from '@angular/core';\nimport { UserService } from './services/user.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  title = 'inzynierka';\n  userId;\n\n  constructor(private userService: UserService) {}\n\n  ngOnInit() {\n    if (!localStorage.getItem('user')) { return; }\n    this.userId = localStorage.getItem('user');\n    this.userService.getUserStatus(this.userId).subscribe(res => {\n      if (res === false) { this.changeStatus(); }\n    });\n  }\n\n  @HostListener('window:unload', ['$event'])\n  unloadHandler(event) {\n    this.changeStatus();\n}\n\n  @HostListener('window:beforeunload', ['$event'])\n  beforeunloadHandler($event) {\n    this.changeStatus();\n    return false;\n}\n\n  changeStatus() {\n    this.userService.changeOnlineStatus(this.userId).subscribe();\n  }\n\n  doBeforeUnload() {\n    this.changeStatus();\n  }\n\n  doUnload() {\n    this.changeStatus();\n  }\n\n}\n\n\n","<router-outlet (window:beforeunload)=\"doBeforeUnload()\" (window:unload)=\"doUnload()\"></router-outlet>\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTableModule } from '@angular/material/table';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { OverviewComponent } from './layout/overview/overview.component';\nimport { BudgetListComponent } from './components/budget-list/budget-list.component';\nimport { RegisterComponent } from './layout/register/register.component';\nimport { LoginComponent } from './layout/login/login.component';\nimport { AddIncomeModalComponent } from './components/modals/add-income-modal/add-income-modal.component';\nimport { AddExpenseModalComponent } from './components/modals//add-expense-modal/add-expense-modal.component';\nimport { BudgetChartComponent } from './components/budget-chart/budget-chart.component';\nimport { ProfileComponent } from './layout/profile/profile.component';\nimport { EditProfileModalComponent } from './components/modals/edit-profile-modal/edit-profile-modal.component';\nimport { FirmComponent } from './layout/firm/firm.component';\nimport { FirmSearchModalComponent } from './components/modals/firm-search-modal/firm-search-modal.component';\nimport { FirmCreateModalComponent } from './components/modals/firm-create-modal/firm-create-modal.component';\nimport { FirmBudgetListComponent } from './components/firm-budget-list/firm-budget-list.component';\nimport { FirmUsersListComponent } from './components/firm-users-list/firm-users-list.component';\nimport { ManageFirmComponent } from './layout/manage-firm/manage-firm.component';\nimport { ChangePermissionsModalComponent } from './components/modals/change-permissions-modal/change-permissions-modal.component';\nimport { EditFirmDataModalComponent } from './components/modals/edit-firm-data-modal/edit-firm-data-modal.component';\nimport { ConfirmLeavingFirmComponent } from './components/modals/confirm-leaving-firm/confirm-leaving-firm.component';\nimport { SidenavComponent } from './components/sidenav/sidenav.component';\nimport { UserChartsComponent } from './layout/user-charts/user-charts.component';\nimport { AccountComponent } from './layout/account/account.component';\nimport { BudgetListPipePipe } from './components/pipes/budget-list-pipe/budget-list-pipe.pipe';\nimport { VerticalBarChartIncomesExpensesComponent } from './components/vertical-bar-chart-incomes-expenses/vertical-bar-chart-incomes-expenses.component';\nimport { MoneyTransferComponent } from './layout/money-transfer/money-transfer.component';\nimport { MoneyTransferPipePipe } from './components/pipes/money-transfer-pipe/money-transfer-pipe.pipe';\nimport { SendMoneyDialogComponent } from './components/modals/send-money-dialog/send-money-dialog.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { FirmChartsComponent } from './layout/firm-charts/firm-charts.component';\nimport { ChatComponent } from './layout/chat/chat.component';\nimport { SettingsComponent } from './layout/settings/settings.component';\nimport { HelpdeskComponent } from './layout/helpdesk/helpdesk.component';\nimport { AdminLoginComponent } from './layout/admin/admin-login/admin-login.component';\nimport { AdminPanelComponent } from './layout/admin/admin-panel/admin-panel.component';\nimport { RoleGuardService } from './guards/role-guard-service.service';\nimport { OpenMailModalComponent } from './components/modals/open-mail-modal/open-mail-modal.component';\nimport { UserListComponent } from './layout/admin/user-list/user-list.component';\nimport { AdminMessagesComponent } from './layout/admin/admin-messages/admin-messages.component';\nimport { SendMailModalComponent } from './components/modals/send-mail-modal/send-mail-modal.component';\nimport { AdminCategoryComponent } from './layout/admin/admin-category/admin-category.component';\nimport { AddCategoryModalComponent } from './components/modals/add-category-modal/add-category-modal.component';\nimport { ShowNewPasswordModalComponent } from './components/modals/show-new-password-modal/show-new-password-modal.component';\nimport { EditCategoryModalComponent } from './components/modals/edit-category-modal/edit-category-modal.component';\nimport { MoneyTransferFirmComponent } from './layout/money-transfer-firm/money-transfer-firm.component';\nimport { BudgetForecastingChartComponent } from './components/budget-forecasting-chart/budget-forecasting-chart.component';\nimport { AddBudgetGoalModalComponent } from './components/modals/add-budget-goal-modal/add-budget-goal-modal.component';\nimport { ChangePasswordModalComponent } from './components/modals/change-password-modal/change-password-modal.component';\nimport { EventEmitterService } from './services/event-emitter.service';\nimport { UnblockUserModalComponent } from './components/modals/unblock-user-modal/unblock-user-modal.component';\nimport { FirmUserBudgetComponent } from './layout/firm-user-budget/firm-user-budget.component';\nimport { ShowAccountChangeDetailsComponent } from './components/modals/show-account-change-details/show-account-change-details.component';\nimport { AddMoneyToGoalModalComponent } from './components/modals/add-money-to-goal-modal/add-money-to-goal-modal.component';\nimport { EditGoalModalComponent } from './components/modals/edit-goal-modal/edit-goal-modal.component';\nimport { DeleteGoalModalComponent } from './components/modals/delete-goal-modal/delete-goal-modal.component';\n\nconst routes: Routes = [\n  {path: '', redirectTo: 'logowanie', pathMatch: 'full'},\n  {path: 'logowanie', component: LoginComponent},\n  {path: 'rejestracja', component: RegisterComponent},\n  {path: 'przeglad', component: OverviewComponent, canActivate: [AuthGuard]},\n  {path: 'profil', component: ProfileComponent, canActivate: [AuthGuard]},\n  {path: 'firma', component: FirmComponent, canActivate: [AuthGuard]},\n  {path: 'zarzadzaj-firma', component: ManageFirmComponent, canActivate: [AuthGuard]},\n  {path: 'uzytkownik-wykresy', component: UserChartsComponent, canActivate: [AuthGuard]},\n  {path: 'konto', component: AccountComponent, canActivate: [AuthGuard]},\n  {path: 'przelew', component: MoneyTransferComponent, canActivate: [AuthGuard]},\n  {path: 'przelew-firma', component: MoneyTransferFirmComponent, canActivate: [AuthGuard]},\n  {path: 'firma-wykresy', component: FirmChartsComponent, canActivate: [AuthGuard]},\n  {path: 'chat', component: ChatComponent, canActivate: [AuthGuard]},\n  {path: 'firma-konto', component: FirmUserBudgetComponent, canActivate: [AuthGuard]},\n  {path: 'ustawienia', component: SettingsComponent, canActivate: [AuthGuard]},\n  {path: 'pomoc', component: HelpdeskComponent, canActivate: [AuthGuard]},\n  {path: 'admin', component: AdminLoginComponent},\n  {path: 'admin-panel', component: AdminPanelComponent, canActivate: [RoleGuardService], data: {expectedRole: 'admin'}},\n  {path: 'admin-panel-users', component: UserListComponent, canActivate: [RoleGuardService], data: {expectedRole: 'admin'}},\n  {path: 'admin-panel-messages', component: AdminMessagesComponent, canActivate: [RoleGuardService], data: {expectedRole: 'admin'}},\n  {path: 'admin-panel-categories', component: AdminCategoryComponent, canActivate: [RoleGuardService], data: {expectedRole: 'admin'}},\n  {path: '**', redirectTo: 'logowanie'}\n];\n\nconst Material = [\n  MatSidenavModule,\n  MatIconModule,\n  MatButtonModule,\n  MatToolbarModule,\n  MatDividerModule,\n  MatListModule,\n  MatInputModule,\n  MatSelectModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatDialogModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatMenuModule,\n  MatTabsModule,\n  MatBadgeModule,\n  MatTooltipModule,\n  MatSnackBarModule,\n  MatPaginatorModule,\n  MatTableModule,\n  ClipboardModule,\n  MatProgressBarModule,\n  MatSliderModule,\n  MatChipsModule,\n  MatProgressSpinnerModule\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    OverviewComponent,\n    BudgetListComponent,\n    RegisterComponent,\n    LoginComponent,\n    AddIncomeModalComponent,\n    AddExpenseModalComponent,\n    BudgetChartComponent,\n    ProfileComponent,\n    EditProfileModalComponent,\n    FirmComponent,\n    FirmSearchModalComponent,\n    FirmCreateModalComponent,\n    FirmBudgetListComponent,\n    FirmUsersListComponent,\n    ManageFirmComponent,\n    ChangePermissionsModalComponent,\n    EditFirmDataModalComponent,\n    ConfirmLeavingFirmComponent,\n    SidenavComponent,\n    UserChartsComponent,\n    AccountComponent,\n    BudgetListPipePipe,\n    VerticalBarChartIncomesExpensesComponent,\n    MoneyTransferComponent,\n    MoneyTransferPipePipe,\n    SendMoneyDialogComponent,\n    FirmChartsComponent,\n    ChatComponent,\n    SettingsComponent,\n    HelpdeskComponent,\n    AdminLoginComponent,\n    AdminPanelComponent,\n    OpenMailModalComponent,\n    AdminMessagesComponent,\n    SendMailModalComponent,\n    UserListComponent,\n    AdminCategoryComponent,\n    AddCategoryModalComponent,\n    ShowNewPasswordModalComponent,\n    EditCategoryModalComponent,\n    MoneyTransferFirmComponent,\n    BudgetForecastingChartComponent,\n    AddBudgetGoalModalComponent,\n    ChangePasswordModalComponent,\n    UnblockUserModalComponent,\n    FirmUserBudgetComponent,\n    ShowAccountChangeDetailsComponent,\n    AddMoneyToGoalModalComponent,\n    EditGoalModalComponent,\n    DeleteGoalModalComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot(routes),\n    Material,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    NgxChartsModule\n  ],\n  providers: [AuthGuard, RoleGuardService, EventEmitterService, {provide: Window, useValue: window}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, OnChanges, SimpleChange, SimpleChanges } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { ChartService } from 'src/app/services/chart.service';\n\n@Component({\n  selector: 'app-budget-chart',\n  templateUrl: './budget-chart.component.html',\n  styleUrls: ['./budget-chart.component.scss']\n})\nexport class BudgetChartComponent implements OnChanges, OnInit {\n\n  constructor(private userService: UserService, private chartService: ChartService) { }\n\n  userId = localStorage.getItem('user');\n  user\n  chartContainer: any;\n  @Input() chartType: string;\n  @Input() chartDate: Date = new Date();\n  monthName = this.chartService.getMonthName(this.chartDate.getMonth());\n\n  view = ['400','300']\n  showLabels: boolean = true;\n  animations: boolean = true;\n  xAxis: boolean = true;\n  yAxis: boolean = true;\n  showYAxisLabel: boolean = true;\n  showXAxisLabel: boolean = true;\n  xAxisLabel: string = 'Dzień';\n  yAxisLabel: string = 'Ilość pieniędzy';\n\n  ngOnInit(): void {\n    this.userService.getUser(this.userId).subscribe(\n      res => {\n        this.user = res;\n        if (this.chartType == 'user') {\n          this.chartService.getCurrentMonthChart(this.user._id, this.chartDate.getMonth().toString()).subscribe(res => {\n            this.chartContainer = res;\n          })\n        }\n        else if (this.chartType == 'firm') {\n          this.chartService.getFirmCurrentMothChart(this.user.firmId, this.chartDate.getMonth().toString()).subscribe(res => {\n            this.chartContainer = res;\n          })\n        }\n      },\n      error => console.error(error)\n    )}\n\n  getChart(month) {\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n      if (this.chartType == 'user') {\n        this.chartService.getCurrentMonthChart(this.user._id, month).subscribe(res => {\n          this.chartContainer = res;\n        })\n      }\n      else if (this.chartType == 'firm') {\n        this.chartService.getFirmCurrentMothChart(this.user.firmId, month).subscribe(res => {\n          this.chartContainer = res;\n        })\n      }\n    },\n    error => console.error(error))\n\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.monthName = this.chartService.getMonthName(this.chartDate.getMonth());\n    this.getChart(this.chartDate.getMonth());\n  }\n\n}\n","<div class=\"chart-container\">\n  <h2 class=\"title\">Stan konta - {{monthName}}</h2>\n  <ngx-charts-line-chart\n  [view]=\"view\"\n  [showXAxisLabel]=\"showXAxisLabel\"\n  [showYAxisLabel]=\"showYAxisLabel\"\n  [xAxis]=\"xAxis\"\n  [yAxis]=\"yAxis\"\n  [xAxisLabel]=\"xAxisLabel\"\n  [yAxisLabel]=\"yAxisLabel\"\n  [results]=\"chartContainer\"\n    >\n  </ngx-charts-line-chart>\n</div>\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { ChartService } from 'src/app/services/chart.service';\n\n@Component({\n  selector: 'app-budget-forecasting-chart',\n  templateUrl: './budget-forecasting-chart.component.html',\n  styleUrls: ['./budget-forecasting-chart.component.scss']\n})\nexport class BudgetForecastingChartComponent implements OnInit {\n\n  userId = localStorage.getItem('user');\n  user\n  chartContainer: any;\n  @Input() chartType: string;\n  @Input() chartDate: Date = new Date();\n  monthName = this.chartService.getMonthName(this.chartDate.getMonth());\n\n  view = ['500','300']\n  showLabels: boolean = true;\n  animations: boolean = true;\n  xAxis: boolean = true;\n  yAxis: boolean = true;\n  showYAxisLabel: boolean = true;\n  showXAxisLabel: boolean = true;\n  xAxisLabel: string = 'Dzień';\n  yAxisLabel: string = 'Ilość pieniędzy';\n\n  multi = [\n    {\n      \"name\": \"Germany\",\n      \"series\": [\n        {\n          \"name\": \"1990\",\n          \"value\": 62000000\n        },\n        {\n          \"name\": \"2010\",\n          \"value\": 73000000\n        },\n        {\n          \"name\": \"2011\",\n          \"value\": 89400000\n        }\n      ]\n    },\n  \n    {\n      \"name\": \"USA\",\n      \"series\": [\n        {\n          \"name\": \"1990\",\n          \"value\": 250000000\n        },\n        {\n          \"name\": \"2010\",\n          \"value\": 309000000\n        },\n        {\n          \"name\": \"2011\",\n          \"value\": 311000000\n        }\n      ]\n    },\n  \n    {\n      \"name\": \"France\",\n      \"series\": [\n        {\n          \"name\": \"1990\",\n          \"value\": 58000000\n        },\n        {\n          \"name\": \"2010\",\n          \"value\": 50000020\n        },\n        {\n          \"name\": \"2011\",\n          \"value\": 58000000\n        }\n      ]\n    },\n    {\n      \"name\": \"UK\",\n      \"series\": [\n        {\n          \"name\": \"1990\",\n          \"value\": 57000000\n        },\n        {\n          \"name\": \"2010\",\n          \"value\": 62000000\n        }\n      ]\n    }\n  ];\n  \n\n  constructor(private userService: UserService, private chartService: ChartService) { }\n\n  ngOnInit(): void {\n    this.userService.getUser(this.userId).subscribe(\n      res => {\n        this.user = res;\n        if (this.chartType == 'user') {\n          this.chartService.getForecastingChart(this.user._id).subscribe(res => {\n            this.chartContainer = res;\n          })\n        }\n        else if (this.chartType == 'firm') {\n          this.chartService.getFirmForecastingChart(this.user.firmId).subscribe(res => {\n            this.chartContainer = res;\n          })\n        }\n      },\n      error => console.error(error)\n    )}\n\n}\n","<div class=\"chart-forecasting-container\">\n    <h2 class=\"title\">Prognozowany stan - {{monthName}}</h2>\n    <ngx-charts-line-chart\n    [view]=\"view\"\n    [showXAxisLabel]=\"showXAxisLabel\"\n    [showYAxisLabel]=\"showYAxisLabel\"\n    [xAxis]=\"xAxis\"\n    [yAxis]=\"yAxis\"\n    [xAxisLabel]=\"xAxisLabel\"\n    [yAxisLabel]=\"yAxisLabel\"\n    [results]=\"chartContainer\"\n      >\n    </ngx-charts-line-chart>\n  </div>\n  \n  ","import { Component, Input, OnInit } from '@angular/core';\nimport { Budget } from 'src/app/models/budget';\nimport { UserService } from 'src/app/services/user.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AddIncomeModalComponent } from '../modals/add-income-modal/add-income-modal.component';\nimport { AddExpenseModalComponent } from '../modals/add-expense-modal/add-expense-modal.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ShowAccountChangeDetailsComponent } from '../modals/show-account-change-details/show-account-change-details.component';\n\n@Component({\n  selector: 'app-budget-list',\n  templateUrl: './budget-list.component.html',\n  styleUrls: ['./budget-list.component.scss']\n})\nexport class BudgetListComponent implements OnInit {\n\n  user;\n  userId = localStorage.getItem('user');\n  accountChangesContainer: any;\n  userTotalMoney;\n  @Input() type: string;\n\n  constructor(private userService: UserService, public dialog: MatDialog, private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.refreshList();\n  }\n\n  refreshList() {\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n      if (this.type === 'firm') {\n        if (!res.firmBudget) { this.user.firmBudget = new Budget(null, [], []); }\n        this.accountChangesContainer = [...res.firmBudget.income, ...res.firmBudget.expense];\n        this.accountChangesContainer = this.accountChangesContainer.sort((a, b) => Date.parse(b.date) - Date.parse(a.date));\n        this.userTotalMoney = res.firmBudget.money;\n        console.log(res);\n      } else {\n        if (!res.budget) { this.user.budget = new Budget(null, [], []); }\n        this.accountChangesContainer = [...res.budget.income, ...res.budget.expense];\n        this.accountChangesContainer = this.accountChangesContainer.sort((a, b) => Date.parse(b.date) - Date.parse(a.date));\n        this.userTotalMoney = res.budget.money;\n        this.accountChangesContainer = this.accountChangesContainer.filter(change => {\n          if (change.status !== 'Waiting' || change.type === 'expense') { return change; }\n        });\n      }\n    });\n  }\n\n  addIncome() {\n    const ref = this.dialog.open(AddIncomeModalComponent, {\n      data: {\n        id: this.user._id,\n        budgetType: 'user'\n      }\n    });\n    ref.afterClosed().subscribe(res => {\n      if (res === true) {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Poprawnie dodano przychód', 'OK', {\n          duration: 5000,\n          horizontalPosition: 'right',\n          panelClass: ['snackbar-success']\n        });\n      }\n      this.refreshList();\n    });\n  }\n\n  addExpense() {\n    const ref = this.dialog.open(AddExpenseModalComponent, {\n      disableClose: true,\n      data: {\n        id: this.user._id,\n        budgetType: 'user'\n      }\n    });\n    ref.afterClosed().subscribe((res) => {\n      if (res === 0) {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Poprawnie dodano wydatek', 'OK', {\n          duration: 5000,\n          horizontalPosition: 'right',\n          panelClass: ['snackbar-success']\n        });\n      }\n      else if (res === 2) {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Operacja nie powiodła się ponieważ ujemny stan budżetu jest niedozwolony', 'OK', {\n          duration: 5000,\n          horizontalPosition: 'right',\n          panelClass: ['snackbar-warn']\n        });\n      }\n      this.refreshList();\n    });\n  }\n\n  showDetails(data) {\n    this.dialog.open(ShowAccountChangeDetailsComponent, {\n      data: {\n        data\n      }\n    });\n  }\n}\n","<div class=\"budget-container\">\n    <div class=\"budget-balance\">\n        <p>Stan konta: {{(userTotalMoney || 0) | currency:' '}}zł </p>\n    </div>\n    <mat-divider></mat-divider>\n\n    <div class=\"no-account-changes\" *ngIf=\"accountChangesContainer?.length == 0\">\n        <p>Brak danych</p>\n    </div>\n    <mat-list class=\"budget-changes-list\">\n            <mat-list-item (click)=\"showDetails(accountChange)\" *ngFor=\"let accountChange of accountChangesContainer | slice:0:10\" >\n                <mat-divider></mat-divider>\n                <mat-icon mat-list-icon>credit_card</mat-icon>\n                <div mat-line> \n                    <span> {{accountChange.name}}</span> \n                    <span class=\"align-right\" [class]=\"accountChange.type=='income' ? 'income': 'expense'\">{{accountChange.money | currency: ' '}}zł</span>  </div>\n                <div mat-line> {{accountChange.category.name}} <span class=\"align-right\">{{accountChange.date | date:'dd.MM.yyyy'}}</span> </div>\n            </mat-list-item>\n    </mat-list>\n\n    <div *ngIf=\"type !== 'firm'\" class=\"button-container\">\n        <button mat-fab class=\"button-income\" (click)=\"addIncome()\"><mat-icon>add</mat-icon></button>\n        <button mat-fab class=\"button-expense\" (click)=\"addExpense()\"><mat-icon>remove</mat-icon></button>\n    </div>\n    \n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AddIncomeModalComponent } from '../modals/add-income-modal/add-income-modal.component';\nimport { FirmService } from 'src/app/services/firm.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { AddExpenseModalComponent } from '../modals/add-expense-modal/add-expense-modal.component';\nimport { ShowAccountChangeDetailsComponent } from '../modals/show-account-change-details/show-account-change-details.component';\n\n@Component({\n  selector: 'app-firm-budget-list',\n  templateUrl: './firm-budget-list.component.html',\n  styleUrls: ['./firm-budget-list.component.scss']\n})\nexport class FirmBudgetListComponent implements OnInit {\n\n  user;\n  userId = localStorage.getItem('user');\n  firm;\n  accountChangesContainer;\n  acceptedBudgetChanges = 0;\n\n  constructor(private dialog: MatDialog, private firmService: FirmService, private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.refresh();\n  }\n\n  refresh() {\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n\n      this.firmService.getFirm(this.user.firmId).subscribe(response => {\n        this.firm = response;\n        this.accountChangesContainer = [...this.firm.firmBudget.income, ...this.firm.firmBudget.expense];\n        this.accountChangesContainer = this.accountChangesContainer.sort((a, b) => Date.parse(b.date) - Date.parse(a.date));\n        this.accountChangesContainer.forEach(change => {\n          if (change.status === 'Accepted') { this.acceptedBudgetChanges++; }\n        });\n      });\n    });\n  }\n\n  addIncome() {\n    const ref = this.dialog.open(AddIncomeModalComponent, {\n      data: {\n        id: this.user._id,\n        firmId: this.firm._id,\n        budgetType: 'firm'\n      }\n    });\n    ref.afterClosed().subscribe(() => {\n      this.refresh();\n    });\n  }\n\n  addExpense() {\n    const ref = this.dialog.open(AddExpenseModalComponent, {\n      data: {\n        id: this.user._id,\n        firmId: this.firm._id,\n        budgetType: 'firm'\n      }\n    });\n    ref.afterClosed().subscribe(() => {\n      this.refresh();\n    });\n  }\n\n  showDetails(data) {\n    this.dialog.open(ShowAccountChangeDetailsComponent, {\n      data: {\n        data\n      }\n    });\n  }\n\n}\n","<div class=\"firm-budget-container\">\n    <div class=\"firm-budget-balance\">\n        <p>Stan konta: {{(firm?.firmBudget?.money || 0) | currency:' '}}zł </p>\n        <mat-divider></mat-divider>\n    </div>\n\n    <div class=\"no-account-changes\" *ngIf=\"acceptedBudgetChanges == 0\">\n        <p>Brak danych</p>\n    </div>\n    <mat-list (click)=\"showDetails(accountChange)\" *ngFor=\"let accountChange of accountChangesContainer\" class=\"budget-changes-list\">\n        <mat-list-item *ngIf=\"accountChange.status == 'Accepted'\">\n            <mat-icon mat-list-icon>credit_card</mat-icon>\n            <div mat-line> \n                <span> {{accountChange.name}}</span> \n                <span class=\"align-right\" [class]=\"accountChange.type=='income' ? 'income': 'expense'\">{{accountChange.money | currency: ' '}}zł</span>  </div>\n            <div mat-line> {{accountChange.category.name}} <span class=\"align-right\">{{accountChange.date | date:'dd.MM.yyyy'}}</span> </div>\n            <mat-divider></mat-divider>\n        </mat-list-item>\n    </mat-list>\n\n    <div class=\"button-container\">\n        <button mat-fab type=\"button\" class=\"button-income\" (click)=\"addIncome()\"><mat-icon>add</mat-icon></button>\n        <button mat-fab type=\"button\" class=\"button-expense\" (click)=\"addExpense()\"><mat-icon>remove</mat-icon></button>\n    </div>\n    \n</div>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { FirmService } from 'src/app/services/firm.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-firm-users-list',\n  templateUrl: './firm-users-list.component.html',\n  styleUrls: ['./firm-users-list.component.scss']\n})\nexport class FirmUsersListComponent implements OnInit {\n\n  userId = localStorage.getItem('user');\n  user;\n  users;\n\n  constructor(private userService: UserService, private firmService: FirmService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n\n      this.firmService.getFirm(this.user.firmId).subscribe(response => {\n        this.users = response;\n        this.users = this.users.users;\n\n        this.users = this.users.sort((userOne, userTwo) => {\n          if (userOne.firmStatus < userTwo.firmStatus) { return 1; }\n          if (userOne.firmStatus > userTwo.firmStatus) { return -1; }\n          return 0;\n        });\n      });\n    });\n  }\n\n  goToProfile(id) {\n    this.router.navigate(['/profil'], {queryParams: {id}});\n  }\n\n\n}\n","<div class=\"users-list-container\">\n    <h2 class=\"title\">Lista pracowników</h2>\n    <mat-divider></mat-divider>\n    <mat-list *ngFor=\"let user of users\">\n        <mat-list-item (click)=\"goToProfile(user._id)\" *ngIf=\"user.firmStatus > 0\"> <mat-icon color=\"primary\"> {{user.firmStatus == 3 ? 'looks_3' : user.firmStatus == 2 ? 'looks_two' : 'looks_one'}} </mat-icon> {{user?.name}} {{user?.surname}} \n        <span [class]='user.isOnline ? \"green-circle\" : \"red-circle\"'>  </span>\n        </mat-list-item>\n    </mat-list>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer>\n    <div class=\"footer-container\">\n        <p>Dominik Puchała &copy; 2020</p>\n        <p>Uniwersytet Rzeszowski</p>\n    </div>\n</footer>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from 'src/app/models/user';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  user: User;\n  userId;\n  isUserLoggedIn: boolean;\n  @Input() isAdminLoggedIn: boolean = false;\n  @Input() pageName: string;\n\n  constructor(public userService: UserService, private router: Router) { }\n\n  ngOnInit(): void {\n    if (!localStorage.getItem('user')) {\n      this.isUserLoggedIn = false;\n    } \n    else {\n      this.isUserLoggedIn = true;\n      this.userId = localStorage.getItem('user');\n      this.userService.getUser(this.userId).subscribe(\n        res => {\n          this.user = res;\n        },\n        error => console.error(error),\n      )\n    } \n  }\n\n  logout() {\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    this.userService.changeOnlineStatus(this.userId).subscribe();\n    this.router.navigate(['/logowanie']);\n  }\n\n}\n","<header>\n    <nav class=\"nav\" *ngIf=\"userService.loggedIn()\">\n        <div class=\"current-page\">\n            {{pageName}}\n        </div>\n        <ul class=\"nav-list\">\n            <li *ngIf=\"!isAdminLoggedIn\" class=\"nav-item\" routerLink=\"/profil\"> {{user?.name | titlecase}} </li>\n            <li *ngIf=\"isAdminLoggedIn\" class=\"nav-item-disabled\" > {{user?.name | titlecase}} </li>\n            <li class=\"nav-item\" (click)=\"logout()\">Wyloguj się</li>\n        </ul>\n    </nav>\n    <nav class=\"nav\" *ngIf=\"!userService.loggedIn()\">\n        <img class=\"header-logo\" src=\"../../../assets/images/logo.png\" alt=\"logo\">\n        <ul class=\"nav-list\">\n            <li class=\"nav-item\" routerLink=\"/logowanie\">Zaloguj się</li>\n            <li class=\"nav-item\" routerLink=\"/rejestracja\">Zarejestruj się</li>\n        </ul>\n    </nav>\n</header>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { BudgetGoals } from 'src/app/models/budgetGoals';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-add-budget-goal-modal',\n  templateUrl: './add-budget-goal-modal.component.html',\n  styleUrls: ['./add-budget-goal-modal.component.scss']\n})\nexport class AddBudgetGoalModalComponent implements OnInit {\n\n  budgetGoalModel = new BudgetGoals('', null, 0, false, null);\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any, private userService: UserService) { }\n\n  ngOnInit(): void {\n  }\n\n  addBudgetGoal() {\n    this.userService.addBudgetGoal(this.budgetGoalModel, this.data.userId).subscribe();\n  }\n\n}\n","<form class=\"budget-goal-form\" #BudgetGoalForm=\"ngForm\">\n    <h2 class=\"title\">Cel</h2>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Nazwa</mat-label>\n        <input matInput class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"budgetGoalModel.name\" #name=\"ngModel\" required>\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group icon-form-group\">\n        <mat-label>Kwota do uzbierania</mat-label>\n        <input matInput class=\"form-control\" type=\"number\" name=\"goal\" [(ngModel)]=\"budgetGoalModel.goal\" #goal=\"ngModel\" required>\n    </mat-form-field>\n\n    <button mat-button class=\"btn-success\" type=\"button\" [mat-dialog-close]=\"true\" [disabled]=\"BudgetGoalForm.form.invalid\" (click)=\"addBudgetGoal()\">Dodaj cel</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { Category } from 'src/app/models/category';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-add-category-modal',\n  templateUrl: './add-category-modal.component.html',\n  styleUrls: ['./add-category-modal.component.scss']\n})\nexport class AddCategoryModalComponent implements OnInit {\n\n  categoryModel = new Category('', '', [null]);\n\n  constructor(private categoryService: CategoryService, public dialogRef: MatDialogRef<AddCategoryModalComponent>) { }\n\n  ngOnInit(): void {\n  }\n\n  addCategory() {\n    this.categoryService.addCategory(this.categoryModel).subscribe(res => {\n      this.dialogRef.close(true);\n    })\n  }\n\n}\n","<form class=\"category-form\" #CategoryForm=\"ngForm\">\n    <h2 class=\"title\">Kategoria</h2>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Nazwa</mat-label>\n        <input matInput class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"categoryModel.name\" #name=\"ngModel\" required>\n        <!-- <div *ngIf=\"name.errors && name.touched\">\n            <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group icon-form-group\">\n        <mat-label>Ikona</mat-label>\n        <input matInput class=\"form-control\" type=\"text\" name=\"icon\" [(ngModel)]=\"categoryModel.icon\" #icon=\"ngModel\" required>\n        <!-- <div *ngIf=\"name.errors && name.touched\">\n            <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n        <span class=\"transfer\"><a target=\"_blank\" href=\"https://material.io/resources/icons/?style=baseline\"><mat-icon>info</mat-icon></a></span>\n    </mat-form-field>\n\n    <button mat-button class=\"btn-success\" type=\"button\" mat-dialog-close [disabled]=\"CategoryForm.form.invalid\" (click)=\"addCategory()\">Dodaj kategorie</button>\n</form>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { Expense } from 'src/app/models/expense';\nimport { UserService } from 'src/app/services/user.service';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Budget } from 'src/app/models/budget';\nimport { FirmService } from 'src/app/services/firm.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CategoryService } from 'src/app/services/category.service';\n\n@Component({\n  selector: 'app-add-expense-modal',\n  templateUrl: './add-expense-modal.component.html',\n  styleUrls: ['./add-expense-modal.component.scss']\n})\nexport class AddExpenseModalComponent implements OnInit {\n\n  user: any = [];\n  firm;\n  expenseModel = new Expense('', 0, null, null, 'expense', 'Accepted', '');\n  categories: any = [];\n  defaultCategory: any;\n\n  constructor(private userService: UserService, @Inject(MAT_DIALOG_DATA) public data: any, private firmService: FirmService,\n              public dialogRef: MatDialogRef<AddExpenseModalComponent>, private categoryService: CategoryService) { }\n\n  ngOnInit(): void {\n    this.userService.getUser(this.data.id).subscribe(res => {\n      this.user = res;\n      if (!this.user.budget) { this.user.budget = new Budget(null, [], []); }\n    });\n    if (this.data.budgetType === 'firm') {\n    this.firmService.getFirm(this.data.firmId).subscribe(res => {\n      this.firm = res;\n    });\n  }\n\n    this.categoryService.getAllCategories().subscribe(res => {\n    this.categories = res;\n    this.expenseModel.category = res[0];\n  });\n  }\n\n  addExpense() {\n    if (this.user.settings.isBudgetNegativeValueAllowed === false && this.user.budget.money - this.expenseModel.money < 0) {\n      this.dialogRef.close(2);\n      return;\n    }\n    if (this.data.budgetType === 'user') {\n      this.user.budget.expense.push(this.expenseModel);\n      this.userService.changeBudgetUser(this.user._id, this.user).subscribe();\n    }\n    else {\n      if (this.user.firmStatus > 1) { this.expenseModel.status = 'Accepted'; }\n      else { this.expenseModel.status = 'Waiting'; }\n      this.firm.firmBudget.expense.push(this.expenseModel);\n      this.firmService.editFirm(this.firm._id, this.firm).subscribe();\n    }\n    this.manageCategory();\n    this.dialogRef.close(0);\n  }\n\n  manageCategory() {\n    this.categoryService.getCategory(this.expenseModel.category.name).subscribe(res => {\n      const words = this.expenseModel.name.toLowerCase().split(' ');\n      words.map(word => {\n        res.matches.map(match => {\n          if (match.name === word) {\n            match.amount++;\n            return;\n          }\n        });\n      });\n      this.categoryService.updateCategory(res).subscribe();\n  });\n}\n\nchooseCategory() {\n  this.categoryService.chooseCategory(this.expenseModel.name).subscribe(res => {\n    if (res == null) { this.expenseModel.category = this.categories[0]; }\n    else { this.expenseModel.category = this.categories[res]; }\n  });\n}\n\n}\n","<form class=\"expense-form\" #ExpenseForm=\"ngForm\">\n    <h2 class=\"title\">Wydatek</h2>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Nazwa</mat-label>\n        <input (change)=\"chooseCategory()\" matInput class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"expenseModel.name\" #name=\"ngModel\" required>\n        <!-- <div *ngIf=\"name.errors && name.touched\">\n            <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Ilość pieniędzy</mat-label>\n        <input matInput class=\"form-control\" type=\"number\" min=\"0\" name=\"money\" [(ngModel)]=\"expenseModel.money\" #money=\"ngModel\" required>\n        <!-- <div *ngIf=\"name.errors && name.touched\">\n            <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group\" appearance=\"fill\">\n        <mat-label>Data</mat-label>\n        <input matInput #date=\"ngModel\" name=\"date\" [matDatepicker]=\"picker\" [(ngModel)]=\"expenseModel.date\" required>\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Rodzaj</mat-label>\n        <mat-select [(value)]=\"expenseModel.category\" class=\"select\" name=\"category\" [(ngModel)]=\"expenseModel.category\" required>\n            <mat-option *ngFor=\"let category of categories\" [value]=\"category\"> {{category.name}} </mat-option>\n        </mat-select>\n        \n    </mat-form-field>\n\n    <div class=\"buttons-container\">\n        <button mat-button class=\"btn-success\" type=\"button\" [mat-dialog-close]=\"true\" [disabled]=\"ExpenseForm.form.invalid\" (click)=\"addExpense()\">Dodaj wydatek</button>\n        <button mat-button class=\"btn-warn\" type=\"button\" [mat-dialog-close]=\"false\" >Cofnij</button>\n    </div>\n</form>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { Income } from 'src/app/models/income';\nimport { UserService } from 'src/app/services/user.service';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Budget } from 'src/app/models/budget';\nimport { FirmService } from 'src/app/services/firm.service';\nimport { CategoryService } from 'src/app/services/category.service';\n\n@Component({\n  selector: 'app-add-income-modal',\n  templateUrl: './add-income-modal.component.html',\n  styleUrls: ['./add-income-modal.component.scss']\n})\nexport class AddIncomeModalComponent implements OnInit {\n\n  user: any = [];\n  firm;\n  incomeModel = new Income('', 0, null, {name: '', icon: '', matches: []}, 'income', 'Accepted', '', '', '', '');\n  categories: any = [];\n  defaultCategory: any;\n  budgetGoals;\n  selectedBudgetGoal;\n\n  constructor(private userService: UserService, private firmService: FirmService,\n              @Inject(MAT_DIALOG_DATA) public data: any, public dialogRef: MatDialogRef<AddIncomeModalComponent>,\n              private categoryService: CategoryService) { }\n\n  ngOnInit(): void {\n      this.userService.getUser(this.data.id).subscribe(res => {\n        this.user = res;\n        this.budgetGoals = res.budgetGoals;\n        this.budgetGoals = this.budgetGoals.filter(goal => {\n          if (!goal.isCompleted) { return goal; }\n        });\n        if (!this.user.budget) { this.user.budget = new Budget(null, [], []); }\n      });\n      if (this.data.budgetType === 'firm') {\n      this.firmService.getFirm(this.data.firmId).subscribe(res => {\n        this.firm = res;\n      });\n    }\n\n      this.categoryService.getAllCategories().subscribe(res => {\n      this.categories = res;\n      this.incomeModel.category = res[0];\n    });\n  }\n\n  manageCategory() {\n    this.categoryService.getCategory(this.incomeModel.category.name).subscribe(res => {\n      const words = this.incomeModel.name.toLowerCase().split(' ');\n      words.map(word => {\n        res.matches.map(match => {\n          if (match.name === word) {\n            match.amount++;\n            return;\n          }\n        });\n      });\n\n      this.categoryService.updateCategory(res).subscribe();\n  });\n}\n\n  addIncome() {\n    if (this.data.budgetType === 'user') {\n      this.user.budget.income.push(this.incomeModel);\n      this.userService.changeBudgetUser(this.user._id, this.user).subscribe();\n      if (this.selectedBudgetGoal !== undefined) {\n        this.userService.updateBudgetGoal(this.selectedBudgetGoal, this.data.id, this.incomeModel.money).subscribe();\n      }\n\n      this.dialogRef.close(true);\n    }\n    else {\n      if (this.user.firmStatus > 1) { this.incomeModel.status = 'Accepted'; }\n      else { this.incomeModel.status = 'Waiting'; }\n      this.firm.firmBudget.income.push(this.incomeModel);\n      this.firmService.editFirm(this.firm._id, this.firm).subscribe();\n    }\n    this.manageCategory();\n  }\n\n  chooseCategory() {\n    this.categoryService.chooseCategory(this.incomeModel.name).subscribe(res => {\n      if (res == null) { this.incomeModel.category = this.categories[0]; }\n      else { this.incomeModel.category = this.categories[res]; }\n    });\n  }\n\n}\n","<form class=\"income-form\" #IncomeForm=\"ngForm\">\n    <h2 class=\"title\">Dochód</h2>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Nazwa</mat-label>\n        <input (change)=\"chooseCategory()\" matInput class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"incomeModel.name\" #name=\"ngModel\" required>\n        <!-- <div *ngIf=\"name.errors && name.touched\">\n            <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Ilość pieniędzy</mat-label>\n        <input matInput class=\"form-control\" type=\"number\" min=\"0\" name=\"money\" [(ngModel)]=\"incomeModel.money\" #money=\"ngModel\" required>\n        <!-- <div *ngIf=\"name.errors && name.touched\">\n            <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group\" appearance=\"fill\">\n        <mat-label>Data</mat-label>\n        <input matInput #date=\"ngModel\" name=\"date\" [matDatepicker]=\"picker\" [(ngModel)]=\"incomeModel.date\" required>\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n\n    <mat-form-field *ngIf=\"data.budgetType!='firm'\" class=\"form-group\">\n        <mat-label>Cel</mat-label>\n        <mat-select [(value)]=\"selectedBudgetGoal\" class=\"select\" name=\"budgetGoal\" [(ngModel)]=\"selectedBudgetGoal\">\n            <mat-option *ngFor=\"let goal of budgetGoals\" [value]=\"goal\"> {{goal.name}} </mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Rodzaj</mat-label>\n        <mat-select [(value)]=\"incomeModel.category\" class=\"select\" name=\"category\" [(ngModel)]=\"incomeModel.category\" required>\n            <mat-option *ngFor=\"let category of categories\" [value]=\"category\"> {{category.name}} </mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <button mat-button class=\"btn-success\" type=\"button\" mat-dialog-close [disabled]=\"IncomeForm.form.invalid\" (click)=\"addIncome()\">Dodaj dochód</button>\n</form>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-add-money-to-goal-modal',\n  templateUrl: './add-money-to-goal-modal.component.html',\n  styleUrls: ['./add-money-to-goal-modal.component.scss']\n})\nexport class AddMoneyToGoalModalComponent implements OnInit {\n\n  money: number;\n  userId;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any, private userService: UserService,\n              public dialogRef: MatDialogRef<AddMoneyToGoalModalComponent>) { }\n\n  ngOnInit(): void {\n  }\n\n  addIncome() {\n    this.userId = localStorage.getItem('user');\n    this.userService.updateBudgetGoal(this.data.goal, this.userId, this.money).subscribe(_ => {\n      this.dialogRef.close(true);\n    });\n  }\n\n}\n","<form class=\"income-form\" #IncomeForm=\"ngForm\">\n    <h2 class=\"title\">Dodaj pieniądze do celu - {{data.goal.name}} </h2>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Ilość pieniędzy</mat-label>\n        <input matInput class=\"form-control\" type=\"number\" min=\"0.01\" step=\"1\" name=\"money\" [(ngModel)]=\"money\" required>\n    </mat-form-field>\n\n    <button mat-button class=\"btn-success\" type=\"button\" mat-dialog-close [disabled]=\"IncomeForm.form.invalid\" (click)=\"addIncome()\">Dodaj</button>\n</form>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-change-password-modal',\n  templateUrl: './change-password-modal.component.html',\n  styleUrls: ['./change-password-modal.component.scss']\n})\nexport class ChangePasswordModalComponent implements OnInit {\n\n  changePasswordModel = {\n    password: '',\n    newPassword: ''\n  };\n\n  constructor(private userService: UserService, @Inject(MAT_DIALOG_DATA) public data: any, private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n  }\n\n  changePassword() {\n    this.userService.changePassword(this.data.userId, this.changePasswordModel.password, this.changePasswordModel.newPassword)\n    .subscribe(res => {\n      this.userService.playNotificationsSound();\n      this.snackBar.open('Zmieniono hasło', 'OK', {\n          horizontalPosition: 'right',\n          duration: 5000,\n          panelClass: ['snackbar-success']\n        });\n    },\n    error => {\n      if (error.error === 'Invalid password') {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Nieprawidłowe hasło', 'OK', {\n          horizontalPosition: 'right',\n          duration: 5000,\n          panelClass: ['snackbar-warn']\n        });\n      }\n    });\n  }\n\n}\n","<div class=\"change-permissions-container\">\n    <form id=\"ChangePasswordForm\" class=\"change-password-form\" #ChangePasswordForm=\"ngForm\">\n\n        <h2 class=\"title\">Zmień hasło</h2>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Stare hasło</mat-label>\n            <input matInput class=\"form-control\" type=\"password\" name=\"password\" [(ngModel)]=\"changePasswordModel.password\" #password=\"ngModel\" required>\n        </mat-form-field>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Nowe hasło</mat-label>\n            <input matInput class=\"form-control\" type=\"password\" name=\"newPassword\" [(ngModel)]=\"changePasswordModel.newPassword\" #newPassword=\"ngModel\" pattern=\".{8,}\" required>\n        </mat-form-field>\n\n        <button class=\"change-button\" type=\"button\" [disabled]=\"ChangePasswordForm.form.invalid\" mat-raised-button mat-dialog-close (click)=\"changePassword()\">Zmień</button>\n    \n    </form>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { User } from 'src/app/models/user';\n\n@Component({\n  selector: 'app-change-permissions-modal',\n  templateUrl: './change-permissions-modal.component.html',\n  styleUrls: ['./change-permissions-modal.component.scss']\n})\nexport class ChangePermissionsModalComponent implements OnInit {\n\n  user;\n  changePermissionsModel = new User('', '', '', '', '', '', '', null, '', null, null, '', 0, null, [], 0, null, null, null, [], null);\n  permissions: number;\n\n  constructor(private userService: UserService, @Inject(MAT_DIALOG_DATA) public data: any ) { }\n\n  ngOnInit(): void {\n    this.userService.getUser(this.data.userId).subscribe(res => {\n      this.user = res;\n    });\n\n    this.userService.getUser(this.data.employeeId).subscribe(res => {\n      this.changePermissionsModel = res;\n      this.permissions = res.firmStatus;\n    });\n  }\n\n  changePermissions() {\n    this.userService.changeUserPermissions(this.data.employeeId, this.permissions).subscribe();\n  }\n\n}\n","<div class=\"change-permissions-container\">\n    <form id=\"ChangePermissionsForm\" class=\"change-permissions-form\" #ChangePermissionsForm=\"ngForm\">\n\n        <h2 class=\"title\">Zmień uprawnienia użytkownika {{changePermissionsModel.name}} {{changePermissionsModel.surname}} </h2>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Uprawnienia</mat-label>\n            <mat-select class=\"select\" name=\"permissions\" [(ngModel)]=\"permissions\" required>\n                <mat-option *ngIf=\"user?.firmStatus >= 3\" value=3>Właściciel</mat-option>\n                <mat-option *ngIf=\"user?.firmStatus >= 2\" value=2>Kierownik</mat-option>\n                <mat-option value=1>Pracownik</mat-option>\n            </mat-select>\n        </mat-form-field>\n\n        <div class=\"button-container\">\n            <button mat-raised-button type=\"button\" class=\"button--success\" [mat-dialog-close]=\"true\" [disabled]=\"ChangePermissionsForm.form.invalid\" (click)=\"changePermissions()\">Zmień</button>\n            <button mat-raised-button type=\"button\" class=\"button--delete\" [mat-dialog-close]=\"true\">Zamknij</button>\n        </div>\n    \n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-confirm-leaving-firm',\n  templateUrl: './confirm-leaving-firm.component.html',\n  styleUrls: ['./confirm-leaving-firm.component.scss']\n})\nexport class ConfirmLeavingFirmComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"confirm-leaving-container\">\n    <h2 class=\"title\">Uwaga</h2>\n    <p>Po opuszczeniu tej firmy, zostanie ona usunięta, ponieważ jesteś jedynym właścicielem tej firmy. Aby tego uniknąć nadaj uprawnienia właściciela innej osobie</p>\n\n    <div class=\"button-container\">\n        <button mat-button class=\"button--delete\" type=\"button\" [mat-dialog-close]=\"true\">Opuść mimo to</button>\n        <button mat-button type=\"button\" [mat-dialog-close]=\"false\">Cofnij</button>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-delete-goal-modal',\n  templateUrl: './delete-goal-modal.component.html',\n  styleUrls: ['./delete-goal-modal.component.scss']\n})\nexport class DeleteGoalModalComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <p>Czy jesteś pewny, że chcesz usunąć cel ?</p>\n    <div class=\"buttons-container\">\n        <button class=\"delete-button\" mat-raised-button [mat-dialog-close]=\"true\">Usuń</button>\n        <button class=\"cancel-button\" mat-raised-button mat-dialog-close >Anuluj</button>\n    </div>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { Category } from 'src/app/models/category';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { CategoryService } from 'src/app/services/category.service';\n\n@Component({\n  selector: 'app-edit-category-modal',\n  templateUrl: './edit-category-modal.component.html',\n  styleUrls: ['./edit-category-modal.component.scss']\n})\nexport class EditCategoryModalComponent implements OnInit {\n\n  categoryEditModel = new Category('', '', [null]);\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any, private categoryService: CategoryService) { }\n\n  ngOnInit(): void {\n    this.categoryEditModel = this.data.category;\n  }\n\n  editCategory() {\n    this.categoryService.updateCategory(this.categoryEditModel).subscribe();\n  }\n\n}\n","<form class=\"category-form\" #CategoryEditForm=\"ngForm\">\n    <h2 class=\"title\">Edycja Kategorii</h2>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Nazwa</mat-label>\n        <input matInput class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"categoryEditModel.name\" #name=\"ngModel\" required>\n        <!-- <div *ngIf=\"name.errors && name.touched\">\n            <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group icon-form-group\">\n        <mat-label>Ikona</mat-label>\n        <input matInput class=\"form-control\" type=\"text\" name=\"icon\" [(ngModel)]=\"categoryEditModel.icon\" #icon=\"ngModel\" required>\n        <!-- <div *ngIf=\"name.errors && name.touched\">\n            <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n        <span class=\"transfer\"><a target=\"_blank\" href=\"https://material.io/resources/icons/?style=baseline\"><mat-icon>info</mat-icon></a></span>\n    </mat-form-field>\n\n    <button mat-button class=\"btn-success\" type=\"button\" [mat-dialog-close]=\"true\" [disabled]=\"CategoryEditForm.form.invalid\" (click)=\"editCategory()\">Edytuj</button>\n</form>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { Firm } from 'src/app/models/firm';\nimport { FirmService } from 'src/app/services/firm.service';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-edit-firm-data-modal',\n  templateUrl: './edit-firm-data-modal.component.html',\n  styleUrls: ['./edit-firm-data-modal.component.scss']\n})\nexport class EditFirmDataModalComponent implements OnInit {\n\n  firmModel = new Firm('', {'country': '', 'city': '', 'street': ''}, [], null, false, []);\n\n  constructor(private firmService: FirmService, @Inject(MAT_DIALOG_DATA) public data: any ) { }\n\n  ngOnInit(): void {\n    this.firmService.getFirm(this.data.id).subscribe(res => {\n      this.firmModel = res;\n    })\n  }\n\n  editFirmData() {\n    this.firmService.editFirm(this.data.id, this.firmModel).subscribe();\n  }\n\n}\n","<form class=\"firm-form\" #firmForm=\"ngForm\">\n    <h2 class=\"title\">Edytuj dane firmy</h2>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Nazwa</mat-label>\n        <input matInput class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"firmModel.name\" #name=\"ngModel\" pattern=\".{1,20}\" required>\n        <!-- <div *ngIf=\"name.errors && name.touched\">\n            <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Państwo</mat-label>\n        <input matInput class=\"form-control\" type=\"text\" name=\"country\" [(ngModel)]=\"firmModel.address.country\" #country=\"ngModel\" pattern=\".{1,20}\" required>\n        <!-- <div *ngIf=\"surname.errors && surname.touched\">\n            <p class=\"text--warn\" *ngIf=\"surname.errors.required\">Nazwisko jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"surname.errors.pattern\">Nazwisko nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Miasto</mat-label>\n        <input matInput class=\"form-control\" type=\"text\" name=\"city\" [(ngModel)]=\"firmModel.address.city\" #city=\"ngModel\" required>\n        <!-- <div *ngIf=\"email.errors && email.touched\">\n            <p class=\"text--warn\" *ngIf=\"email.errors.required\">Email jest wymagany</p>\n            <p class=\"text--warn\" *ngIf=\"email.errors.pattern\">Nieprawidłowy adres email</p>\n        </div> -->\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Adres</mat-label>\n        <input matInput class=\"form-control\" type=\"text\" name=\"street\" [(ngModel)]=\"firmModel.address.street\" #street=\"ngModel\">\n        <!-- <div *ngIf=\"phone.errors && phone.touched\">\n            <p class=\"text--warn\" *ngIf=\"phone.errors.pattern\">Numer telefonu musi składać się z 9 cyfr</p>\n        </div> -->\n    </mat-form-field>\n\n    <button mat-button class=\"btn-success\" type=\"button\" mat-dialog-close [disabled]=\"firmForm.form.invalid\" (click)=\"editFirmData()\">Zaktualizuj dane</button>\n</form>\n\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BudgetGoals } from 'src/app/models/budgetGoals';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-edit-goal-modal',\n  templateUrl: './edit-goal-modal.component.html',\n  styleUrls: ['./edit-goal-modal.component.scss']\n})\nexport class EditGoalModalComponent implements OnInit {\n\n  goalModel = new BudgetGoals('', null, null, null, null);\n  userId;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any, private userService: UserService,\n              public dialogRef: MatDialogRef<EditGoalModalComponent>) { }\n\n  ngOnInit(): void {\n    this.goalModel = this.data.goal;\n  }\n\n  editGoal() {\n    this.userId = localStorage.getItem('user');\n    this.userService.editGoal(this.userId, this.goalModel).subscribe(_ => {\n      this.dialogRef.close(true);\n    });\n  }\n\n}\n","<form class=\"goal-form\" #goalForm=\"ngForm\">\n    <h2 class=\"title\">Edytuj cel</h2>\n\n    <div class=\"grid--container\">\n        <mat-form-field class=\"form-group\">\n            <mat-label>Nazwa</mat-label>\n            <input matInput class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"goalModel.name\" #name=\"ngModel\" required>\n        </mat-form-field>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Ilość pieniędzy do zebrania</mat-label>\n            <input matInput class=\"form-control\" type=\"text\" name=\"money\" [(ngModel)]=\"goalModel.goal\" #goal=\"ngModel\" required>\n        </mat-form-field>\n    </div>\n    <button mat-button class=\"btn-success\" type=\"button\" [mat-dialog-close]=\"true\" [disabled]=\"goalForm.form.invalid\" (click)=\"editGoal()\">Zaktualizuj cel</button>\n</form>\n\n","import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/models/user';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-edit-profile-modal',\n  templateUrl: './edit-profile-modal.component.html',\n  styleUrls: ['./edit-profile-modal.component.scss']\n})\nexport class EditProfileModalComponent implements OnInit {\n\n  profileModel = new User('', '', '', '', '', '', '', null, '', null, null, '', 0, null, [], 0, null, null, null, [], null);\n  userId = localStorage.getItem('user');\n  user;\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.userId = localStorage.getItem('user');\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.profileModel = res;\n    });\n  }\n\n  editProfile() {\n    this.userService.editUser(this.userId, this.profileModel).subscribe();\n  }\n\n}\n","<form class=\"profile-form\" #profileForm=\"ngForm\">\n    <h2 class=\"title\">Edytuj profil</h2>\n\n    <div class=\"grid--container\">\n        <mat-form-field class=\"form-group\">\n            <mat-label>Imie</mat-label>\n            <input matInput class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"profileModel.name\" #name=\"ngModel\" pattern=\".{1,20}\" placeholder=\"Podaj swoję imie...\" required>\n            <!-- <div *ngIf=\"name.errors && name.touched\">\n                <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n                <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n            </div> -->\n        </mat-form-field>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Nazwisko</mat-label>\n            <input matInput class=\"form-control\" type=\"text\" [class.input--warn]=\"surname.invalid && surname.touched\" placeholder=\"nazwisko\" name=\"surname\" \n            [(ngModel)]=\"profileModel.surname\" #surname=\"ngModel\" pattern=\".{1,20}\" required>\n            <!-- <div *ngIf=\"surname.errors && surname.touched\">\n                <p class=\"text--warn\" *ngIf=\"surname.errors.required\">Nazwisko jest wymagane</p>\n                <p class=\"text--warn\" *ngIf=\"surname.errors.pattern\">Nazwisko nie może mieć więcej niż 20 znaków</p>\n            </div> -->\n        </mat-form-field>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Email</mat-label>\n            <input matInput class=\"form-control\" type=\"email\" [class.input--warn]=\"email.invalid && email.touched\" placeholder=\"email\" name=\"email\" \n            [(ngModel)]=\"profileModel.email\" #email=\"ngModel\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\" required>\n            <!-- <div *ngIf=\"email.errors && email.touched\">\n                <p class=\"text--warn\" *ngIf=\"email.errors.required\">Email jest wymagany</p>\n                <p class=\"text--warn\" *ngIf=\"email.errors.pattern\">Nieprawidłowy adres email</p>\n            </div> -->\n        </mat-form-field>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Numer telefonu</mat-label>\n            <input matInput class=\"form-control\" type=\"text\" [class.input--warn]=\"phone.invalid && phone.touched\" placeholder=\"numer telefonu\" name=\"phone\" \n            [(ngModel)]=\"profileModel.phone\" #phone=\"ngModel\" pattern=\"\\d{9}\">\n            <!-- <div *ngIf=\"phone.errors && phone.touched\">\n                <p class=\"text--warn\" *ngIf=\"phone.errors.pattern\">Numer telefonu musi składać się z 9 cyfr</p>\n            </div> -->\n        </mat-form-field>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Data urodzenia</mat-label>\n            <input matInput type=\"date\" class=\"form-control\" name=\"dateOfBirth\" [(ngModel)]=\"profileModel.dateOfBirth\" #dateOfBirth=\"ngModel\" value=\"01.01.2000\">\n        </mat-form-field>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Płeć</mat-label>\n            <mat-select class=\"select\" name=\"sex\" [(ngModel)]=\"profileModel.sex\" required>\n                <mat-option value=\"man\"> Mężczyzna </mat-option>\n                <mat-option value=\"woman\"> Kobieta </mat-option>\n            </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Stanowisko</mat-label>\n            <input matInput type=\"input\" class=\"form-control\" name=\"positionName\" [(ngModel)]=\"profileModel.position.name\" #positionName=\"ngModel\">\n        </mat-form-field>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Wynagrodzenie</mat-label>\n            <input matInput type=\"number\" class=\"form-control\" name=\"positionEarnings\" [(ngModel)]=\"profileModel.position.earnings\" #positionEarnings=\"ngModel\">\n        </mat-form-field>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Opis</mat-label>\n            <textarea matInput placeholder=\"Dodaj swój opis...\" name=\"description\" [(ngModel)]=\"profileModel.description\" #description=\"ngModel\"></textarea>\n        </mat-form-field>\n    </div>\n    <button mat-button class=\"btn-success\" type=\"button\" mat-dialog-close [disabled]=\"profileForm.form.invalid\" (click)=\"editProfile()\">Zaktualizuj profil</button>\n</form>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Firm } from 'src/app/models/firm';\nimport { FirmService } from 'src/app/services/firm.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-firm-create-modal',\n  templateUrl: './firm-create-modal.component.html',\n  styleUrls: ['./firm-create-modal.component.scss']\n})\nexport class FirmCreateModalComponent implements OnInit {\n\n  userId = localStorage.getItem('user');\n  user;\n  firmCreateModel = new Firm('', {'country': '', 'city': '', 'street': ''}, [], null, false, []);\n\n  constructor(private firmService: FirmService, private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n    })\n  }\n\n  createFirm() {\n    this.firmService.addFirm(this.firmCreateModel, this.user).subscribe();\n  }\n\n}\n","<form class=\"firm-create-form\" #firmCreateForm=\"ngForm\">\n    <h2 class=\"title\">Utwórz firme</h2>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Nazwa</mat-label>\n        <input matInput class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"firmCreateModel.name\" #name=\"ngModel\" required>\n        <!-- <div *ngIf=\"name.errors && name.touched\">\n            <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Państwo</mat-label>\n        <input matInput class=\"form-control\" type=\"text\" name=\"country\" [(ngModel)]=\"firmCreateModel.address.country\" #country=\"ngModel\" required>\n        <!-- <div *ngIf=\"name.errors && name.touched\">\n            <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Miasto</mat-label>\n        <input matInput class=\"form-control\" type=\"text\" name=\"city\" [(ngModel)]=\"firmCreateModel.address.city\" #city=\"ngModel\" required>\n        <!-- <div *ngIf=\"name.errors && name.touched\">\n            <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Ulica</mat-label>\n        <input matInput class=\"form-control\" type=\"text\" name=\"street\" [(ngModel)]=\"firmCreateModel.address.street\" #street=\"ngModel\" required>\n        <!-- <div *ngIf=\"name.errors && name.touched\">\n            <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n    </mat-form-field>\n\n    <button mat-button class=\"btn-success\" type=\"button\" [mat-dialog-close]=\"true\" [disabled]=\"firmCreateForm.form.invalid\" (click)=\"createFirm()\">Utwórz firmę</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { FirmService } from 'src/app/services/firm.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-firm-search-modal',\n  templateUrl: './firm-search-modal.component.html',\n  styleUrls: ['./firm-search-modal.component.scss']\n})\nexport class FirmSearchModalComponent implements OnInit {\n\n  user;\n  userId = localStorage.getItem('user');\n  firms: any;\n  searchedFirm = '';\n  activeFirms = 0;\n  ready;\n\n  constructor(private firmService: FirmService, private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.ready = false;\n    this.firmService.getFirms().subscribe(res => {\n      this.firms = res;\n      this.firms = this.firms.filter(firm => {\n        if (firm.isDeleted !== true) {\n          this.activeFirms++;\n          return firm;\n        }\n      });\n      this.ready = true;\n      console.log(this.firms);\n    });\n\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n    });\n  }\n\n  joinFirm(id) {\n    this.userService.joinFirm(id, this.user).subscribe();\n  }\n\n}\n","<div class=\"firm-search-container\">\n    <h2 class=\"title\">Szukaj firmy</h2>\n    <mat-spinner *ngIf=\"!ready\"></mat-spinner>\n    <div *ngIf=\"ready\">\n        <div class=\"no-firms\" *ngIf=\"activeFirms == 0\">\n            <p>Aktualnie nie ma żadnych firm</p>\n        </div>\n        <!-- <input class=\"form-control\" type=\"text\" name=\"search\" [(ngModel)]=\"searchedFirm\" autocomplete=\"off\" placeholder=\"Szukaj firmy\"> -->\n        <mat-list class=\"firm-search\" *ngFor=\"let firm of firms\">\n            <mat-list-item class=\"firm-item\" *ngIf=\"firm.isDeleted != true\">\n                <mat-icon>business</mat-icon>\n                <p>{{firm.name}} {{firm.address.country}}, {{firm.address.city}}, {{firm.address.street}}</p>\n                <button class=\"join-firm-button\" mat-dialog-close mat-raised-button type=\"button\" (click)=\"joinFirm(firm._id)\"><mat-icon>add</mat-icon></button>\n                <mat-divider></mat-divider>\n            </mat-list-item>\n        </mat-list>\n    </div>\n\n</div>\n\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-open-mail-modal',\n  templateUrl: './open-mail-modal.component.html',\n  styleUrls: ['./open-mail-modal.component.scss']\n})\nexport class OpenMailModalComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"mail-container\">\n    <h2 class=\"title\"> {{data.mail.topic}} </h2>\n    <p class=\"message\"> {{data.mail.message}} </p>\n    <div class=\"buttons-container\">\n        <button *ngIf=\"data.isAdmin == true && data.canAnswer == true\" mat-raised-button [mat-dialog-close]=\"true\" class=\"response-button\">Odpowiedz</button>\n        <button mat-raised-button [mat-dialog-close]=\"false\" class=\"close-button\">Zamknij</button>\n    </div>\n\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { Mail } from 'src/app/models/mail';\nimport { MailService } from 'src/app/services/mail.service';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-send-mail-modal',\n  templateUrl: './send-mail-modal.component.html',\n  styleUrls: ['./send-mail-modal.component.scss']\n})\nexport class SendMailModalComponent implements OnInit {\n\n  mailModel = new Mail('','','','','','','');\n\n  constructor(private mailService: MailService, @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n      this.mailModel.recipientId = this.data.mail.senderId;\n      this.mailModel.topic = this.data.mail.topic;\n      this.mailModel.senderName = this.data.adminName;\n  }\n\n  sendMessage() {\n    this.mailModel.recipientId = this.data.mail.senderId;\n    this.mailModel.status = \"Zakończone\";\n    this.mailModel.type = \"adminResponse\";\n    this.mailService.sendMessage(this.mailModel).subscribe();\n  }\n\n}\n","<div class=\"send-mail-container\">\n    <form class=\"helpdesk-form\" #HelpdeskForm=\"ngForm\">\n        <mat-form-field class=\"form-group\">\n            <input matInput class=\"form-control topic\" type=\"text\" name=\"topic\" [(ngModel)]=\"mailModel.topic\" #name=\"ngModel\" required disabled>\n            <!-- <div *ngIf=\"name.errors && name.touched\">\n                <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n                <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n            </div> -->\n        </mat-form-field>\n    \n        <mat-form-field class=\"form-group\">\n            <mat-label>Odpowiedz...</mat-label>\n            <textarea matInput class=\"form-control textarea\" name=\"message\" [(ngModel)]=\"mailModel.message\" #name=\"ngModel\" required maxlength=\"100\"></textarea>\n            <!-- <div *ngIf=\"name.errors && name.touched\">\n                <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n                <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n            </div> -->\n        </mat-form-field>\n    \n        <div class=\"buttons-container\">\n            <button mat-raised-button class=\"btn-success\" type=\"button\" [mat-dialog-close]=\"true\" [disabled]=\"HelpdeskForm.form.invalid\" (click)=\"sendMessage()\">Wyślij</button>\n            <button mat-raised-button class=\"btn-warn\" type=\"button\" [mat-dialog-close]=\"false\">Cofnij</button>\n        </div>\n    </form>\n</div>\n\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { Income } from '../../../models/income';\nimport { UserService } from 'src/app/services/user.service';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FirmService } from 'src/app/services/firm.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AddExpenseModalComponent } from '../add-expense-modal/add-expense-modal.component';\nimport { Expense } from 'src/app/models/expense';\nimport { CategoryService } from 'src/app/services/category.service';\n\n@Component({\n  selector: 'app-send-money-dialog',\n  templateUrl: './send-money-dialog.component.html',\n  styleUrls: ['./send-money-dialog.component.scss']\n})\nexport class SendMoneyDialogComponent implements OnInit {\n\n  userId = localStorage.getItem('user');\n  user;\n  firm;\n  paymentModel = new Income('', null, null, {name: 'Przelew', icon: '', matches: []}, '', 'Waiting', '', '', '', '');\n  categories;\n  category;\n\n  constructor(private userService: UserService, private firmService: FirmService, @Inject(MAT_DIALOG_DATA) public data: any,\n              private snackBar: MatSnackBar, public dialogRef: MatDialogRef<AddExpenseModalComponent>,\n              private categoryService: CategoryService) { }\n\n  ngOnInit(): void {\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n    });\n    this.categoryService.getAllCategories().subscribe(res => {\n      this.categories = res;\n      this.category = this.categories.filter(category => {\n        if (category.name === 'Przelew') { return category; }\n      });\n    });\n\n    if (this.data.type === 'firm') {\n      this.firmService.getFirm(this.data._id).subscribe(res => {\n        this.firm = res;\n      });\n    }\n  }\n\n  sendPayment() {\n\n    this.paymentModel.date = new Date();\n\n    const expense = new Expense('', 0, null, {name: 'Przelew', icon: '', matches: []}, 'expense', '', '');\n    expense.recipientName = this.data.target.name + ' ' + this.data.target.surname;\n    expense.name = this.paymentModel.name;\n    expense.money = this.paymentModel.money;\n    expense.date = this.paymentModel.date;\n    expense.type = 'expense';\n    expense.status = 'Waiting';\n    this.user.budget.expense.push(expense);\n\n    this.paymentModel.type = 'income';\n    this.paymentModel.senderId = this.user._id;\n    this.paymentModel.senderName = this.data.senderName;\n\n    if (this.data.type === 'user') {\n\n      if ((this.user.settings.isBudgetNegativeValueAllowed === false && this.user.budget.money - this.paymentModel.money < 0 )\n          || this.data.target.settings.allowReceivingTransfers === false) {\n            this.dialogRef.close(false);\n      }\n\n      this.data.target.budget.income.push(this.paymentModel);\n      if (!this.data.target.awaitingPaymentsToAccept) { this.data.target.awaitingPaymentsToAccept = 1; }\n      else { this.data.target.awaitingPaymentsToAccept++; }\n\n      this.userService.sendMoney(this.user._id, expense, this.data.target._id, this.paymentModel).subscribe();\n    }\n    else {\n      this.data.target.firmBudget.income.push(this.paymentModel);\n      this.firmService.editFirm(this.data.target._id, this.data.target).subscribe();\n    }\n    this.dialogRef.close(true);\n  }\n\n}\n","<form class=\"send-money-form\" #SendMoneyForm=\"ngForm\">\n    <h2 class=\"title\">Przelew</h2>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Tytuł</mat-label>\n        <input matInput class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"paymentModel.name\" #name=\"ngModel\" required>\n        <!-- <div *ngIf=\"name.errors && name.touched\">\n            <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Ilość pieniędzy</mat-label>\n        <input matInput class=\"form-control\" type=\"number\" min=\"0\" name=\"money\" [(ngModel)]=\"paymentModel.money\" #money=\"ngModel\" required>\n        <!-- <div *ngIf=\"name.errors && name.touched\">\n            <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n    </mat-form-field>\n\n    <mat-form-field class=\"form-group\">\n        <mat-label>Wiadomość</mat-label>\n        <textarea matInput class=\"form-control\" name=\"message\" [(ngModel)]=\"paymentModel.message\" #money=\"ngModel\"></textarea>\n        <!-- <div *ngIf=\"name.errors && name.touched\">\n            <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n            <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n        </div> -->\n    </mat-form-field>\n    <button mat-button class=\"btn-success\" type=\"button\" mat-dialog-close [disabled]=\"SendMoneyForm.form.invalid\" (click)=\"sendPayment()\">Wykonaj</button>\n    \n</form>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-show-account-change-details',\n  templateUrl: './show-account-change-details.component.html',\n  styleUrls: ['./show-account-change-details.component.scss']\n})\nexport class ShowAccountChangeDetailsComponent implements OnInit {\n\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"show-account-changes-container\">\n    <p><span class=\"title\">Tytuł:</span> {{data?.data?.name || 'Brak tytułu'}}</p>\n    <p><span class=\"title\">Ilość pieniędzy:</span> {{data?.data?.money | currency:' '}}zł</p>\n    <p *ngIf=\"data.data.senderName\"><span class=\"title\">Nadawca:</span> {{data?.data?.senderName}}</p>\n    <p *ngIf=\"!data.data.senderName\"><span class=\"title\">Nadawca:</span> Przelew własny</p>\n    <p><span class=\"title\">Data:</span> {{data?.data?.date | date:'shortDate'}}</p>\n    <p><span class=\"title\">Kategoria:</span> {{data?.data?.category?.name || 'Brak'}}</p>\n    <p><span class=\"title\">Status:</span> {{data?.data?.status == 'Waiting'? 'W trakcie' : 'Zaakceptowane'}}</p>\n    <p><span class=\"title\">Wiadomość:</span> {{data?.data?.message || 'Brak wiadomości'}}</p>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-show-new-password-modal',\n  templateUrl: './show-new-password-modal.component.html',\n  styleUrls: ['./show-new-password-modal.component.scss']\n})\nexport class ShowNewPasswordModalComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any, private snackBar: MatSnackBar, private userService: UserService) { }\n\n  ngOnInit(): void {\n  }\n\n  copyToClipboard() {\n\n    this.userService.playNotificationsSound();\n    this.snackBar.open('Skopiowano hasło do schowka', 'OK', {\n      duration: 5000,\n      horizontalPosition: 'right',\n      panelClass: ['snackbar-success']\n    })\n  }\n\n}\n","<div class=\"show-new-password-container\">\n    <textarea readonly class=\"password\" id=\"password\"> {{data.password}} </textarea>\n    <p class=\"notification\">Nowe hasło zostało automatycznie wygenerowane</p>\n    <mat-icon [cdkCopyToClipboard]=\"data.password\" class=\"copy\" (click)=\"copyToClipboard()\">content_copy</mat-icon>\n    <button mat-raised-button mat-dialog-close class=\"close-button\">OK</button>\n</div>\n\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-unblock-user-modal',\n  templateUrl: './unblock-user-modal.component.html',\n  styleUrls: ['./unblock-user-modal.component.scss']\n})\nexport class UnblockUserModalComponent implements OnInit {\n\n  blockedUsersId = [];\n  blockedUsers = [];\n  user;\n\n  constructor(private userService: UserService, @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n    this.refreshList();\n  }\n\n  refreshList() {\n    this.userService.getUser(this.data.userId).subscribe(res => {\n      this.blockedUsersId = res.disabledUser;\n      this.user = res;\n\n      this.blockedUsersId.map(id => {\n        this.userService.getUser(id).subscribe(res => {\n          this.blockedUsers.push(res);\n        })\n      })\n    })\n  }\n\n  remove(user) {\n    this.user.disabledUser = this.user.disabledUser.filter(u => {\n      if (u != user._id) return u;\n    })\n\n    this.userService.editUser(this.user._id, this.user).subscribe(() => {\n      this.refreshList();\n    });\n  }\n\n}\n","<div class=\"unblock-user-container\">\n    <h2 class=\"title\"> Zablokowani użytkownicy </h2>\n\n    <mat-list class=\"list\">\n        <mat-list-item class=\"list-item\" *ngFor=\"let user of blockedUsers\"> \n            <span>{{user.name}} {{user.surname}} </span>\n            <button class=\"delete-button\" (click)=\"remove(user)\" mat-raised-button><mat-icon>delete</mat-icon> </button>\n        </mat-list-item>\n    </mat-list>\n\n    <button mat-raised-button class=\"close-button\" mat-dialog-close>Zamknij</button>\n</div>\n\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Category } from 'src/app/models/category';\n\n@Pipe({\n  name: 'budgetListPipe'\n})\nexport class BudgetListPipePipe implements PipeTransform {\n\n  transform(items: any[], searchedCategory: Category[], searchedName: string = ''): any[] {\n    if (!items) return [];\n    if (!searchedName) {\n      if (searchedCategory == null) return items;\n      if (searchedCategory.length == 0) return items;\n    }\n\n\n    if (searchedName) searchedName = searchedName.toLowerCase();\n\n    let result = [];\n\n    items.filter(item => {\n      //console.log(item);\n      if (searchedCategory != null) {\n        if (searchedCategory.length == 0) {\n          if (item.name.toLowerCase().includes(searchedName)) {\n            result.push(item);\n          }\n        }\n        else {\n          searchedCategory.map(category => {\n            if (searchedName.trim()!='') {\n              if (category.name == item.category.name && item.name.toLowerCase().includes(searchedName)) {\n                result.push(item);\n              }\n            }\n            else {\n              if (category.name == item.category.name ) {\n                result.push(item);\n              }\n            }\n          })\n        }\n      }\n      else {\n          if (item.name.toLowerCase().includes(searchedName)) {\n            result.push(item);\n          }\n      }\n      \n    })\n\n    result = [...new Set(result)];\n\n    return result;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'moneyTransferPipe'\n})\nexport class MoneyTransferPipePipe implements PipeTransform {\n\n  transform(items: any[], searchedText, type): any[] {\n    if (!items) return [];\n    if (!searchedText) return items;\n\n    searchedText = searchedText.toLowerCase();\n\n    if (type == 'users') {\n      return items.filter(item => {\n        let fullname = item.name.toLowerCase() + ' ' + item.surname.toLowerCase();\n        return fullname.includes(searchedText);\n      })\n    }\n    else {\n      return items.filter(item => {\n        return item.name.toLowerCase().includes(searchedText);\n      })\n    }\n\n\n  }\n\n}\n","import { Component, OnInit, Input, OnDestroy, OnChanges, SimpleChange, SimpleChanges} from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { UserService } from 'src/app/services/user.service';\nimport { EventEmitterService } from 'src/app/services/event-emitter.service';\nimport { Router, NavigationEnd } from '@angular/router';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent implements OnInit, OnDestroy {\n\n  userId: string = localStorage.getItem('user');\n  user;\n  isHandset: Observable<BreakpointState> = this.breakpointObserver.observe(Breakpoints.Handset);\n  moneyTransferBadge: number;\n  @Input() isAdminLoggedIn = false;\n  @Input() shouldRefresh = false;\n  subscription: any;\n\n  constructor(private breakpointObserver: BreakpointObserver, private userService: UserService,\n              private eventEmitterService: EventEmitterService, private router: Router) {\n    this.router.routeReuseStrategy.shouldReuseRoute = () => {\n      return false;\n    };\n    this.subscription = this.router.events.subscribe((e) => {\n      if (e instanceof NavigationEnd) {\n        this.router.navigated = false;\n      }\n    });\n   }\n\n  ngOnInit(): void {\n    this.refreshList();\n\n    if (this.eventEmitterService.subscription === undefined) {\n      this.eventEmitterService.subscription = this.eventEmitterService.invokeSidenavComponentFunction.subscribe(() => {\n        this.refreshList();\n      });\n    }\n  }\n\n  refreshList() {\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n      this.moneyTransferBadge = res.awaitingPaymentsToAccept;\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n}\n","<mat-sidenav-container>\n    <mat-sidenav #drawer [ngClass]=\"{hidden: !(isHandset | async)!.matches}\" fixedInViewport=\"false\" \n    [attr.role]=\"isHandset ? 'navigation' : 'navigation'\" [mode]=\"(isHandset | async)!.matches ? 'side' : 'side'\"\n    [opened]=\"!(isHandset | async)!.matches\">\n        <mat-nav-list *ngIf=\"!isAdminLoggedIn\">\n\n            <div class=\"sidemenu--title\" routerLink=\"/przeglad\">\n                <img class=\"logo\" src=\"../../../assets/images/logo.png\" alt=\"logo\">\n            </div>\n\n            <mat-divider></mat-divider>\n\n            <a class=\"list-item\" mat-list-item routerLink=\"/przeglad\">\n                <mat-icon>person</mat-icon>\n                <p class=\"list-item--text\">Przegląd</p>\n            </a>\n            <a class=\"list-item\" mat-list-item routerLink=\"/uzytkownik-wykresy\">\n                <mat-icon>show_chart</mat-icon>\n                <p class=\"list-item--text\">Wykresy</p>\n            </a>\n            <a class=\"list-item\" mat-list-item routerLink=\"/konto\">\n                <mat-icon>account_balance</mat-icon>\n                <p class=\"list-item--text\">Konto</p>\n            </a>\n            <a class=\"list-item\" mat-list-item routerLink=\"/przelew\">\n                <mat-icon>payment</mat-icon>\n                <p class=\"list-item--text\" [matBadge]=\"moneyTransferBadge\" [matBadgeHidden]=\"moneyTransferBadge==0\" matBadgeSize=\"small\" matBadgeOverlap=\"false\">Przelew</p>\n            </a>\n\n            <mat-divider></mat-divider>\n\n            <a class=\"list-item\" mat-list-item routerLink=\"/firma\">\n                <mat-icon>business</mat-icon>\n                <p class=\"list-item--text\">Firma</p>\n            </a>\n            <span *ngIf=\"user?.firmId\" >\n                <a class=\"list-item\" mat-list-item routerLink=\"/firma-konto\">\n                    <mat-icon>account_tree</mat-icon>\n                    <p class=\"list-item--text\">Konto indywidualne</p>\n                </a>\n                <a class=\"list-item\" mat-list-item routerLink=\"/firma-wykresy\">\n                    <mat-icon>bar_chart</mat-icon>\n                    <p class=\"list-item--text\">Wykresy</p>\n                </a>\n                <a class=\"list-item\" mat-list-item routerLink=\"/chat\">\n                    <mat-icon>chat</mat-icon>\n                    <p class=\"list-item--text\">Czat</p>\n                </a>\n                <a class=\"list-item\" mat-list-item routerLink=\"/przelew-firma\">\n                    <mat-icon>local_atm</mat-icon>\n                    <p class=\"list-item--text\">Przelew</p>\n                </a>\n                <a class=\"list-item\" mat-list-item routerLink=\"/zarzadzaj-firma\">\n                    <mat-icon>build</mat-icon>\n                    <p class=\"list-item--text\">Zarządzaj firmą</p>\n                </a>\n            </span>\n            <mat-divider></mat-divider>\n\n            <a class=\"list-item\" mat-list-item routerLink=\"/ustawienia\">\n                <mat-icon>settings</mat-icon>\n                <p class=\"list-item--text\">Ustawienia</p>\n            </a>\n\n            <a class=\"list-item\" mat-list-item routerLink=\"/pomoc\">\n                <mat-icon>help</mat-icon>\n                <p class=\"list-item--text\">Pomoc</p>\n            </a>\n        </mat-nav-list>\n\n        <mat-nav-list *ngIf=\"isAdminLoggedIn\">\n            \n            <div class=\"sidemenu--title\" routerLink=\"/admin-panel\">\n                <img class=\"logo\" src=\"../../../assets/images/logo.png\" alt=\"logo\">\n            </div>\n\n            <mat-divider></mat-divider>\n\n            <a class=\"list-item\" mat-list-item routerLink=\"/admin-panel-users\">\n                <mat-icon>person</mat-icon>\n                <p class=\"list-item--text\">Użytkownicy</p>\n            </a>\n\n            <a class=\"list-item\" mat-list-item routerLink=\"/admin-panel-messages\">\n                <mat-icon>email</mat-icon>\n                <p class=\"list-item--text\">Wiadomości</p>\n            </a>\n\n            <a class=\"list-item\" mat-list-item routerLink=\"/admin-panel-categories\">\n                <mat-icon>category</mat-icon>\n                <p class=\"list-item--text\">Kategorie</p>\n            </a>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content>\n        <mat-toolbar>\n            <button class=\"menu-button\" mat-flat-button type=\"button\" aria-label=\"Toggle sidenav\" (click)=\"drawer.toggle()\" *ngIf=\"(isHandset | async)!.matches\">\n                <mat-icon class=\"arrow\" >keyboard_arrow_right</mat-icon>\n            </button>\n        </mat-toolbar>\n        <router-outlet></router-outlet>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnInit, OnChanges, SimpleChange, SimpleChanges, Input } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { ChartService } from 'src/app/services/chart.service';\n\n@Component({\n  selector: 'app-vertical-bar-chart-incomes-expenses',\n  templateUrl: './vertical-bar-chart-incomes-expenses.component.html',\n  styleUrls: ['./vertical-bar-chart-incomes-expenses.component.scss']\n})\nexport class VerticalBarChartIncomesExpensesComponent implements OnChanges, OnInit {\n\n  userId = localStorage.getItem('user');\n  user;\n  chartData: any;\n  view: any[] = [500,300];\n  @Input() chartDate: Date = new Date();\n  @Input() chartType: string;\n  monthName = this.chartService.getMonthName(this.chartDate.getMonth());\n\n  showLabels: boolean = true;\n  animations: boolean = true;\n  xAxis: boolean = false;\n  yAxis: boolean = true;\n  showYAxisLabel: boolean = true;\n  showXAxisLabel: boolean = false;\n  yAxisLabel: string = 'Ilość pieniędzy';\n  showYAxis: boolean = true;\n  showXAxis: boolean = false;\n  gradient: boolean = false;\n  colorScheme = {\n    domain: ['green', 'red']\n  }\n\n  constructor(private userService: UserService, private chartService: ChartService) { }\n\n  ngOnInit(): void {\n    this.userService.getUser(this.userId).subscribe(\n      res => {\n        this.user = res;\n        if (this.chartType == 'user') {\n          this.chartService.getCurrentMonthVerticalIncomeExpenseChart(this.user._id, this.chartDate.getMonth().toString()).subscribe(res => {\n            this.chartData = res;\n          })\n        }\n        else if (this.chartType == 'firm') {\n          this.chartService.getFirmCurrentMonthVerticalIncomeExpenseChart(this.user.firmId, this.chartDate.getMonth().toString()).subscribe(res => {\n            this.chartData = res;\n          })\n          \n        }}),\n      error => console.error(error)\n  }\n\n  getChart(month: string) {\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n      if (this.chartType == 'user') {\n        this.chartService.getCurrentMonthVerticalIncomeExpenseChart(this.user._id, month).subscribe(res => {\n          this.chartData = res;\n        })\n      }\n      else if (this.chartType == 'firm') {\n       \n        this.chartService.getFirmCurrentMonthVerticalIncomeExpenseChart(this.user.firmId, month).subscribe(res => {\n          this.chartData = res;\n        })\n      }\n    },\n    error => console.error(error))\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.monthName = this.chartService.getMonthName(this.chartDate.getMonth());\n    this.getChart(this.chartDate.getMonth().toString());\n  }\n\n}\n","<div class=\"chart-bar-vertical-container\">\n    <h2 class=\"title\">Ilość dochodów i wydatków - {{monthName}}</h2>\n    <ngx-charts-bar-vertical\n    [view]=\"view\"\n    [results]=\"chartData\"\n    [gradient]=\"gradient\"\n    [xAxis]=\"showXAxis\"\n    [yAxis]=\"showYAxis\"\n    [showXAxisLabel]=\"showXAxisLabel\"\n    [showYAxisLabel]=\"showYAxisLabel\"\n    [yAxisLabel]=\"yAxisLabel\"\n    [scheme]=\"colorScheme\" >\n</ngx-charts-bar-vertical>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router, private authService: AuthService) {}\n\n  canActivate(): boolean {\n    if (!this.authService.isAuthenticated()) {\n      this.router.navigate(['/logowanie']);\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot} from '@angular/router';\nimport decode from 'jwt-decode';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuardService implements CanActivate {\n\n  constructor(public authService: AuthService, public router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot): boolean {\n\n    if (!localStorage.getItem('token')) {\n      this.router.navigate(['/logowanie']);\n      return false;\n    }\n\n    const token = localStorage.getItem('token');\n    const tokenPayload = decode(token);\n\n    if (!this.authService.isAuthenticated() || tokenPayload.admin !== true) {\n      this.router.navigate(['/logowanie']);\n      return false;\n    }\n    return true;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { Budget } from 'src/app/models/budget';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AddBudgetGoalModalComponent } from 'src/app/components/modals/add-budget-goal-modal/add-budget-goal-modal.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { FormControl } from '@angular/forms';\nimport { ShowAccountChangeDetailsComponent } from 'src/app/components/modals/show-account-change-details/show-account-change-details.component';\nimport { AddMoneyToGoalModalComponent } from 'src/app/components/modals/add-money-to-goal-modal/add-money-to-goal-modal.component';\nimport { EditGoalModalComponent } from 'src/app/components/modals/edit-goal-modal/edit-goal-modal.component';\nimport { DeleteGoalModalComponent } from 'src/app/components/modals/delete-goal-modal/delete-goal-modal.component';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.scss']\n})\nexport class AccountComponent implements OnInit {\n\n  user;\n  userId;\n  accountChangesContainer: any;\n  categories;\n  category;\n  selectedCategories = new FormControl();\n  name;\n  checkboxes = {\n    incomes: true,\n    expenses: true\n  };\n  currentDate;\n  currentMonth;\n  budgetGoals;\n  completedGoals;\n\n\n  constructor(private userService: UserService, private dialog: MatDialog, private snackBar: MatSnackBar,\n              private categoryService: CategoryService) { }\n\n  ngOnInit(): void {\n    this.userId = localStorage.getItem('user');\n    this.currentDate = new Date();\n    this.currentMonth = this.currentDate.getMonth();\n    this.refreshList(this.currentMonth);\n    this.categoryService.getAllCategories().subscribe(res => {\n      this.categories = res;\n    });\n  }\n\n  refreshList(month) {\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n      if (!res.budget) { this.user.budget = new Budget(null, [], []); }\n      this.accountChangesContainer = [...res.budget.income, ...res.budget.expense];\n      this.accountChangesContainer = this.accountChangesContainer.filter(change => {\n        return (new Date(change.date).getMonth() === month);\n      });\n      this.accountChangesContainer = this.accountChangesContainer.sort((a, b) => Date.parse(b.date) - Date.parse(a.date) );\n    });\n\n    this.refreshGoals();\n  }\n\n  previousMonth() {\n    this.currentDate = new Date(this.currentDate.setMonth(this.currentDate.getMonth() - 1));\n    this.currentMonth--;\n    this.refreshList(this.currentMonth);\n  }\n\n  nextMonth() {\n    this.currentDate = new Date(this.currentDate.setMonth(this.currentDate.getMonth() + 1));\n    this.currentMonth++;\n    this.refreshList(this.currentMonth);\n  }\n\n  addBudgetGoal() {\n    const dialogRef = this.dialog.open(AddBudgetGoalModalComponent, {\n      width: '400px',\n      height: '300px',\n      data: {\n        userId: this.userId\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(res => {\n      if (res === true) {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Pomyślnie dodano kategorie', 'OK', {\n          duration: 5000,\n          horizontalPosition: 'right',\n          panelClass: ['snackbar-success']\n        });\n        this.refreshList(new Date().getMonth());\n    }\n    });\n  }\n\n  showDetails(data) {\n    this.dialog.open(ShowAccountChangeDetailsComponent, {\n      data: {\n        data\n      },\n      width: '500px'\n    });\n  }\n\n  refreshGoals() {\n    this.userService.getUserBudgetGoals(this.userId).subscribe(res => {\n      this.budgetGoals = res;\n      this.completedGoals = this.budgetGoals.filter(goal => {\n        if (goal.isCompleted) {\n          return goal;\n        }\n      });\n    });\n  }\n\n  addMoney(goal) {\n    const ref = this.dialog.open(AddMoneyToGoalModalComponent, {\n      data: {\n        goal\n      }\n    });\n\n    ref.afterClosed().subscribe(res => {\n      if (res === true) {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Pomyślnie dodano kategorie', 'OK', {\n          duration: 5000,\n          horizontalPosition: 'right',\n          panelClass: ['snackbar-success']\n        });\n        this.refreshGoals();\n      }\n    });\n  }\n\n  editGoal(goal) {\n    const ref = this.dialog.open(EditGoalModalComponent, {\n      data: {\n        goal\n      }\n    });\n\n    ref.afterClosed().subscribe(res => {\n      if (res === true) {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Pomyślnie uaktualniono cel', 'OK', {\n          duration: 5000,\n          horizontalPosition: 'right',\n          panelClass: ['snackbar-success']\n        });\n        this.refreshGoals();\n      }\n    });\n  }\n\n  deleteGoal(goal) {\n    const ref = this.dialog.open(DeleteGoalModalComponent, {\n      data: {\n        goal\n      }\n    });\n\n    ref.afterClosed().subscribe(res => {\n      if (res === true) {\n        this.userService.deleteGoal(this.userId, goal).subscribe(_ => {\n          this.userService.playNotificationsSound();\n          this.snackBar.open('Pomyślnie usunięto cel', 'OK', {\n            duration: 5000,\n            horizontalPosition: 'right',\n            panelClass: ['snackbar-success']\n          });\n          this.refreshGoals();\n        });\n      }\n    });\n  }\n}\n","<app-header pageName=\"Konto\"></app-header>\n<app-sidenav></app-sidenav>\n\n<div class=\"account-container\">\n    <mat-tab-group mat-align-tabs=\"center\">\n        <mat-tab class=\"account-history\" label=\"Historia konta\">\n            <div class=\"filters-container\">\n                <div class=\"flex-container inputs\">\n                    <mat-form-field class=\"form-group\">\n                        <mat-label>Kategoria</mat-label>\n                        <mat-select [formControl]=\"selectedCategories\" multiple>\n                            <mat-option *ngFor=\"let category of categories\" [value]=\"category\"> {{category.name}} </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n        \n                    <mat-form-field>\n                        <mat-label>Nazwa</mat-label>\n                        <input matInput type=\"text\" [(ngModel)]=\"name\" autocomplete=\"off\">\n                    </mat-form-field>\n                </div>\n                <div class=\"selection-container\">\n                    <div class=\"checkboxes\">\n                        <mat-checkbox color=\"primary\" [(ngModel)]=\"checkboxes.expenses\" selected>Wydatki</mat-checkbox>\n                        <mat-checkbox color=\"primary\" [(ngModel)]=\"checkboxes.incomes\" selected>Przychody</mat-checkbox>\n                    </div>\n    \n                    <mat-chip-list class=\"chips-container\" #categoryChips aria-label=\"Selected categories\">\n                        <mat-chip selected color=\"primary\" *ngFor=\"let category of selectedCategories.value\">{{category?.name}}</mat-chip>\n                    </mat-chip-list>\n                </div>\n            </div>\n        \n            <div class=\"month-container\">\n                <div class=\"arrow-left\" (click)=\"previousMonth()\"></div>\n                <div class=\"month-name\"> {{currentDate | date: 'MMMM yyyy'}} </div>\n                <div class=\"arrow-right\" (click)=\"nextMonth()\"></div>\n            </div>\n        \n            <div class=\"budget-list-container\">\n                <div class=\"budget-balance\">\n                    <p>Stan konta: <span [class]=\"user?.budget?.money > 0 ? 'font-color-green' : 'font-color-red'\">{{(user?.budget?.money || 0) | currency:' '}}zł</span> </p>\n                    <mat-divider></mat-divider>\n                </div>\n            \n                <div class=\"no-account-changes\" *ngIf=\"accountChangesContainer?.length == 0\">\n                    <p>Brak danych</p>\n                </div>\n        \n                <mat-list *ngFor=\"let accountChange of accountChangesContainer | budgetListPipe:selectedCategories.value:name\" class=\"budget-changes-list\">\n                    <mat-list-item (click)=\"showDetails(accountChange)\" *ngIf=\"accountChange.type == 'income' && checkboxes.incomes == true || accountChange.type == 'expense' && checkboxes.expenses == true\">\n                        <mat-divider></mat-divider>\n                        <mat-icon mat-list-icon>credit_card</mat-icon>\n                        <div mat-line> {{accountChange.name}} <span class=\"align-right\" [class]=\"accountChange.type=='income' ? 'income': 'expense'\"> {{accountChange.money | currency: ' '}}zł</span>  </div>\n                        <div mat-line> {{accountChange.category.name}} <span class=\"align-right\">{{accountChange.date | date:'dd.MM.yyyy'}}</span> </div>\n                        <span [class]=\"accountChange.type=='income' ? 'green-line' : 'red-line'\"></span>\n                    </mat-list-item>\n                </mat-list>\n            </div>\n        </mat-tab>\n        <mat-tab label=\"Cele\">\n            <div class=\"grid-container\">\n                <div class=\"goals-ongoing-container\">\n                    <p class=\"title\">Trwające cele</p>\n                    <mat-divider></mat-divider>\n                    <mat-list class=\"list\" *ngFor=\"let goal of budgetGoals\">\n                        <mat-list-item class=\"list-item\" *ngIf=\"!goal.isCompleted\">\n                            <div mat-line class=\"header\">\n                                <span class=\"header-small\">\n                                    <mat-icon>emoji_events</mat-icon>\n                                    <span>{{goal.name}}</span>\n                                </span>\n                                <span>{{goal.currentState | currency: ' '}}/{{goal.goal | currency:' '}}zł</span>\n                            </div>\n                            <div mat-line><mat-progress-bar class=\"progress-bar\" mode=\"determinate\" [value]=\"goal.progress\"></mat-progress-bar></div>\n                            <button class=\"add-money-button\" mat-button (click)=\"addMoney(goal)\">+</button>\n                            <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\n                                <mat-icon>more_vert</mat-icon>\n                            </button>\n                            <mat-menu #menu=\"matMenu\">\n                                <button mat-menu-item (click)=\"editGoal(goal)\">\n                                  <mat-icon>edit</mat-icon>\n                                  <span>Edytuj</span>\n                                </button>\n                                <button mat-menu-item (click)=\"deleteGoal(goal)\">\n                                  <mat-icon>delete</mat-icon>\n                                  <span>Usuń</span>\n                                </button>\n                              </mat-menu>\n                            <mat-divider></mat-divider>\n                        </mat-list-item>\n                    </mat-list>\n                </div>\n                <div class=\"goals-completed-container\">\n                    <p class=\"title\">Ukończone cele</p>\n                    <mat-divider></mat-divider>\n                    <mat-list class=\"list\" *ngFor=\"let goal of completedGoals\">\n                        <mat-list-item class=\"list-item\">\n                            <div mat-line class=\"header\">\n                                <span class=\"header-small\">\n                                    <mat-icon>emoji_events</mat-icon>\n                                    <span>{{goal.name}}</span>\n                                </span>\n                                <span>{{goal.currentState | currency: ' '}}/{{goal.goal | currency:' '}}zł</span>\n                                <mat-icon class=\"complete-icon\">check_circle</mat-icon>\n                            </div>\n                        </mat-list-item>\n                    </mat-list>\n                </div>\n            </div>\n            <button mat-fab class=\"button-create\" (click)=\"addBudgetGoal()\"><mat-icon>add</mat-icon></button>\n        </mat-tab>\n    </mat-tab-group>\n</div>\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AddCategoryModalComponent } from 'src/app/components/modals/add-category-modal/add-category-modal.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { UserService } from 'src/app/services/user.service';\nimport { EditCategoryModalComponent } from 'src/app/components/modals/edit-category-modal/edit-category-modal.component';\n\n@Component({\n  selector: 'app-admin-category',\n  templateUrl: './admin-category.component.html',\n  styleUrls: ['./admin-category.component.scss']\n})\nexport class AdminCategoryComponent implements OnInit {\n\n  categories: any = [];\n\n  constructor(private categoryService: CategoryService, private userService: UserService, private dialog: MatDialog, private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.refreshList();\n  }\n\n  refreshList() {\n    this.categoryService.getAllCategories().subscribe(res => {\n      this.categories = res;\n    })\n  }\n\n  addCategory() {\n    const ref = this.dialog.open(AddCategoryModalComponent, {\n      width: '400px',\n      height: '300px'\n    })\n\n    ref.afterClosed().subscribe(res => {\n      if (res === true) {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Pomyślnie dodano kategorie', 'OK', {\n          duration: 5000,\n          horizontalPosition: 'right',\n          panelClass: ['snackbar-success']\n        })\n        this.refreshList();\n      }\n    })\n  }\n\n  editCategory(category) {\n    let dialogRef = this.dialog.open(EditCategoryModalComponent, {\n      width: '400px',\n      height: '300px',\n      data: {\n        category: category\n      }\n    })\n\n    dialogRef.afterClosed().subscribe(res => {\n      if(res === true) {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Pomyślnie uaktualniono kategorie', 'OK', {\n        duration: 5000,\n        horizontalPosition: 'right',\n        panelClass: ['snackbar-success']\n      })\n      }\n    })\n  }\n\n  deleteCategory(category) {\n    this.categoryService.deleteCategory(category).subscribe(res => {\n      this.userService.playNotificationsSound();\n      this.snackBar.open('Pomyślnie usunięto kategorie', 'OK', {\n        duration: 5000,\n        horizontalPosition: 'right',\n        panelClass: ['snackbar-success']\n      })\n      this.refreshList();\n    })\n  }\n\n}\n","<app-header isAdminLoggedIn=\"true\" pageName=\"Admin - kategorie\"></app-header>\n<app-sidenav isAdminLoggedIn=\"true\"></app-sidenav>\n\n<div class=\"admin-category-container\">\n    <mat-tab-group class=\"tabs-container\" mat-align-tabs=\"center\">\n        <mat-tab label=\"Lista kategorii\">\n            <mat-list class=\"categories-list\" *ngFor=\"let category of categories\">\n                <mat-list-item> \n                    <mat-icon mat-list-icon> {{category.icon}} </mat-icon>   \n                    <div mat-line> {{category.name}} </div>\n                    <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"icon menu\">\n                        <mat-icon class=\"more-icon\">more_vert</mat-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <button mat-menu-item (click)=\"editCategory(category)\">\n                            <mat-icon>edit</mat-icon>\n                            <span>Edytuj</span>\n                        </button>\n                        <button mat-menu-item (click)=\"deleteCategory(category)\">\n                            <mat-icon>delete</mat-icon>\n                            <span>Usuń</span>\n                        </button>\n                    </mat-menu> \n                </mat-list-item>\n            </mat-list>\n            <button mat-fab class=\"button-create\" (click)=\"addCategory()\"><mat-icon>add</mat-icon></button>\n        </mat-tab>\n    </mat-tab-group>\n</div>\n\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin-login',\n  templateUrl: './admin-login.component.html',\n  styleUrls: ['./admin-login.component.scss']\n})\nexport class AdminLoginComponent implements OnInit {\n\n  loginModel = {email: '', password: ''};\n\n  constructor(private userService: UserService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  loginUser() {\n\n   this.userService.loginUser(this.loginModel.email, this.loginModel.password).subscribe(\n     res => {\n     localStorage.setItem('token', res.token)\n     localStorage.setItem('user', res.userId)\n     this.router.navigate(['/admin-panel']);\n   },\n   error => {\n     console.error(error);\n   })\n  }\n\n}\n","<div class=\"login-container\">\n    <form id=\"LoginForm\" class=\"login-form\" #LoginForm=\"ngForm\">\n\n        <div class=\"logo\">\n            <img src=\"../../../assets/images/logo-gray.png\" alt=\"logo\">\n        </div>\n\n        <h2 class=\"title\">Zaloguj się na konto admina</h2>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Email</mat-label>\n            <input matInput class=\"form-control\" type=\"email\" placeholder=\"email\" name=\"email\" [(ngModel)]=\"loginModel.email\" #email=\"ngModel\">\n        </mat-form-field>\n    \n        <mat-form-field class=\"form-group\">\n            <mat-label>Hasło</mat-label>\n            <input matInput class=\"form-control\" type=\"password\" placeholder=\"hasło\" name=\"password\" [(ngModel)]=\"loginModel.password\" #password=\"ngModel\">\n        </mat-form-field>\n\n        <button mat-raised-button type=\"button\" [disabled]=\"LoginForm.form.invalid\" (click)=\"loginUser()\">Zaloguj się</button>\n    \n    </form>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { OpenMailModalComponent } from 'src/app/components/modals/open-mail-modal/open-mail-modal.component';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MailService } from 'src/app/services/mail.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SendMailModalComponent } from 'src/app/components/modals/send-mail-modal/send-mail-modal.component';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-admin-messages',\n  templateUrl: './admin-messages.component.html',\n  styleUrls: ['./admin-messages.component.scss']\n})\nexport class AdminMessagesComponent implements OnInit {\n\n  userId = localStorage.getItem('user');\n  user;\n  displayedColumns = ['topic', 'message', 'senderName'];\n  dataSourceWaitingMails;\n  dataSourceinProgressMails;\n  dataSourceEndedMails;\n  waitingMails: any = [];\n  inProgressMails: any = [];\n  endedMails: any = [];\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(private mailService: MailService, private dialog: MatDialog, private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.getMails();\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n    });\n  }\n\n  getMails() {\n    this.mailService.getAllMails().subscribe(res => {\n\n      this.waitingMails = res || [];\n      this.waitingMails = this.waitingMails.filter(mail => {\n        if (mail.status === 'Oczekujące' && mail.type === 'userAsk') { return mail; }\n      });\n\n      this.inProgressMails = res;\n      this.inProgressMails = this.inProgressMails.filter(mail => {\n        if (mail.status === 'W trakcie' && mail.type === 'userAsk' && mail.recipientId === this.userId) { return mail; }\n      });\n\n      this.endedMails = res;\n      this.endedMails = this.endedMails.filter(mail => {\n        if (mail.status === 'Zakończone' && mail.type === 'userAsk') { return mail; }\n      });\n\n      this.dataSourceWaitingMails = new MatTableDataSource(this.waitingMails || []);\n      this.dataSourceWaitingMails.sort = this.sort;\n      this.dataSourceWaitingMails.paginator = this.paginator;\n\n      this.dataSourceinProgressMails = new MatTableDataSource(this.inProgressMails || []);\n      this.dataSourceinProgressMails.sort = this.sort;\n      this.dataSourceinProgressMails.paginator = this.paginator;\n\n      this.dataSourceEndedMails = new MatTableDataSource(this.endedMails || []);\n      this.dataSourceEndedMails.sort = this.sort;\n      this.dataSourceEndedMails.paginator = this.paginator;\n    });\n  }\n\n  openMail(mail, canAnswer) {\n    const ref = this.dialog.open(OpenMailModalComponent, {\n      height: '500px',\n      width: '400px',\n      data: {\n        mail,\n        isAdmin: true,\n        canAnswer\n      }\n    });\n    ref.afterClosed().subscribe(res => {\n      if (res === true) {\n        if (mail.status !== 'W trakcie') {\n          mail.status = 'W trakcie';\n          mail.recipientId = this.userId;\n          this.mailService.reserveMail(mail, this.userId).subscribe(() => {\n            this.getMails();\n          });\n        }\n        const reference = this.dialog.open(SendMailModalComponent, {\n          width: '400px',\n          height: '600px',\n          data: {\n            mail,\n            adminName: this.user.name\n          }\n        });\n\n        reference.afterClosed().subscribe(response => {\n          if (response === true) {\n            mail.status = 'Zakończone';\n            this.mailService.respondeToMail(mail).subscribe(() => {\n              this.getMails();\n            });\n          }\n        });\n      }\n    });\n  }\n}\n","<app-header [isAdminLoggedIn]=\"true\" pageName=\"Admin - wiadomości\"></app-header>\n<app-sidenav [isAdminLoggedIn]=\"true\"></app-sidenav>\n\n<div class=\"admin-messages-container\">\n    <mat-tab-group class=\"tabs-container\" mat-align-tabs=\"center\">\n        <mat-tab label=\"Oczekujące\">\n            <div>\n                <mat-paginator [length]=\"this.waitingMails?.length || 0\"\n                [pageSize]=\"5\"\n                [pageSizeOptions]=\"[3, 5, 10]\">\n                </mat-paginator>\n\n                <table mat-table [dataSource]=\"dataSourceWaitingMails\" class=\"waiting-messages-list mat-elevation-z8\">\n                \n                    <ng-container matColumnDef=\"topic\">\n                        <th mat-header-cell *matHeaderCellDef> Temat </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.topic}} </td>\n                    </ng-container>\n                \n                    <ng-container matColumnDef=\"message\">\n                        <th mat-header-cell *matHeaderCellDef> Wiadomość </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.message | slice:0:30}} </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"senderName\">\n                        <th mat-header-cell *matHeaderCellDef> Użytkownik </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.senderName}} </td>\n                    </ng-container>\n                \n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"openMail(row, true)\"></tr>\n                </table>\n            </div>\n        </mat-tab>\n        <mat-tab label=\"W trakcie\">\n            <div>\n                <mat-paginator [length]=\"this.inProgressMails?.length || 0\"\n                [pageSize]=\"5\"\n                [pageSizeOptions]=\"[3, 5, 10]\">\n                </mat-paginator>\n\n                <table mat-table [dataSource]=\"dataSourceinProgressMails\" class=\"waiting-messages-list mat-elevation-z8\">\n                \n                    <ng-container matColumnDef=\"topic\">\n                        <th mat-header-cell *matHeaderCellDef> Temat </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.topic}} </td>\n                    </ng-container>\n                \n                    <ng-container matColumnDef=\"message\">\n                        <th mat-header-cell *matHeaderCellDef> Wiadomość </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.message | slice:0:30}} </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"senderName\">\n                        <th mat-header-cell *matHeaderCellDef> Użytkownik </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.senderName}} </td>\n                    </ng-container>\n                \n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"openMail(row, true)\"></tr>\n                </table>\n            </div>\n        </mat-tab>\n        <mat-tab label=\"Zakończone\">\n            <div>\n                <mat-paginator [length]=\"this.endedMails?.length || 0\"\n                [pageSize]=\"5\"\n                [pageSizeOptions]=\"[3, 5, 10]\">\n                </mat-paginator>\n\n                <table mat-table [dataSource]=\"dataSourceEndedMails\" class=\"waiting-messages-list mat-elevation-z8\">\n                \n                    <ng-container matColumnDef=\"topic\">\n                        <th mat-header-cell *matHeaderCellDef> Temat </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.topic}} </td>\n                    </ng-container>\n                \n                    <ng-container matColumnDef=\"message\">\n                        <th mat-header-cell *matHeaderCellDef> Wiadomość </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.message | slice:0:30}} </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"senderName\">\n                        <th mat-header-cell *matHeaderCellDef> Użytkownik </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.senderName}} </td>\n                    </ng-container>\n                \n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"openMail(row, false)\"></tr>\n                </table>\n            </div>\n        </mat-tab>\n    </mat-tab-group>\n</div>\n\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.scss']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  isAdminLoggedIn = true;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header pageName=\"Panel administratora\" [isAdminLoggedIn]=\"isAdminLoggedIn\"></app-header>\n<app-sidenav [isAdminLoggedIn]=\"isAdminLoggedIn\"></app-sidenav>\n\n\n<app-footer></app-footer>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ShowNewPasswordModalComponent } from 'src/app/components/modals/show-new-password-modal/show-new-password-modal.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss']\n})\nexport class UserListComponent implements OnInit {\n\n  users;\n\n  constructor(private userService: UserService, private dialog: MatDialog, private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.userService.getUsers().subscribe(res => {\n      this.users = res;\n\n      this.users = this.users.filter(user => {\n        if (!user.admin) return user;\n      })\n    })\n  }\n\n  restartPassword(user) {\n    this.userService.restartPassword(user).subscribe(res => {\n      this.userService.playNotificationsSound();\n      this.snackBar.open('Udało się zmienić hasło', 'OK', {\n        duration: 5000,\n        horizontalPosition: 'right',\n        panelClass: ['snackbar-success']\n      })\n      this.dialog.open(ShowNewPasswordModalComponent, {\n        width: '300px',\n        height: '200px',\n        data: {\n          password: res\n        }\n      });\n    })\n  }\n\n  blockUser(user) {\n    this.userService.blockUser(user).subscribe(res => {\n      this.userService.playNotificationsSound();\n      this.snackBar.open('Udało się zablokować użytkownika', 'OK', {\n        duration: 5000,\n        horizontalPosition: 'right',\n        panelClass: ['snackbar-success']\n      })\n    })\n  }\n\n  unblockUser(user) {\n    this.userService.unblockUser(user).subscribe(res => {\n      this.userService.playNotificationsSound();\n      this.snackBar.open('Udało się odblokować użytkownika', 'OK', {\n        duration: 5000,\n        horizontalPosition: 'right',\n        panelClass: ['snackbar-success']\n      })\n    })\n  }\n\n}\n","<app-header pageName=\"Admin - lista użytkowników\"></app-header>\n<app-sidenav isAdminLoggedIn=\"true\"></app-sidenav>\n\n<div class=\"user-list-container\">\n    <mat-tab-group mat-align-tabs=\"center\">\n        <mat-tab label=\"Użytkownicy\">\n            <mat-list class=\"user-list\" *ngFor=\"let user of users\">\n                <mat-list-item class=\"user-list-item\"> \n                    <span> {{user.name}} {{user.surname}} </span>\n                    <div class=\"menu\">\n                        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"icon menu\">\n                            <mat-icon class=\"more-icon\">more_vert</mat-icon>\n                        </button>\n                        <mat-menu #menu=\"matMenu\">\n                            <button mat-menu-item (click)=\"restartPassword(user)\">\n                                <mat-icon>restore</mat-icon>\n                                <span>Zresetuj hasło</span>\n                            </button>\n                            <button *ngIf=\"!user.isUserBlocked\" mat-menu-item (click)=\"blockUser(user)\">\n                                <mat-icon>block</mat-icon>\n                                <span>Zablokuj</span>\n                            </button>\n                            <button *ngIf=\"user.isUserBlocked\" mat-menu-item (click)=\"unblockUser(user)\">\n                                <mat-icon>lock_open</mat-icon>\n                                <span>Odblokuj</span>\n                            </button>\n                        </mat-menu> \n                    </div>\n                </mat-list-item>\n            </mat-list>\n        </mat-tab>\n    </mat-tab-group>\n</div>\n\nasd\n\n<app-footer></app-footer>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { FirmService } from 'src/app/services/firm.service';\nimport { NgForm } from '@angular/forms';\nimport { WebSocketService } from 'src/app/services/web-socket.service';\nimport { ChatMessageDto } from 'src/app/models/chatMessageDto';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.scss']\n})\nexport class ChatComponent implements OnInit, OnDestroy {\n\n  userId = localStorage.getItem('user');\n  user;\n  firm;\n  chatStatus = true;\n\n  constructor(private userService: UserService, private firmService: FirmService, public webSocketService: WebSocketService) { }\n\n  ngOnInit(): void {\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n\n      this.firmService.getFirm(this.user.firmId).subscribe(response => {\n        this.firm = response;\n      });\n\n      this.openWebSocket();\n\n      this.webSocketService.event$.subscribe(data => {\n        this.changeChatStatus(data);\n      });\n    });\n  }\n\n  openWebSocket() {\n    this.webSocketService.openWebSocket();\n  }\n\n  changeChatStatus(status: boolean) {\n    this.chatStatus = status;\n    console.log(this.chatStatus);\n  }\n\n  sendMessage(sendForm: NgForm) {\n    const username = this.user.name + ' ' + this.user.surname;\n    const chatMessageDto = new ChatMessageDto(username, sendForm.value.message);\n    this.webSocketService.sendMessage(chatMessageDto, this.firm._id);\n    sendForm.controls.message.reset();\n  }\n\n  ngOnDestroy(): void {\n    this.webSocketService.closeWebSocket();\n  }\n}\n","<app-header pageName=\"Czat\" ></app-header>\n<app-sidenav></app-sidenav>\n<div class=\"chat-container\">\n    <h2 class=\"page-title\">Czat - {{firm?.name}}</h2>\n\n    <div class=\"chatroom\">\n        <div *ngIf=\"!chatStatus\" role=\"button\" (click)=\"openWebSocket()\" class=\"chat-closed-information\">Czat nie jest załadowany poprawnie, kliknik tutaj, aby załadować ponownie</div>\n        <ul id=\"chatList\" class=\"chat-list\">\n            <li class=\"chat-list-item\" *ngFor=\"let chatMessage of webSocketService.chatMessages\">\n                <div class=\"username\"><strong>{{chatMessage.user}}:</strong></div>\n                <div class=\"message\">{{chatMessage.message}}</div>\n            </li>\n        </ul>\n        <form class=\"chat-form\" (ngSubmit)=\"sendMessage(sendForm)\" #sendForm=\"ngForm\">\n            <input class=\"message\" type=\"text\" name=\"message\" id=\"message\" placeholder=\"Napisz wiadomość...\" ngModel required>\n            <button [disabled]=\"!chatStatus\" mat-raised-button class=\"send-button\" type=\"submit\"><mat-icon>send</mat-icon></button>\n        </form>\n    </div>\n\n</div>\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { ChartService } from 'src/app/services/chart.service';\n\n@Component({\n  selector: 'app-firm-charts',\n  templateUrl: './firm-charts.component.html',\n  styleUrls: ['./firm-charts.component.scss']\n})\nexport class FirmChartsComponent implements OnInit {\n\n  chartType = \"firm\";\n  chartDate = [new Date(), new Date()];\n\n  constructor(private chartService: ChartService) { }\n\n  ngOnInit(): void {\n  }\n\n  previousMonth(chart: number) {\n    this.chartDate[chart] = new Date(this.chartDate[chart].setMonth(this.chartDate[chart].getMonth()-1));\n  }\n\n  nextMonth(chart: number) {\n    this.chartDate[chart] = new Date(this.chartDate[chart].setMonth(this.chartDate[chart].getMonth()+1));\n  }\n\n}\n","<app-header pageName=\"Wykresy firmy\"></app-header>\n<app-sidenav></app-sidenav>\n<div class=\"firm-charts-container\">\n    <div class=\"container-small\">\n        <div class=\"month-container\">\n            <div class=\"arrow-left\" (click)=\"previousMonth(0)\"></div>\n            <div class=\"month-name\"> {{chartDate[0] | date: 'MMMM yyyy'}} </div>\n            <div class=\"arrow-right\" (click)=\"nextMonth(0)\"></div>\n        </div>\n        <app-budget-chart [chartType]=\"chartType\" [chartDate]=\"chartDate[0]\"></app-budget-chart>\n    </div>\n    <div class=\"container-small\">\n        <div class=\"month-container\">\n            <div class=\"arrow-left\" (click)=\"previousMonth(1)\"></div>\n            <div class=\"month-name\"> {{chartDate[1] | date: 'MMMM yyyy'}} </div>\n            <div class=\"arrow-right\" (click)=\"nextMonth(1)\"></div>\n        </div>\n        <app-vertical-bar-chart-incomes-expenses [chartType]=\"chartType\" [chartDate]=\"chartDate[1]\"></app-vertical-bar-chart-incomes-expenses>\n    </div>\n</div>\n<app-footer></app-footer>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-firm-user-budget',\n  templateUrl: './firm-user-budget.component.html',\n  styleUrls: ['./firm-user-budget.component.scss']\n})\nexport class FirmUserBudgetComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header pageName=\"Twoje konto w firmie\"></app-header>\n<div class=\"container\">\n    <app-sidenav></app-sidenav>\n    <app-budget-list type=\"firm\"></app-budget-list>\n</div>\n<app-footer></app-footer>\n\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FirmSearchModalComponent } from 'src/app/components/modals/firm-search-modal/firm-search-modal.component';\nimport { FirmCreateModalComponent } from 'src/app/components/modals/firm-create-modal/firm-create-modal.component';\nimport { FirmService } from 'src/app/services/firm.service';\nimport { ChartService } from 'src/app/services/chart.service';\n\n@Component({\n  selector: 'app-firm',\n  templateUrl: './firm.component.html',\n  styleUrls: ['./firm.component.scss']\n})\nexport class FirmComponent implements OnInit {\n\n  chartType = 'firm';\n  userId = localStorage.getItem('user');\n  user;\n  firm;\n  sidenavRefresh = false;\n\n  constructor(private userService: UserService, private dialog: MatDialog, private firmService: FirmService,\n              private chartService: ChartService) { }\n\n  ngOnInit(): void {\n    this.refresh();\n  }\n\n  refresh() {\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n\n      this.firmService.getFirm(this.user.firmId).subscribe(response => {\n        this.firm = response;\n      });\n    });\n  }\n\n  searchFirm() {\n    const ref = this.dialog.open(FirmSearchModalComponent);\n    ref.afterClosed().subscribe(_ => {\n      this.refresh();\n    });\n  }\n\n  createFirm() {\n    const ref = this.dialog.open(FirmCreateModalComponent);\n    ref.afterClosed().subscribe(_ => {\n      this.refresh();\n      this.sidenavRefresh = !this.sidenavRefresh;\n    });\n  }\n\n}\n","<app-header pageName=\"Firma\"></app-header>\n<div class=\"firm-container\">\n    <app-sidenav shouldRefresh=\"sidenavRefresh\"></app-sidenav>\n    <div class=\"no-firm\" *ngIf=\"!user?.firmId\">\n        <p>Obecnie nie jesteś członkiem żadnej firmy!</p>\n        <div class=\"firm-button-container\">\n            <button mat-raised-button type=\"button\" (click)=\"searchFirm()\">Poszukaj firmy</button>\n            <button mat-raised-button type=\"button\" (click)=\"createFirm()\">Utwórz firme</button>\n        </div>\n    </div>\n    <div class=\"waiting-for-accept\" *ngIf=\"user?.firmStatus == 0 && user?.firmId\">\n        <p>Twoje zaproszenie do firmy {{firm?.name}} oczekuję na akceptacje</p>\n    </div>\n    <div class=\"firm\" *ngIf=\"user?.firmId && user?.firmStatus > 0\">\n        <div class=\"firm-header\">\n            <h2 class=\"title\"> {{firm?.name}} </h2>\n            <p>&bull;</p>\n            <p class=\"manage-button\" routerLink=\"/zarzadzaj-firma\">Zarządzaj</p>\n        </div>\n        <div class=\"firm-main-content\">\n            <div class=\"grid-container\">\n                <app-firm-budget-list></app-firm-budget-list>\n                <app-budget-chart [chartType]=\"chartType\"></app-budget-chart>\n            </div>\n            <app-firm-users-list class=\"users-list\"></app-firm-users-list>\n        </div>\n    </div>\n</div>\n<app-footer></app-footer>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Mail } from '../../models/mail';\nimport { UserService } from 'src/app/services/user.service';\nimport { MailService } from 'src/app/services/mail.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OpenMailModalComponent } from '../../components/modals/open-mail-modal/open-mail-modal.component';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\n\n@Component({\n  selector: 'app-helpdesk',\n  templateUrl: './helpdesk.component.html',\n  styleUrls: ['./helpdesk.component.scss']\n})\nexport class HelpdeskComponent implements OnInit {\n\n  userId = localStorage.getItem('user');\n  user;\n  mailModel = new Mail('', '', '', '', '', '', '');\n\n  sendedMails: any = [];\n  displayedColumnsSendedMails = ['topic', 'message', 'status'];\n  dataSourceSendedMails;\n\n  receivedMails: any = [];\n  displayedColumnsReceivedMails = ['topic', 'message', 'senderName'];\n  dataSourceReceivedMails;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(private userService: UserService, private mailService: MailService, private snackBar: MatSnackBar,\n              public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n    });\n    this.getSendedMessages();\n    this.getReceivedMessages();\n}\n\n  getSendedMessages() {\n    this.mailService.getSendedMails(this.userId).subscribe(res => {\n      this.sendedMails = res || [];\n      this.dataSourceSendedMails = new MatTableDataSource(this.sendedMails || []);\n      this.dataSourceSendedMails.sort = this.sort;\n      this.dataSourceSendedMails.paginator = this.paginator;\n    });\n  }\n\n  getReceivedMessages() {\n    this.mailService.getReceivedMails(this.userId).subscribe(res => {\n      this.receivedMails = res || [];\n      this.receivedMails = this.receivedMails.filter(mail => {\n        if (mail.type === 'adminResponse') { return mail; }\n      });\n      this.dataSourceReceivedMails = new MatTableDataSource(this.receivedMails || []);\n      this.dataSourceReceivedMails.sort = this.sort;\n      this.dataSourceReceivedMails.paginator = this.paginator;\n    });\n  }\n\n  sendMessage() {\n    const username = this.user.name + ' ' + this.user.surname;\n    this.mailModel.senderName = username;\n    this.mailModel.senderId = this.userId;\n    this.mailModel.type = 'userAsk';\n    this.mailService.sendMessage(this.mailModel).subscribe(\n      res => {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Wiadomość została wysłana', 'OK', {\n          duration: 5000,\n          horizontalPosition: 'right',\n          panelClass: ['snackbar-success']\n        });\n        this.mailModel.topic = '';\n        this.mailModel.message = '';\n        this.getSendedMessages();\n    });\n  }\n\n  openMail(mail) {\n    const ref = this.dialog.open(OpenMailModalComponent, {\n      height: '500px',\n      width: '600px',\n      data: {\n        mail,\n        isAdmin: false\n      }\n    });\n    ref.afterClosed().subscribe(() => {\n      this.getSendedMessages();\n    });\n  }\n\n}\n","<app-header pageName=\"Pomoc\"></app-header>\n<app-sidenav></app-sidenav>\n\n<div class=\"helpdesk-container\">\n\n    <mat-tab-group class=\"tabs-container\" mat-align-tabs=\"center\">\n        <mat-tab label=\"Wyślij wiadomość\">\n            <form class=\"helpdesk-form\" #HelpdeskForm=\"ngForm\">\n                <mat-form-field class=\"form-group\">\n                    <mat-label>Temat</mat-label>\n                    <input matInput class=\"form-control\" type=\"text\" name=\"topic\" [(ngModel)]=\"mailModel.topic\" #name=\"ngModel\" required>\n                    <!-- <div *ngIf=\"name.errors && name.touched\">\n                        <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n                        <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n                    </div> -->\n                </mat-form-field>\n\n                <mat-form-field class=\"form-group\">\n                    <mat-label>Opisz swój problem...</mat-label>\n                    <textarea matInput class=\"form-control textarea\" name=\"message\" [(ngModel)]=\"mailModel.message\" #name=\"ngModel\" required maxlength=\"100\"></textarea>\n                    <!-- <div *ngIf=\"name.errors && name.touched\">\n                        <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n                        <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n                    </div> -->\n                </mat-form-field>\n\n                <button mat-button class=\"btn-success\" type=\"button\" [disabled]=\"HelpdeskForm.form.invalid\" (click)=\"sendMessage()\">Wyślij</button>\n            </form>\n        </mat-tab>\n        <mat-tab label=\"Otrzymane wiadomości\">\n            <div>\n                <mat-paginator [length]=\"this.receivedMails?.length || 0\"\n                [pageSize]=\"5\"\n                [pageSizeOptions]=\"[3, 5, 10]\">\n                </mat-paginator>\n\n                <table mat-table [dataSource]=\"dataSourceReceivedMails\" class=\"sended-messeges-list mat-elevation-z8\">\n                \n                    <ng-container matColumnDef=\"topic\">\n                        <th mat-header-cell *matHeaderCellDef> Temat </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.topic}} </td>\n                    </ng-container>\n                \n                    <ng-container matColumnDef=\"message\">\n                        <th mat-header-cell *matHeaderCellDef> Wiadomość </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.message | slice:0:30}} </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"senderName\">\n                        <th mat-header-cell *matHeaderCellDef> Wysłał </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.senderName}} </td>\n                    </ng-container>\n                \n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumnsReceivedMails\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumnsReceivedMails;\" (click)=\"openMail(row)\"></tr>\n                </table>\n            </div>\n        </mat-tab>\n        <mat-tab label=\"Wysłane wiadomości\">\n            <div>\n                <mat-paginator [length]=\"this.sendedMails?.length || 0\"\n                [pageSize]=\"5\"\n                [pageSizeOptions]=\"[3, 5, 10]\">\n                </mat-paginator>\n\n                <table mat-table [dataSource]=\"dataSourceSendedMails\" class=\"sended-messeges-list mat-elevation-z8\">\n                \n                    <ng-container matColumnDef=\"topic\">\n                    <th mat-header-cell *matHeaderCellDef> Temat </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.topic}} </td>\n                    </ng-container>\n                \n                    <ng-container matColumnDef=\"message\">\n                    <th mat-header-cell *matHeaderCellDef> Wiadomość </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.message | slice:0:30}} </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"status\">\n                        <th mat-header-cell *matHeaderCellDef> Status </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.status}} </td>\n                    </ng-container>\n                \n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumnsSendedMails\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumnsSendedMails;\" (click)=\"openMail(row)\"></tr>\n                </table>\n            </div>\n        </mat-tab>\n    </mat-tab-group>\n\n\n\n</div>\n\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginModel = {email: '', password: ''};\n\n  constructor(private userService: UserService, private router: Router, private authService: AuthService, private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    if (this.authService.isAuthenticated) this.router.navigate(['/przeglad'])\n  }\n\n  loginUser() {\n\n   this.userService.loginUser(this.loginModel.email, this.loginModel.password).subscribe(\n     res => {\n      localStorage.setItem('token', res.token);\n      localStorage.setItem('user', res.userId);\n      this.userService.changeOnlineStatus(res.userId).subscribe();\n      this.router.navigate(['/przeglad']);\n   },\n   error => {\n      if (error.error == 'Invalid email' || error.error == 'Invalid password') {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Nieprawidłowy adres email lub hasło', 'OK', {\n          horizontalPosition: 'right',\n          duration: 5000,\n          panelClass: ['snackbar-warn']\n        })\n      }\n      else if (error.error == 'User is blocked') {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Twoje konto zostało zbanowane', 'OK', {\n          horizontalPosition: 'right',\n          duration: 5000,\n          panelClass: ['snackbar-warn']\n        })\n      }\n      else if (error) {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Coś poszło nie tak, spróbuj ponownie później', 'OK', {\n          horizontalPosition: 'right',\n          duration: 5000,\n          panelClass: ['snackbar-warn']\n        })\n      }\n   })\n  }\n }\n","<div class=\"login-container\">\n    <form id=\"LoginForm\" class=\"login-form\" #LoginForm=\"ngForm\">\n\n        <div class=\"logo\">\n            <img src=\"../../../assets/images/logo-gray.png\" alt=\"logo\">\n        </div>\n\n        <h2 class=\"title\">Zaloguj się</h2>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Email</mat-label>\n            <input matInput class=\"form-control\" type=\"email\" placeholder=\"email\" name=\"email\" [(ngModel)]=\"loginModel.email\" #email=\"ngModel\">\n        </mat-form-field>\n    \n        <mat-form-field class=\"form-group\">\n            <mat-label>Hasło</mat-label>\n            <input matInput class=\"form-control\" type=\"password\" placeholder=\"hasło\" name=\"password\" [(ngModel)]=\"loginModel.password\" #password=\"ngModel\">\n        </mat-form-field>\n\n        <button mat-raised-button type=\"button\" [disabled]=\"LoginForm.form.invalid\" (click)=\"loginUser()\">Zaloguj się</button>\n    \n    </form>\n    <p class=\"register-button\">Nie masz jeszcze konta ? <a class=\"underline\" routerLink=\"/rejestracja\">Zarejestruj się</a></p>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FirmService } from 'src/app/services/firm.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ChangePermissionsModalComponent } from 'src/app/components/modals/change-permissions-modal/change-permissions-modal.component';\nimport { Router } from '@angular/router';\nimport { EditFirmDataModalComponent } from 'src/app/components/modals/edit-firm-data-modal/edit-firm-data-modal.component';\nimport { ConfirmLeavingFirmComponent } from 'src/app/components/modals/confirm-leaving-firm/confirm-leaving-firm.component';\n\n@Component({\n  selector: 'app-manage-firm',\n  templateUrl: './manage-firm.component.html',\n  styleUrls: ['./manage-firm.component.scss']\n})\nexport class ManageFirmComponent implements OnInit {\n\n  user;\n  userId = localStorage.getItem('user');\n  firm;\n  accountChangesContainer;\n  sidenavRefresh = false;\n\n  constructor(private firmService: FirmService, private userService: UserService, private dialog: MatDialog, private router: Router) { }\n\n  ngOnInit(): void {\n    this.refresh();\n  }\n\n  refresh() {\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n\n      this.firmService.getFirm(this.user.firmId).subscribe(response => {\n        this.firm = response;\n        this.accountChangesContainer = [...this.firm.firmBudget.income, ...this.firm.firmBudget.expense];\n      });\n    });\n  }\n\n  acceptUser(id) {\n    this.userService.acceptUserToFirm(id).subscribe(() => {\n      this.refresh();\n    });\n  }\n\n  discardUser(id) {\n    this.userService.discardUserToFirm(id).subscribe(() => {\n      this.refresh();\n    });\n  }\n\n  acceptBudgetChange(id) {\n    this.firmService.acceptBudgetChange(this.firm._id, id).subscribe(() => {\n      this.refresh();\n    });\n  }\n\n  discardBudgetChange(id) {\n    this.firmService.discardBudgetChange(this.firm._id, id).subscribe(() => {\n      this.refresh();\n    });\n  }\n\n  changePermissions(id) {\n    const ref = this.dialog.open(ChangePermissionsModalComponent, {\n      data: {\n        userId: this.user._id,\n        employeeId: id\n      }\n    });\n    ref.afterClosed().subscribe(() => {\n      this.refresh();\n    });\n  }\n\n  deleteEmployee(id) {\n    this.userService.deleteUserFromFirm(id).subscribe(() => {\n      this.refresh();\n    });\n  }\n\n  deleteFirm() {\n    this.firmService.deleteFirm(this.firm._id).subscribe();\n    this.router.navigate(['/przeglad']);\n    this.sidenavRefresh = true;\n  }\n\n  leaveFirm() {\n    let amountOfOwners = 0;\n    this.firm.users.forEach(user => {\n      if (user.firmStatus === 3) { amountOfOwners++; }\n    });\n    if (amountOfOwners === 1 && this.user.firmStatus === 3) {\n      const ref = this.dialog.open(ConfirmLeavingFirmComponent);\n      ref.afterClosed().subscribe(res => {\n        if (res === true) {\n          this.firmService.deleteFirm(this.firm._id).subscribe();\n          this.router.navigate(['/firma']);\n        }\n      });\n    }\n    else {\n      this.userService.leaveFirm(this.user._id).subscribe();\n      this.router.navigate(['/firma']);\n    }\n    this.sidenavRefresh = true;\n  }\n\n  editFirmData() {\n    const ref = this.dialog.open(EditFirmDataModalComponent, {\n      data: {\n        id: this.firm._id\n      }\n    });\n    ref.afterClosed().subscribe( () => {\n      this.refresh();\n    });\n  }\n\n}\n","<app-header pageName=\"Zarządzaj firmą\"></app-header>\n<app-sidenav shoouldRefresh=\"sidenavRefresh\"></app-sidenav>\n\n<div class=\"firm-manage-container\">\n\n    <div class=\"firm-section\">\n        <h2 class=\"title\">Dane firmy</h2>\n        <p *ngIf=\"user?.firmStatus == 3\" class=\"edit-button\" (click)=\"editFirmData()\" routerLink=\"/zarzadzaj-firma\">Edytuj</p>\n\n        <div class=\"firm-informations-item\">\n            <p class=\"label\">Nazwa</p>\n            <p class=\"item\"> {{firm?.name}} </p>\n        </div>\n        <div class=\"firm-informations-item\">\n            <p class=\"label\">Państwo</p>\n            <p class=\"item\"> {{firm?.address.country}} </p>\n        </div>\n        <div class=\"firm-informations-item\">\n            <p class=\"label\">Miasto</p>\n            <p class=\"item\"> {{firm?.address.city}} </p>\n        </div>\n        <div class=\"firm-informations-item\">\n            <p class=\"label\">Ulica</p>\n            <p class=\"item\"> {{firm?.address.street}} </p>\n        </div>\n    </div>\n\n    <div class=\"firm-section\" *ngIf=\"user?.firmStatus > 1\">\n        <h2 class=\"title\">Prośby o dołączenie</h2>\n        <!-- <div class=\"no-attempting\">\n            <p>Brak próśb o dołączenie</p>\n        </div> -->\n        <mat-list class=\"attempting-users\" *ngFor=\"let user of firm?.users\">\n            <mat-list-item class=\"attempting-users-item\" *ngIf=\"user.firmStatus == 0\" > \n                <p>{{user?.name}} {{user?.surname}}</p> \n                <div class=\"button-container\">\n                    <button mat-raised-button class=\"button--success\" type=\"button\" (click)=\"acceptUser(user._id)\"><mat-icon>add</mat-icon></button>\n                    <button mat-raised-button class=\"button--delete\" type=\"button\" (click)=\"discardUser(user._id)\"><mat-icon>delete</mat-icon></button>\n                </div>\n            </mat-list-item>\n        </mat-list>\n    </div>\n\n    <div class=\"firm-section\" *ngIf=\"user?.firmStatus > 1\">\n        <h2 class=\"title\">Prośby o dodanie wpłaty/wydatku</h2>\n        <!-- <div class=\"no-attempting\">\n            <p>Brak próśb o dołączenie</p>\n        </div> -->\n        <mat-list class=\"attempting-budget-changes\" *ngFor=\"let accountChange of accountChangesContainer\">\n            <mat-list-item class=\"attempting-budget-changes-item\" *ngIf=\"accountChange.status == 'Waiting'\">\n                <mat-icon mat-list-icon>credit_card</mat-icon>\n                <div mat-line> {{accountChange.name}} \n                    <span class=\"align-right\" [class]=\"accountChange.type=='income' ? 'income': 'expense'\">{{accountChange.money | currency: ' '}}zł</span>  \n                </div>\n                <div mat-line> {{accountChange.category.name}} \n                    <span class=\"align-right\">{{accountChange.date | date:'dd.MM.yyyy'}}</span> \n                </div>\n                <div class=\"button-container\">\n                    <button type=\"button\" mat-raised-button class=\"button--success\" (click)=\"acceptBudgetChange(accountChange._id)\"><mat-icon>add</mat-icon></button>\n                    <button type=\"button\" mat-raised-button class=\"button--delete\" (click)=\"discardBudgetChange(accountChange._id)\"><mat-icon>delete</mat-icon></button>\n                </div>\n                <mat-divider></mat-divider>\n            </mat-list-item>\n        </mat-list>\n    </div>\n\n    <div class=\"firm-section\" *ngIf=\"user?.firmStatus > 1\">\n        <h2 class=\"title\">Zarządzaj pracownikami</h2>\n        <!-- <div class=\"no-attempting\">\n            <p>Brak próśb o dołączenie</p>\n        </div> -->\n\n        <div *ngFor=\"let employee of firm?.users\">\n            <mat-card class=\"users-manage\" *ngIf=\"employee.firmStatus <= user?.firmStatus && employee.firmStatus > 0\">\n                <mat-card-header>\n                    <mat-card-title> {{employee.name}} {{employee.surname}} </mat-card-title>\n                    <mat-card-subtitle> {{employee.firmStatus == 1 ? 'Pracownik' : employee.firmStatus == 2 ? 'Kierownik' : 'Właściciel'}} \n                    </mat-card-subtitle>\n                </mat-card-header>\n                <mat-card-actions>\n                    <button mat-button class=\"button--gold\" (click)=\"changePermissions(employee._id)\">Uprawnienia</button>\n                    <button *ngIf=\"employee._id != user._id\" mat-button class=\"button--delete\" (click)=\"deleteEmployee(employee._id)\">Usuń</button>\n                </mat-card-actions>\n            </mat-card>\n        </div>\n    </div>\n\n    <div class=\"firm-section danger delete\">\n        <h2 class=\"title\">Opuść firme</h2>\n        <button mat-button class=\"button--delete\" (click)=\"leaveFirm()\">Opuść firmę</button>\n    </div>\n    \n    <div class=\"firm-section danger delete\" *ngIf=\"user?.firmStatus > 1\">\n        <h2 class=\"title\">Usuń firme</h2>\n        <button mat-button class=\"button--delete\" (click)=\"deleteFirm()\">Usuń firmę</button>\n    </div>\n\n    \n</div>\n\n\n<app-footer></app-footer>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { FirmService } from 'src/app/services/firm.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Income } from 'src/app/models/income';\nimport { Expense } from 'src/app/models/expense';\n\n@Component({\n  selector: 'app-money-transfer-firm',\n  templateUrl: './money-transfer-firm.component.html',\n  styleUrls: ['./money-transfer-firm.component.scss']\n})\nexport class MoneyTransferFirmComponent implements OnInit {\n\n  userId = localStorage.getItem('user');\n  user;\n  firm;\n  paymentModel = new Income('', null, null, {name: 'Przelew', icon: '', matches: []}, '', 'Waiting', '', '', '', '');\n  paymentToFirmModel = new Income('', null, null, {name: 'Przelew', icon: '', matches: []}, '', 'Waiting', '', '', '', '');\n  paymentFromFirmToUserModel = new Income('', null, null, {name: 'Przelew', icon: '', matches: []}, '', 'Waiting', '', '', '', '');\n  selectedUser;\n\n  constructor(private userService: UserService, private firmService: FirmService, public dialog: MatDialog,\n              private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n\n      this.firmService.getFirm(this.user.firmId).subscribe(response => {\n        this.firm = response;\n      });\n    });\n  }\n\n  sendPaymentToUser() {\n    if (!this.checkUserBudget(this.paymentModel)) { return; }\n\n    const expense = new Expense('', 0, null, {name: 'Przelew', icon: '', matches: []}, 'expense', '', '');\n    expense.name = this.paymentModel.name;\n    expense.money = this.paymentModel.money;\n    expense.date = new Date();\n    expense.type = 'expense';\n    expense.status = 'Accepted';\n    this.user.firmBudget.expense.push(expense);\n\n    this.paymentModel.type = 'income';\n    this.paymentModel.status = 'Accepted';\n    this.paymentModel.date = new Date();\n\n    this.user.budget.income.push(this.paymentModel);\n    this.userService.editUser(this.userId, this.user).subscribe(res => {\n      this.userService.playNotificationsSound();\n      this.snackBar.open('Udało się wysłać pieniądze', 'OK', {\n        panelClass: ['snackbar-success'],\n        duration: 5000,\n        horizontalPosition: 'right'\n      });\n    });\n  }\n\n  sendPaymentToFirm() {\n    if (!this.checkUserBudget(this.paymentToFirmModel)) { return; }\n\n    const expense = new Expense('', 0, null, {name: 'Przelew', icon: '', matches: []}, 'expense', '', '');\n    expense.name = this.paymentToFirmModel.name;\n    expense.money = this.paymentToFirmModel.money;\n    expense.date = new Date();\n    expense.type = 'expense';\n    expense.status = 'Waiting';\n    this.user.firmBudget.expense.push(expense);\n\n    this.paymentToFirmModel.type = 'income';\n    if (this.user.firmStatus > 1) {\n      this.paymentToFirmModel.status = 'Accepted';\n    }\n    else {\n      this.paymentToFirmModel.status = 'Waiting';\n    }\n    this.paymentToFirmModel.date = new Date();\n    this.paymentToFirmModel.senderName = this.user.name + ' ' + this.user.surname;\n    this.paymentToFirmModel.senderId = this.user._id;\n\n    this.firmService.getFirm(this.user.firmId).subscribe(res => {\n      this.firm = res;\n      this.firm.firmBudget.income.push(this.paymentToFirmModel);\n\n      this.firmService.editFirm(this.firm._id, this.firm).subscribe( () => {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Udało się wysłać pieniądze', 'OK', {\n          panelClass: ['snackbar-success'],\n          duration: 5000,\n          horizontalPosition: 'right'\n        });\n      });\n    });\n  }\n\n  sendPaymentFromFirmToUser() {\n    if (!this.checkFirmBudget(this.paymentFromFirmToUserModel)) { return; }\n\n    let totalExpense = 0;\n\n    this.paymentFromFirmToUserModel.type = 'income';\n    this.paymentFromFirmToUserModel.status = 'Accepted';\n    this.paymentFromFirmToUserModel.date = new Date();\n    this.paymentFromFirmToUserModel.senderName = this.firm.name;\n\n    this.selectedUser.forEach(user => {\n      user.firmBudget.income.push(this.paymentFromFirmToUserModel);\n      this.userService.editUser(user._id, user).subscribe();\n      totalExpense += this.paymentFromFirmToUserModel.money;\n    });\n\n    const expense = new Expense('', 0, null, {name: 'Przelew', icon: '', matches: []}, 'expense', '', '');\n    expense.name = this.paymentFromFirmToUserModel.name;\n    expense.money = totalExpense;\n    expense.date = new Date();\n    expense.type = 'expense';\n    expense.status = 'Accepted';\n    console.log(expense);\n    this.firm.firmBudget.expense.push(expense);\n\n    this.firmService.editFirm(this.firm._id, this.firm).subscribe(_ => {\n      this.userService.playNotificationsSound();\n      this.snackBar.open('Udało się wysłać pieniądze', 'OK', {\n        panelClass: ['snackbar-success'],\n        duration: 5000,\n        horizontalPosition: 'right'\n      });\n    });\n  }\n\n  checkUserBudget(payment) {\n    if (this.user.firmBudget.money - payment.money < 0) {\n      this.userService.playNotificationsSound();\n      this.snackBar.open('Zbyt mało środków na koncie', 'OK', {\n        panelClass: ['snackbar-warn'],\n        duration: 5000,\n        horizontalPosition: 'right'\n      });\n      return false;\n    }\n    return true;\n  }\n\n  checkFirmBudget(payment) {\n    if (this.firm.firmBudget.money - payment.money < 0) {\n      this.userService.playNotificationsSound();\n      this.snackBar.open('Zbyt mało środków na koncie', 'OK', {\n        panelClass: ['snackbar-warn'],\n        duration: 5000,\n        horizontalPosition: 'right'\n      });\n      return false;\n    }\n    return true;\n  }\n}\n","<app-header pageName=\"Przelew firmy\"></app-header>\n<app-sidenav></app-sidenav>\n\n    <mat-tab-group mat-align-tabs=\"center\" class=\"money-transfer-container\">\n        <mat-tab label=\"Przelew na swoje konto\">\n            <form class=\"send-money-form\" #SendMoneyForm=\"ngForm\">\n                <mat-form-field class=\"form-group\">\n                    <mat-label>Tytuł</mat-label>\n                    <input matInput class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"paymentModel.name\" #name=\"ngModel\" required>\n                </mat-form-field>\n            \n                <mat-form-field class=\"form-group\">\n                    <mat-label>Ilość pieniędzy</mat-label>\n                    <input matInput class=\"form-control\" type=\"number\" min=\"0\" name=\"money\" [(ngModel)]=\"paymentModel.money\" #money=\"ngModel\" required>\n                </mat-form-field>\n            \n                <mat-form-field class=\"form-group\">\n                    <mat-label>Wiadomość</mat-label>\n                    <textarea matInput class=\"form-control\" name=\"message\" [(ngModel)]=\"paymentModel.message\" #money=\"ngModel\"></textarea>\n                </mat-form-field>\n\n                <button mat-button class=\"btn-success\" type=\"button\" [disabled]=\"SendMoneyForm.form.invalid\" \n                (click)=\"sendPaymentToUser()\">Wykonaj</button>\n                \n            </form>\n        </mat-tab>\n        <mat-tab label=\"Przelew do firmy\">\n            <form class=\"send-money-form\" #SendMoneyFormToFirm=\"ngForm\">\n                <mat-form-field class=\"form-group\">\n                    <mat-label>Tytuł</mat-label>\n                    <input matInput class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"paymentToFirmModel.name\" #name=\"ngModel\" required>\n                </mat-form-field>\n            \n                <mat-form-field class=\"form-group\">\n                    <mat-label>Ilość pieniędzy</mat-label>\n                    <input matInput class=\"form-control\" type=\"number\" min=\"0\" name=\"money\" [(ngModel)]=\"paymentToFirmModel.money\" #money=\"ngModel\" required>\n                </mat-form-field>\n            \n                <mat-form-field class=\"form-group\">\n                    <mat-label>Wiadomość</mat-label>\n                    <textarea matInput class=\"form-control\" name=\"message\" [(ngModel)]=\"paymentToFirmModel.message\" #money=\"ngModel\"></textarea>\n                </mat-form-field>\n\n                <button mat-button class=\"btn-success\" type=\"button\" [disabled]=\"SendMoneyFormToFirm.form.invalid\" \n                (click)=\"sendPaymentToFirm()\">Wykonaj</button>\n                \n            </form>\n        </mat-tab>\n        <mat-tab *ngIf=\"user?.firmStatus > 1\" label=\"Przelew z firmy do użytkownika\">\n            <form class=\"send-money-form\" #SendMoneyFormFromFirmToUser=\"ngForm\">\n                <mat-form-field class=\"form-group\">\n                    <mat-label>Tytuł</mat-label>\n                    <input matInput class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"paymentFromFirmToUserModel.name\" #name=\"ngModel\" required>\n                </mat-form-field>\n            \n                <mat-form-field class=\"form-group\">\n                    <mat-label>Ilość pieniędzy</mat-label>\n                    <input matInput class=\"form-control\" type=\"number\" min=\"0\" name=\"money\" [(ngModel)]=\"paymentFromFirmToUserModel.money\" #money=\"ngModel\" required>\n                </mat-form-field>\n            \n                <mat-form-field class=\"form-group\">\n                    <mat-label>Wiadomość</mat-label>\n                    <textarea matInput class=\"form-control\" name=\"message\" [(ngModel)]=\"paymentFromFirmToUserModel.message\" #money=\"ngModel\"></textarea>\n                </mat-form-field>\n\n                \n                <mat-form-field class=\"form-group\">\n                    <mat-label>Użytkownik</mat-label>\n                    <mat-select multiple [(ngModel)]=\"selectedUser\" class=\"select\" name=\"user\" required>\n                        <mat-option *ngFor=\"let user of firm?.users\" [value]=\"user\">{{user.name}} {{user.surname}}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n\n                <button mat-button class=\"btn-success\" type=\"button\" [disabled]=\"SendMoneyFormFromFirmToUser.form.invalid\" \n                (click)=\"sendPaymentFromFirmToUser()\">Wykonaj</button>\n                \n            </form>\n        </mat-tab>\n    </mat-tab-group>\n\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SendMoneyDialogComponent } from 'src/app/components/modals/send-money-dialog/send-money-dialog.component';\nimport { FirmService } from 'src/app/services/firm.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { EventEmitterService } from 'src/app/services/event-emitter.service';\nimport { Income } from 'src/app/models/income';\nimport { Expense } from 'src/app/models/expense';\nimport { Budget } from 'src/app/models/budget';\n\n@Component({\n  selector: 'app-money-transfer',\n  templateUrl: './money-transfer.component.html',\n  styleUrls: ['./money-transfer.component.scss']\n})\nexport class MoneyTransferComponent implements OnInit {\n\n  user;\n  userId = localStorage.getItem('user');\n  users;\n  firms;\n  searchedUser: string;\n  searchedFirm: string;\n  awaitingPayments;\n  paymentModel = new Income('Przelew własny', null, null, {name: 'Przelew', icon: '', matches: []}, '', 'Accepted', '', '', '', '');\n\n  constructor(private userService: UserService, private firmService: FirmService, public dialog: MatDialog,\n              private snackBar: MatSnackBar, private router: Router, private eventEmitterService: EventEmitterService) { }\n\n  ngOnInit(): void {\n    this.refreshList();\n\n    this.userService.getUsers().subscribe(res => {\n      this.users = res;\n      this.users = this.users.filter(user => {\n        return user._id !== this.userId;\n      });\n    });\n\n    this.firmService.getFirms().subscribe(res => {\n      this.firms = res;\n    });\n  }\n\n  refreshList() {\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.user = res;\n\n      this.awaitingPayments = [...this.user.budget.income];\n\n      this.awaitingPayments = this.awaitingPayments.filter(payment => {\n        return payment.status === 'Waiting';\n      });\n      this.awaitingPayments = this.awaitingPayments.filter(payment =>\n        !this.user.disabledUser.filter(user => user === payment.senderId).length\n      );\n\n      this.awaitingPayments.forEach(payment => {\n        this.userService.getUser(payment.senderId).subscribe(response => {\n          payment.sender = response.name + ' ' + response.surname;\n          payment.senderImage = response.photo;\n        });\n      });\n    });\n  }\n\n  sendMoney(target, type) {\n    let blockedUser = false;\n\n    target.disabledUser.map(user => {\n      if (user === this.userId) {\n        blockedUser = true;\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Użytkownik docelowy zablokował Ci możliwość wysyłania pieniędzy', 'OK', {\n          duration: 5000,\n          horizontalPosition: 'right',\n          panelClass: ['snackbar-warn']\n        });\n        return;\n      }\n    });\n\n    if (target.settings.allowReceivingTransfers === false) {\n      this.userService.playNotificationsSound();\n      this.snackBar.open('Użytkownik docelowy zablokował możliwość wysyłania przelewów', 'OK', {\n        duration: 5000,\n        horizontalPosition: 'right',\n        panelClass: ['snackbar-warn']\n      });\n      return;\n    }\n\n    if (!blockedUser) {\n      const ref = this.dialog.open(SendMoneyDialogComponent, {\n        data: {\n          target,\n          type,\n          senderName: this.user.name + ' ' + this.user.surname\n        }\n      });\n      ref.afterClosed().subscribe(res => {\n        if (res === true) {\n          this.userService.playNotificationsSound();\n          this.snackBar.open('Udało się wysłać przelew', 'OK', {\n            panelClass: ['snackbar-success'],\n            duration: 5000,\n            horizontalPosition: 'right',\n          });\n        }\n        else {\n          this.userService.playNotificationsSound();\n          this.snackBar.open('Nie powiodło się wysyłanie przelewu', 'OK', {\n            panelClass: ['snackbar-warn'],\n            duration: 5000,\n            horizontalPosition: 'right'\n          });\n        }\n      });\n    }\n  }\n\n  sendMoneyToFirmAccount() {\n\n    if (this.user.settings.isBudgetNegativeValueAllowed === false &&\n      this.user.budget.money - this.paymentModel.money < 0 ) {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Nie powiodło się wysyłanie przelewu, konto nie może być ujemne', 'OK', {\n          panelClass: ['snackbar-warn'],\n          duration: 5000,\n          horizontalPosition: 'right'\n        });\n        return;\n      }\n\n    this.paymentModel.date = new Date();\n\n    const expense = new Expense('', 0, null, {name: 'Przelew', icon: '', matches: []}, 'expense', '', '');\n    expense.name = this.paymentModel.name;\n    expense.money = this.paymentModel.money;\n    expense.date = this.paymentModel.date;\n    expense.type = 'expense';\n    expense.status = 'Accepted';\n    this.user.budget.expense.push(expense);\n\n    this.paymentModel.type = 'income';\n    this.paymentModel.senderId = this.user._id;\n\n    if (!this.user.firmBudget) { this.user.firmBudget = new Budget(0, [], []); }\n    this.user.firmBudget.income.push(this.paymentModel);\n    this.userService.editUser(this.userId, this.user).subscribe(res => {\n      this.userService.playNotificationsSound();\n      this.snackBar.open('Udało się wysłać pieniądze', 'OK', {\n        panelClass: ['snackbar-success'],\n        duration: 5000,\n        horizontalPosition: 'right'\n      });\n    });\n  }\n\n  acceptMoney(payment) {\n    this.user.awaitingPaymentsToAccept--;\n    this.user.budget.income.map(income => {\n      if (income._id === payment._id) {\n        income.status = 'Accepted';\n        return;\n      }\n    });\n    this.userService.editUser(this.userId, this.user).subscribe(() => {\n      this.refreshList();\n    });\n    this.eventEmitterService.invokeSidenavRefreshListFunction();\n  }\n\n  discardMoney(payment) {\n    this.user.awaitingPaymentsToAccept--;\n    // Deleting income for current user\n    this.user.budget.income.map((income, index) => {\n      if (income._id === payment._id) {\n        this.user.budget.income.splice(index, 1);\n        return;\n      }\n    });\n\n    this.userService.changeBudgetUser(this.userId, this.user).subscribe(() => {\n      this.refreshList();\n    });\n    // Deleting expense for sending user\n    let sender;\n\n    this.userService.getUser(payment.senderId).subscribe(res => {\n      sender = res;\n      sender.budget.expense = sender.budget.expense.filter((expense) => {\n        if (expense._id !== payment.expenseRef) { return expense; }\n      });\n      this.userService.editUser(sender._id, sender).subscribe(() => {\n        this.refreshList();\n      });\n    });\n    this.eventEmitterService.invokeSidenavRefreshListFunction();\n  }\n\n  disableUser(payment) {\n    if (!this.user.disabledUser) { this.user.disabledUser = []; }\n    this.user.disabledUser.push(payment.senderId);\n    this.awaitingPayments.map(p => {\n      if (p.senderId === payment.senderId) { this.discardMoney(p); }\n    });\n    this.userService.editUser(this.userId, this.user).subscribe(() => {\n      this.refreshList();\n    });\n    this.eventEmitterService.invokeSidenavRefreshListFunction();\n  }\n\n  goToProfile(id) {\n    this.router.navigate(['/profil'], {queryParams: {id}});\n  }\n\n}\n","<app-header pageName=\"Przelew\"></app-header>\n<app-sidenav></app-sidenav>\n\n    <mat-tab-group mat-align-tabs=\"center\" class=\"money-transfer-container\">\n        <mat-tab label=\"Przelew do użytkownika\">\n            <div class=\"transfer-user-container\">\n                <mat-form-field>\n                    <mat-label>Wyszukaj użytkownika</mat-label>\n                    <input matInput type=\"text\" [(ngModel)]=\"searchedUser\" autocomplete=\"off\">\n                </mat-form-field>\n    \n                <mat-list role=\"list\" class=\"list\" *ngFor=\"let user of users | moneyTransferPipe:searchedUser:'users'\">\n                    <mat-list-item role=\"listitem\" class=\"list-item\">\n                        <p (click)=\"goToProfile(user._id)\">{{user.name}} {{user.surname}}</p>\n                        <button mat-button class=\"send-button\" (click)=\"sendMoney(user, 'user')\"><mat-icon>payment</mat-icon></button>\n                    </mat-list-item>\n                    <mat-divider></mat-divider>\n                </mat-list>\n            </div>\n        </mat-tab>\n        <mat-tab *ngIf=\"user?.firmId && user?.firmId!=''\" label=\"Przelew do firmy\">\n            <form class=\"send-money-form\" #SendMoneyForm=\"ngForm\">\n                <mat-form-field class=\"form-group\">\n                    <mat-label>Tytuł</mat-label>\n                    <input matInput class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"paymentModel.name\" #name=\"ngModel\" required>\n                </mat-form-field>\n            \n                <mat-form-field class=\"form-group\">\n                    <mat-label>Ilość pieniędzy</mat-label>\n                    <input matInput class=\"form-control\" type=\"number\" min=\"0\" name=\"money\" [(ngModel)]=\"paymentModel.money\" #money=\"ngModel\" required>\n                </mat-form-field>\n            \n                <button mat-button class=\"btn-success\" type=\"button\" [disabled]=\"SendMoneyForm.form.invalid\" (click)=\"sendMoneyToFirmAccount()\">Wykonaj</button>\n            </form>\n        </mat-tab>\n        <mat-tab label=\"Oczekujące przelewy\">\n            <mat-card *ngFor=\"let payment of awaitingPayments\" class=\"awaiting-payments-container\">\n                <mat-card-header>\n                    <img mat-card-avatar class=\"header-image\" [src]=\"payment.senderImage ? payment.senderImage : '../../../assets/images/profile-default.png'\" alt=\"profile-picture\">\n                    <mat-card-title> {{payment?.sender}} - {{payment?.name}} </mat-card-title>\n                    <mat-card-subtitle> {{payment?.date | date:'dd.MM.yyyy'}} - {{payment?.money | currency:' '}}zł </mat-card-subtitle>\n                </mat-card-header>\n                <mat-card-content>\n                    <p> {{payment?.message || 'Brak wiadomości'}} </p>\n                </mat-card-content>\n                <mat-card-actions align=\"end\">\n                    <button mat-button type=\"button\" class=\"button-accept\" (click)=\"acceptMoney(payment)\"><mat-icon>done</mat-icon></button>\n                    <button mat-button type=\"button\" class=\"button-discard\" (click)=\"discardMoney(payment)\"><mat-icon>clear</mat-icon></button>\n                    <button mat-button type=\"button\" matTooltip=\"Zablokuj użytkownika\" matTooltipPosition=\"below\" class=\"button-disable-user\" (click)=\"disableUser(payment)\"><mat-icon>block</mat-icon></button>\n                </mat-card-actions>\n            </mat-card>\n        </mat-tab>\n    </mat-tab-group>\n\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.scss']\n})\nexport class OverviewComponent implements OnInit {\n\n  chartType=\"user\";\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header pageName=\"Przegląd\"></app-header>\n<div class=\"container\">\n    <app-sidenav></app-sidenav>\n    <app-budget-list></app-budget-list>\n    <app-budget-chart [chartType]=\"chartType\"></app-budget-chart>\n</div>\n<app-footer></app-footer>\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EditProfileModalComponent } from 'src/app/components/modals/edit-profile-modal/edit-profile-modal.component';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { ChangePasswordModalComponent } from 'src/app/components/modals/change-password-modal/change-password-modal.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { UnblockUserModalComponent } from 'src/app/components/modals/unblock-user-modal/unblock-user-modal.component';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  userId = localStorage.getItem('user');\n  user;\n  image;\n  loggedInUser = true;\n  searchedUserId;\n\n  constructor(private userService: UserService, public dialog: MatDialog, private route: ActivatedRoute, private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.refresh();\n  }\n\n  refresh() {\n    this.route.queryParams.subscribe(params => {\n      if (params.id) {\n        this.loggedInUser = false;\n        this.searchedUserId = params.id;\n      }\n    });\n    if (this.loggedInUser) {\n      this.userService.getUser(this.userId).subscribe(res => {\n        this.user = res;\n      });\n    }\n    else {\n      this.userService.getUser(this.searchedUserId).subscribe(res => {\n        this.user = res;\n      });\n    }\n  }\n\n  editProfile() {\n    const ref = this.dialog.open(EditProfileModalComponent);\n    ref.afterClosed().subscribe(() => {\n      this.refresh();\n    });\n  }\n\n  updateUserImage() {\n    console.log(this.image);\n  }\n}\n","<app-header pageName=\"Profil\"></app-header>\n<app-sidenav></app-sidenav>\n<div class=\"profile-container\">\n    <div class=\"profile-photo\">\n        <img [src]=\"user?.photo ? user?.photo : '../../../assets/images/profile-default.png'\" alt=\"profile\">\n        <div *ngIf=\"loggedInUser\" class=\"profile-photo-settings\">\n            <div class=\"settings-item\">\n                <form action=\"/users/upload-image\" method=\"POST\" enctype=\"multipart/form-data\">\n                    <mat-icon>add_a_photo</mat-icon>\n                    <label> Dodaj zdjęcie \n                        <input name=\"profileImage\" type=\"file\" placeholder=\"Dodaj zdjęcie\" style=\"display: none;\"> \n                    </label>\n                    <button type=\"submit\" mat-button>Załaduj</button>\n                </form>\n            </div>\n        </div>\n    </div>\n    <div class=\"profile-informations-container\">\n        <div class=\"informations-header\">\n            <h2 class=\"title\">Informacje</h2>\n            <p *ngIf=\"loggedInUser\" class=\"edit-button\" (click)=\"editProfile()\" >Edytuj</p>\n        </div>\n        <div class=\"information-item\">\n            <p class=\"label\">Imię</p>\n            <p class=\"item\"> {{user?.name}} </p>\n        </div>\n        <div class=\"information-item\">\n            <p class=\"label\">Nazwisko</p>\n            <p class=\"item\"> {{user?.surname}} </p>\n        </div>\n        <div class=\"information-item\">\n            <p class=\"label\">Data urodzenia</p>\n            <p class=\"item\"> {{user?.dateOfBirth | date:'dd/MM/yyyy'}} </p>\n        </div>\n        <div class=\"information-item\">\n            <p class=\"label\">Email</p>\n            <p class=\"item\"> {{user?.email}} </p>\n        </div>\n        <div class=\"information-item\">\n            <p class=\"label\">Numer telefonu</p>\n            <p class=\"item\"> (+48){{user?.phone}} </p>\n        </div>\n        <div class=\"information-item\">\n            <p class=\"label\">Płeć</p>\n            <p class=\"item\"> {{user?.sex=='man' ? 'Mężczyzna' : 'Kobieta'}} </p>\n        </div>\n        <div class=\"information-item\">\n            <p class=\"label\">Stanowisko</p>\n            <p class=\"item\"> {{user?.position?.name || 'Brak stanowiska'}}{{user?.position?.earnings ? ', wynagrodzenie: ' + user.position.earnings + 'zł' : ''}} </p>\n        </div>\n        <div class=\"information-item\">\n            <p class=\"label\">Opis</p>\n            <p class=\"item\"> {{user?.description || 'Brak opisu'}} </p>\n        </div>\n    </div>\n</div>\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/models/user';\nimport { UserService } from 'src/app/services/user.service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerModel = new User('', '', '', '', '', '', '', null, '', null, {name: '', earnings: 0}, '', 0, null, [], 0, null, null,\n  null, [], null);\n  users;\n\n  constructor(private userService: UserService, private router: Router, private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.userService.getUsers().subscribe(users => {\n      this.users = users;\n    });\n  }\n\n  addUser() {\n\n    console.log(this.checkIfEmailExist(this.registerModel.email));\n    if (this.checkIfEmailExist(this.registerModel.email))  {\n      return;\n    }\n\n    this.userService.addUser(this.registerModel).subscribe(\n      res => {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Poprawnie zarejestrowano użytkownika', 'OK', {\n          horizontalPosition: 'right',\n          duration: 5000,\n          panelClass: ['snackbar-success']\n        });\n        this.router.navigate(['/logowanie']);\n    },\n    error => {\n      this.userService.playNotificationsSound();\n      this.snackBar.open('Coś poszło nie tak, spróbuj ponownie później', 'OK', {\n        horizontalPosition: 'right',\n        duration: 5000,\n        panelClass: ['snackbar-warn']\n      });\n    });\n  }\n\n  checkIfEmailExist(email): boolean {\n    for (const user of this.users) {\n      if (user.email === email) {\n        this.snackBar.open('Podany adres email już istnieje', 'OK', {\n          horizontalPosition: 'right',\n          duration: 5000,\n          panelClass: ['snackbar-warn']\n        });\n        return true;\n      }\n    }\n    return false;\n  }\n\n}\n","<div class=\"register-container\">\n    <form id=\"RegisterForm\" class=\"register-form\" #RegisterForm=\"ngForm\">\n\n        <div class=\"logo\">\n            <img src=\"../../../assets/images/logo-gray.png\" alt=\"logo\">\n        </div>\n\n        <h2 class=\"title\">Zarejestruj się</h2>\n    \n        <mat-form-field class=\"form-group\">\n            <mat-label>Imie</mat-label>\n            <input matInput class=\"form-control\" type=\"text\" name=\"name\" [(ngModel)]=\"registerModel.name\" #name=\"ngModel\" pattern=\".{1,20}\" placeholder=\"Podaj swoję imie...\" required>\n            <!-- <div *ngIf=\"name.errors && name.touched\">\n                <p class=\"text--warn\" *ngIf=\"name.errors.required\">Imie jest wymagane</p>\n                <p class=\"text--warn\" *ngIf=\"name.errors.pattern\">Imie nie może mieć więcej niż 20 znaków</p>\n            </div> -->\n        </mat-form-field>\n    \n        <mat-form-field class=\"form-group\">\n            <mat-label>Nazwisko</mat-label>\n            <input matInput class=\"form-control\" type=\"text\" [class.input--warn]=\"surname.invalid && surname.touched\" placeholder=\"Podaj swoję nazwisko...\" name=\"surname\" \n            [(ngModel)]=\"registerModel.surname\" #surname=\"ngModel\" pattern=\".{1,20}\" required>\n            <!-- <div *ngIf=\"surname.errors && surname.touched\">\n                <p class=\"text--warn\" *ngIf=\"surname.errors.required\">Nazwisko jest wymagane</p>\n                <p class=\"text--warn\" *ngIf=\"surname.errors.pattern\">Nazwisko nie może mieć więcej niż 20 znaków</p>\n            </div> -->\n        </mat-form-field>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Hasło</mat-label>\n            <input matInput class=\"form-control\" type=\"password\" [class.input--warn]=\"password.invalid && password.touched\" placeholder=\"Hasło\" name=\"password\" \n            [(ngModel)]=\"registerModel.password\" #password=\"ngModel\" pattern=\".{8,}\" required>\n            <!-- <div *ngIf=\"password.errors && password.touched\">\n                <p class=\"text--warn\" *ngIf=\"password.errors.required\">Hasło jest wymagane</p>\n                <p class=\"text--warn\" *ngIf=\"password.errors.pattern\">Hasło musi mieć co najmniej 8 znaków</p>\n            </div> -->\n        </mat-form-field>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Email</mat-label>\n            <input matInput class=\"form-control\" type=\"email\" [class.input--warn]=\"email.invalid && email.touched\" placeholder=\"Email\" name=\"email\" \n            [(ngModel)]=\"registerModel.email\" #email=\"ngModel\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\" required>\n            <!-- <div *ngIf=\"email.errors && email.touched\">\n                <p class=\"text--warn\" *ngIf=\"email.errors.required\">Email jest wymagany</p>\n                <p class=\"text--warn\" *ngIf=\"email.errors.pattern\">Nieprawidłowy adres email</p>\n            </div> -->\n        </mat-form-field>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Numer telefonu</mat-label>\n            <input matInput class=\"form-control\" type=\"text\" [class.input--warn]=\"phone.invalid && phone.touched\" placeholder=\"Numer telefonu\" name=\"phone\" \n            [(ngModel)]=\"registerModel.phone\" #phone=\"ngModel\" pattern=\"\\d{9}\">\n            <!-- <div *ngIf=\"phone.errors && phone.touched\">\n                <p class=\"text--warn\" *ngIf=\"phone.errors.pattern\">Numer telefonu musi składać się z 9 cyfr</p>\n            </div> -->\n        </mat-form-field>\n\n        <mat-form-field class=\"form-group\">\n            <mat-label>Płeć</mat-label>\n            <mat-select class=\"select\" name=\"sex\" [(ngModel)]=\"registerModel.sex\" required>\n                <mat-option value=\"man\"> Mężczyzna </mat-option>\n                <mat-option value=\"woman\"> Kobieta </mat-option>\n            </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"form-group flex-item-full-width\" appearance=\"fill\">\n            <mat-label>Data urodzenia</mat-label>\n            <input matInput #dateOfBirth=\"ngModel\" name=\"dateOfBirth\" [matDatepicker]=\"picker\" [(ngModel)]=\"registerModel.dateOfBirth\" disabled required>\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker disabled=\"false\"></mat-datepicker>\n        </mat-form-field>\n\n        <button mat-raised-button class=\"register-button\" type=\"button\" [disabled]=\"RegisterForm.form.invalid\" (click)=\"addUser()\">Zarejestruj się</button>\n    \n    </form>\n    <p class=\"log-in-button\">Masz już konto ? <a class=\"underline\" routerLink=\"/logowanie\">Zaloguj się</a></p>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Settings } from '../../models/settings';\nimport { UserService } from 'src/app/services/user.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ChangePasswordModalComponent } from 'src/app/components/modals/change-password-modal/change-password-modal.component';\nimport { UnblockUserModalComponent } from 'src/app/components/modals/unblock-user-modal/unblock-user-modal.component';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n\n  userId = localStorage.getItem('user');\n  settingsModel = new Settings(null, null, null, null, null);\n\n  constructor(private userService: UserService, private snackBar: MatSnackBar, private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.settingsModel = res.settings;\n    });\n  }\n\n  saveSettings() {\n    this.userService.saveSettings(this.userId, this.settingsModel).subscribe(res => {\n      this.userService.playNotificationsSound();\n      this.snackBar.open('Ustawienia zapisano poprawnie', 'OK', {\n        duration: 5000,\n        horizontalPosition: 'right',\n        panelClass: ['snackbar-success']\n      });\n    });\n  }\n\n  changePassword() {\n    const dialogRef = this.dialog.open(ChangePasswordModalComponent, {\n      width: '300px',\n      height: '300px',\n      data: {\n        userId: this.userId\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(res => {\n      if (res === true) {\n        this.userService.playNotificationsSound();\n        this.snackBar.open('Pomyślnie zmieniono hasło', 'OK', {\n          duration: 5000,\n          horizontalPosition: 'right',\n          panelClass: ['snackbar-success']\n        });\n      }\n    });\n  }\n\n  unblockUser() {\n    const dialogRef = this.dialog.open(UnblockUserModalComponent, {\n      width: '400px',\n      height: '500px',\n      data: {\n        userId: this.userId\n      }\n    });\n  }\n\n}\n","<app-header pageName=\"Ustawienia\"></app-header>\n<app-sidenav></app-sidenav>\n\n<div class=\"settings-container\">\n\n    <form class=\"settings-form\" #SettingsForm=\"ngForm\">\n\n        <mat-checkbox color=\"primary\" class=\"form-control\" type=\"checkbox\" name=\"isBudgetNegativeValueAllowed\" [(ngModel)]=\"settingsModel.isBudgetNegativeValueAllowed\" #name=\"ngModel\" required>Pozwól na negatywne wartości budżetu</mat-checkbox>\n\n        <!-- <mat-checkbox color=\"primary\" class=\"form-control\" type=\"checkbox\" name=\"darkMode\" [(ngModel)]=\"settingsModel.darkMode\" #name=\"ngModel\" required>Ciemny motyw</mat-checkbox> -->\n\n        <mat-checkbox color=\"primary\" class=\"form-control\" type=\"checkbox\" name=\"notificationsSound\" [(ngModel)]=\"settingsModel.notificationsSound\" #name=\"ngModel\" required>Dźwięk powiadomień</mat-checkbox>\n\n        <mat-checkbox color=\"primary\" class=\"form-control\" type=\"checkbox\" name=\"allowReceivingTransfers\" [(ngModel)]=\"settingsModel.allowReceivingTransfers\" #name=\"ngModel\" required>Otrzymuj przelewy</mat-checkbox>\n\n        <label class=\"volume-container\">Głośność powiadomień\n            <mat-slider color=\"primary\" class=\"volume\" min=\"0\" max=\"100\" thumbLabel=\"true\" name=\"notificationVolume\" [(ngModel)]=\"settingsModel.notificationVolume\" #notificationVolume=\"ngModel\"></mat-slider>\n        </label>\n    \n        <button mat-button class=\"btn-success\" type=\"button\" (click)=\"saveSettings()\">Zapisz</button>\n    </form>\n\n    <div class=\"buttons-container\">\n        <button mat-raised-button (click)=\"changePassword()\">Zmień hasło</button>\n\n        <button mat-raised-button (click)=\"unblockUser()\">Odblokuj użytkownika</button>\n    </div>\n</div>\n\n<app-footer></app-footer>","import { Component, OnInit} from '@angular/core';\nimport { ChartService } from 'src/app/services/chart.service';\n\n@Component({\n  selector: 'app-user-charts',\n  templateUrl: './user-charts.component.html',\n  styleUrls: ['./user-charts.component.scss']\n})\nexport class UserChartsComponent implements OnInit {\n\n  chartType = \"user\";\n  chartDate = [new Date(), new Date()];\n\n  constructor(private chartService: ChartService) { }\n\n  ngOnInit(): void {\n  }\n\n  previousMonth(chart: number) {\n    this.chartDate[chart] = new Date(this.chartDate[chart].setMonth(this.chartDate[chart].getMonth()-1));\n  }\n\n  nextMonth(chart: number) {\n    this.chartDate[chart] = new Date(this.chartDate[chart].setMonth(this.chartDate[chart].getMonth()+1));\n  }\n\n}\n","<app-header pageName=\"Wykresy\"></app-header>\n<app-sidenav></app-sidenav>\n<div class=\"user-charts-container\">\n    <div class=\"container-small\">\n        <div class=\"month-container\">\n            <div class=\"arrow-left\" (click)=\"previousMonth(0)\"></div>\n            <div class=\"month-name\"> {{chartDate[0] | date: 'MMMM yyyy'}} </div>\n            <div class=\"arrow-right\" (click)=\"nextMonth(0)\"></div>\n        </div>\n        <app-budget-chart [chartType]=\"chartType\" [chartDate]=\"chartDate[0]\"></app-budget-chart>\n    </div>\n    <div class=\"container-small\">\n        <div class=\"month-container\">\n            <div class=\"arrow-left\" (click)=\"previousMonth(1)\"></div>\n            <div class=\"month-name\"> {{chartDate[1] | date: 'MMMM yyyy'}} </div>\n            <div class=\"arrow-right\" (click)=\"nextMonth(1)\"></div>\n        </div>\n        <app-vertical-bar-chart-incomes-expenses [chartType]=\"chartType\" [chartDate]=\"chartDate[1]\"></app-vertical-bar-chart-incomes-expenses>\n    </div>\n    <div class=\"container-small\">\n        <app-budget-forecasting-chart [chartType]=\"chartType\"></app-budget-forecasting-chart>\n    </div>\n</div>\n<app-footer></app-footer>\n\n","import { Expense } from './expense';\r\nimport { Income } from './income';\r\n\r\nexport class Budget {\r\n    constructor(\r\n        public money: number,\r\n        public expense: Expense[],\r\n        public income: Income[]\r\n    ) {}\r\n}\r\n","export class BudgetGoals {\r\n    constructor(\r\n        public name: string,\r\n        public goal: number,\r\n        public currentState: number,\r\n        public isCompleted: boolean,\r\n        public progress: number\r\n    ) {}\r\n}\r\n","import { Match } from './match';\r\n\r\nexport class Category {\r\n    constructor(\r\n        public name: string,\r\n        public icon: string,\r\n        public matches: Match[]\r\n    ) {}\r\n}\r\n","export class ChatMessageDto {\r\n    user: string;\r\n    message: string;\r\n\r\n    constructor(user: string, message: string) {\r\n        this.user = user;\r\n        this.message = message;\r\n    }\r\n}","import { Category } from './category';\r\n\r\nexport class Expense {\r\n    constructor(\r\n        public name: string,\r\n        public money: number,\r\n        public date: Date,\r\n        public category: Category,\r\n        public type: string,\r\n        public status: string,\r\n        public recipientName: string\r\n    ) {}\r\n}\r\n","import { Address } from './address';\r\nimport { User } from './user';\r\nimport { FirmBudget } from './firmBudget';\r\nimport { ChatMessageDto } from './chatMessageDto';\r\n\r\nexport class Firm {\r\n    constructor(\r\n        public name: string,\r\n        public address: Address,\r\n        public users: User[],\r\n        public firmBudget: FirmBudget,\r\n        public isDeleted: boolean,\r\n        public chatMessages: ChatMessageDto[]\r\n    ) {}\r\n}\r\n","import { Category } from './category';\r\n\r\nexport class Income {\r\n    constructor(\r\n        public name: string,\r\n        public money: number,\r\n        public date: Date,\r\n        public category: Category,\r\n        public type: string,\r\n        public status: string,\r\n        public message: string,\r\n        public senderId: string,\r\n        public senderName: string,\r\n        public expenseRef: string\r\n    ) {}\r\n}\r\n","export class Mail {\r\n    constructor(\r\n        public senderId: string,\r\n        public recipientId: string,\r\n        public senderName: string,\r\n        public topic: string,\r\n        public message: string,\r\n        public status: string,\r\n        public type: string\r\n    ) {}\r\n}","export class Settings {\r\n    constructor(\r\n        public isBudgetNegativeValueAllowed: boolean,\r\n        public darkMode: boolean,\r\n        public notificationsSound: boolean,\r\n        public allowReceivingTransfers: boolean,\r\n        public notificationVolume: number\r\n    ) {}\r\n}\r\n","import { Position } from './position';\r\nimport { Budget } from './budget';\r\nimport { Settings } from './settings';\r\nimport { BudgetGoals } from './budgetGoals';\r\n\r\nexport class User {\r\n    constructor(\r\n        public name: string,\r\n        public surname: string,\r\n        public password: string,\r\n        public email: string,\r\n        public phone: string,\r\n        public description: string,\r\n        public photo: string,\r\n        public dateOfBirth: Date,\r\n        public sex: string,\r\n        public budget: Budget,\r\n        public position: Position,\r\n        public firmId: string,\r\n        public firmStatus: number,\r\n        public firmBudget: Budget,\r\n        public disabledUser: [],\r\n        public awaitingPaymentsToAccept: number,\r\n        public admin: boolean,\r\n        public settings: Settings,\r\n        public isUserBlocked: boolean,\r\n        public budgetGoals: BudgetGoals[],\r\n        public isOnline: boolean\r\n    ) {}\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n\n  public jwtHelper: JwtHelperService = new JwtHelperService();\n\n  constructor() {}\n\n  public isAuthenticated(): boolean {\n    const token = localStorage.getItem('token') || '';\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { ConnectionService } from './connection.service';\nimport { Category } from '../models/category';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  constructor(private conn: ConnectionService) { }\n\n  getCategory(name) {\n    return this.conn.http.get<Category>(this.conn.url + `/categories/${name}`);\n  }\n\n  getAllCategories() {\n    return this.conn.http.get(this.conn.url + '/categories');\n  }\n\n  addCategory(category) {\n    return this.conn.http.post(this.conn.url + '/categories/create', category);\n  }\n\n  updateCategory(category) {\n    return this.conn.http.put(this.conn.url + '/categories/update', category);\n  }\n\n  chooseCategory(name) {\n    return this.conn.http.get<number>(this.conn.url + `/categories/choose-category/${name}`);\n  }\n\n  deleteCategory(category) {\n    return this.conn.http.delete(this.conn.url + `/categories/delete/${category._id}`);\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { ConnectionService } from './connection.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChartService {\n\n  public monthNames = ['Styczeń', 'Luty', 'Marzec', 'Kwiecień', 'Maj', 'Czerwiec', 'Lipiec', 'Sierpień', 'Wrzesień', 'Październik', 'Listopad', 'Grudzień'];\n\n  constructor(private conn: ConnectionService) { }\n\n  getMonthName(monthValue: number) {\n    return this.monthNames[monthValue];\n  }\n\n  getCurrentMonthChart(id: string, month: string) {\n    let data = {month: month};\n    return this.conn.http.get(this.conn.url + `/charts/currentMonthChart/${id}`, {\n      params: data\n    });\n  }\n\n  getFirmCurrentMothChart(id: string, month: string) {\n    let data = {month: month};\n    return this.conn.http.get(this.conn.url + `/charts/currentMonthChart/firm/${id}`, {\n      params: data\n    });\n  }\n\n  getCurrentMonthVerticalIncomeExpenseChart(id: string, month: string) {\n    let data = {month:month};\n    return this.conn.http.get(this.conn.url + `/charts/currentMonthVerticalIncomeExpenseChart/${id}`, {\n      params: data\n    });\n  }\n\n  getFirmCurrentMonthVerticalIncomeExpenseChart(id: string, month: string) {\n    let data = {month:month};\n    return this.conn.http.get(this.conn.url + `/charts/currentMonthVerticalIncomeExpenseChart/firm/${id}`, {\n      params: data\n    });\n  }\n\n  getForecastingChart(id: string) {\n    return this.conn.http.get(this.conn.url + `/charts/forecasting-chart/${id}`);\n  }\n\n  getFirmForecastingChart(id: string) {\n    return this.conn.http.get(this.conn.url + `/charts/forecasting-chart/firm/${id}`);\n  }\n\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConnectionService {\n\n  public url = `http://localhost:8000`;\n\n  constructor(public http: HttpClient) { }\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventEmitterService {\n\n  invokeSidenavComponentFunction = new EventEmitter();\n  subscription: Subscription;\n\n  constructor() { }\n\n  invokeSidenavRefreshListFunction() {\n    this.invokeSidenavComponentFunction.emit();\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { ConnectionService } from './connection.service';\nimport { Firm } from '../models/firm';\nimport { ChatMessageDto } from '../models/chatMessageDto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirmService {\n\n  constructor(private conn: ConnectionService) { }\n\n  getFirms() {\n    return this.conn.http.get(this.conn.url + '/firms');\n  }\n\n  getFirm(id) {\n    return this.conn.http.get<Firm>(this.conn.url + `/firms/${id}`);\n  }\n\n  getMessages(id: string) {\n    return this.conn.http.get<ChatMessageDto[]>(this.conn.url + `/firms/messages/${id}`);\n  }\n\n  editFirm(id, firm) {\n    return this.conn.http.put(this.conn.url + `/firms/${id}`, firm);\n  }\n\n  addFirm(firm, user) {\n    return this.conn.http.post(this.conn.url + '/firms/createfirm', {\n      firm,\n      user\n    });\n  }\n\n  acceptBudgetChange(firmId, id) {\n    return this.conn.http.put(this.conn.url + `/firms/${firmId}/acceptBudgetChange/${id}`, null);\n  }\n\n  discardBudgetChange(firmId, id) {\n    return this.conn.http.put(this.conn.url + `/firms/${firmId}/discardBudgetChange/${id}`, null);\n  }\n\n  deleteFirm(id) {\n    return this.conn.http.put(this.conn.url + `/firms/delete/${id}`, null);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ConnectionService } from './connection.service';\nimport { Mail } from '../models/mail';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MailService {\n\n  constructor(private conn: ConnectionService) { }\n\n  sendMessage(mail: Mail) {\n    return this.conn.http.put(this.conn.url + '/mail/send-message', mail);\n  }\n\n  getSendedMails(id: string) {\n    return this.conn.http.get(this.conn.url + `/mail/user-send-messages/${id}`);\n  }\n\n  getReceivedMails(id: string) {\n    return this.conn.http.get(this.conn.url + `/mail/user-received-messages/${id}`);\n  }\n\n  getMail(id) {\n    return this.conn.http.get<Mail>(this.conn.url + `/mail/${id}`);\n  }\n\n  getAllMails() {\n    return this.conn.http.get(this.conn.url + '/mail/mails');\n  }\n\n  reserveMail(mail, id) {\n    return this.conn.http.put(this.conn.url + `/mail/reserve-mail/${id}`, mail);\n  }\n\n  respondeToMail(mail) {\n    return this.conn.http.put(this.conn.url + `/mail/responde-mail`, mail); \n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { ConnectionService } from './connection.service';\nimport { User } from '../models/user';\nimport { Settings } from '../models/settings';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  userId = localStorage.getItem('user');\n\n  constructor(private conn: ConnectionService) { }\n\n  getUsers() {\n    return this.conn.http.get(this.conn.url + '/users');\n  }\n\n  uploadProfilePhoto(id: number, profilePhoto: File) {\n    return this.conn.http.post(this.conn.url + `/users/changeprofileimage/${id}`, profilePhoto);\n  }\n\n  addUser(user: User) {\n    return this.conn.http.post<any>(this.conn.url + '/users', user);\n  }\n\n  getUser(id: string) {\n    return this.conn.http.get<User>(this.conn.url + `/users/${id}`);\n  }\n\n  loginUser(email: string, password: string) {\n    return this.conn.http.post<any>(this.conn.url + '/users/login', {\n      email,\n      password\n    });\n  }\n\n  editUser(id: string, user: User) {\n    return this.conn.http.put<User>(this.conn.url + `/users/${id}`, user);\n  }\n\n  changeBudgetUser(id: string, user: User) {\n    return this.conn.http.put<User>(this.conn.url + `/users/${id}/changebudget`, user);\n  }\n\n  joinFirm(id: string, user: User) {\n    return this.conn.http.put<User>(this.conn.url + `/users/joinfirm/${id}`, user);\n  }\n\n  acceptUserToFirm(id: string) {\n    return this.conn.http.put(this.conn.url + `/users/acceptUserToFirm/${id}`, null);\n  }\n\n  discardUserToFirm(id: string) {\n    return this.conn.http.put(this.conn.url + `/users/discardUserToFirm/${id}`, null);\n  }\n\n  deleteUserFromFirm(id: string) {\n    return this.conn.http.put(this.conn.url + `/users/${id}/deleteUserFromFirm`, null);\n  }\n\n  changeUserPermissions(id: string, status: number) {\n    return this.conn.http.put(this.conn.url + `/users/${id}/changePermissions/${status}`, null);\n  }\n\n  leaveFirm(id: string) {\n    return this.conn.http.put(this.conn.url + `/users/leaveFirm/${id}`, null);\n  }\n\n  loggedIn() {\n    return !!localStorage.getItem('token');\n  }\n\n  saveSettings(id: string, settings: Settings) {\n    return this.conn.http.put(this.conn.url + `/users/edit-settings/${id}`, settings);\n  }\n\n  playNotificationsSound() {\n    if (!localStorage.getItem('user')) {\n      const audio = new Audio();\n      audio.src = '../../assets/sounds/notification.mp3';\n      audio.load();\n      audio.volume = 0.5;\n      audio.play();\n    }\n    else {\n      this.getUser(this.userId).subscribe(res => {\n        if (res.settings.notificationsSound === true) {\n          const audio = new Audio();\n          audio.src = '../../assets/sounds/notification.mp3';\n          audio.load();\n          audio.volume = res.settings.notificationVolume;\n          audio.play();\n        }\n      });\n    }\n  }\n\n  restartPassword(user) {\n    return this.conn.http.get(this.conn.url + `/users/restore-password/${user._id}`);\n  }\n\n  blockUser(user) {\n    return this.conn.http.put(this.conn.url + `/users/block-user/${user._id}`, user);\n  }\n\n  unblockUser(user) {\n    return this.conn.http.put(this.conn.url + `/users/unblock-user/${user._id}`, user);\n  }\n\n  getUserBudgetGoals(id: string) {\n    return this.conn.http.get(this.conn.url + `/users/budget-goals/${id}`);\n  }\n\n  addBudgetGoal(goal, userId) {\n    return this.conn.http.post(this.conn.url + `/users/add-goal/${userId}`, goal);\n  }\n\n  updateBudgetGoal(goal, userId, money) {\n    return this.conn.http.put(this.conn.url + `/users/update-goal/${userId}`, {\n      goal,\n      money\n    });\n  }\n\n  changePassword(userId, password, newPassword) {\n    return this.conn.http.put(this.conn.url + `/users/change-password/${userId}`, {\n      password,\n      newPassword\n    });\n  }\n\n  changeOnlineStatus(userId) {\n    return this.conn.http.put(this.conn.url + `/users/change-online-status/${userId}`, null);\n  }\n\n  getUserStatus(userId) {\n    return this.conn.http.get(this.conn.url + `/users/status/${userId}`);\n  }\n\n  sendMoney(expenseUserId, expense, incomeUserId, income) {\n    return this.conn.http.put(this.conn.url + `/users/send-money`, {\n      expenseUserId,\n      expense,\n      incomeUserId,\n      income\n    });\n  }\n\n  editGoal(userId, goal) {\n    return this.conn.http.put(this.conn.url + `/users/edit-goal/${userId}`, goal);\n  }\n\n  deleteGoal(userId, goal) {\n    return this.conn.http.put(this.conn.url + `/users/delete-goal/${userId}`, goal);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ChatMessageDto } from '../models/chatMessageDto';\nimport { ConnectionService } from './connection.service';\nimport { FirmService } from './firm.service';\nimport { UserService } from './user.service';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebSocketService {\n\n userId = localStorage.getItem('user');\n webSocket: WebSocket;\n chatMessages: ChatMessageDto[] = [];\n firm;\n private event = new Subject<boolean>();\n event$ = this.event.asObservable();\n\n  constructor(private conn: ConnectionService, private firmService: FirmService, private userService: UserService,\n              private window: Window) { }\n\n  public openWebSocket() {\n    this.webSocket = new WebSocket('ws://localhost:8000/chat');\n    this.userService.getUser(this.userId).subscribe(res => {\n      this.firmService.getMessages(res.firmId).subscribe(response => {\n        this.chatMessages = response;\n      });\n\n      this.firmService.getFirm(res.firmId).subscribe(response => {\n        this.firm = response;\n      });\n\n    });\n\n    this.webSocket.onopen = (event) => {\n      console.log('Open: ', event);\n      this.webSocket.send(JSON.stringify({method: 'new', userId: this.userId}));\n      this.event.next(true);\n    };\n\n    this.webSocket.onmessage = (event) => {\n      const chatMessageDto = Object.assign({}, JSON.parse(event.data));\n      if (chatMessageDto.status) {\n        console.log(chatMessageDto.status);\n      }\n      else {\n        this.chatMessages.push(chatMessageDto.params.message);\n      }\n    };\n\n    this.webSocket.onclose = (event) => {\n      console.log('Close: ', event);\n      this.event.next(false);\n    };\n  }\n\n  public send(data) {\n    this.webSocket.send(JSON.stringify(data));\n  }\n\n  public sendMessage(chatMessageDto: ChatMessageDto, firmId: string) {\n    try {\n      this.webSocket.send(JSON.stringify({\n        method: 'message',\n        chatMessageDto,\n        firmId\n      }));\n    }catch (error) {\n      console.error(error);\n      return false;\n    }\n  }\n\n  public closeWebSocket() {\n    this.webSocket.close();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}